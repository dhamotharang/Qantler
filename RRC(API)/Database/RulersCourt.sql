USE [master]
GO
/****** Object:  Database [RulersCourt]    Script Date: 28-Dec-19 10:23:57 PM ******/
CREATE DATABASE [RulersCourt]
GO

USE [RulersCourt]
GO

/****** Object:  UserDefinedFunction [dbo].[StripHTML]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create function [dbo].[StripHTML]( @text varchar(max) ) returns varchar(max) as
begin
    declare @textXML xml
    declare @result varchar(max)
    set @textXML = REPLACE( @text, '&', '' );
    with doc(contents) as
    (
        select chunks.chunk.query('.') from @textXML.nodes('/') as chunks(chunk)
    )
    select @result = contents.value('.', 'varchar(max)') from doc
    return @result
end
GO
/****** Object:  Table [dbo].[Announcement]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Announcement](
	[AnnouncementID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[AnnouncementType] [nvarchar](250) NULL,
	[AnnouncementDescription] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Announcement] PRIMARY KEY CLUSTERED 
(
	[AnnouncementID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AnnouncementHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AnnouncementHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[AnnouncementID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](250) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_AnnouncementHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AnnouncementTypeAndDescription]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AnnouncementTypeAndDescription](
	[AnnouncementTypeID] [int] IDENTITY(1,1) NOT NULL,
	[AnnouncementTypeName] [nvarchar](250) NULL,
	[Description] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[AnnouncementTypeNameAr] [nvarchar](255) NULL,
	[DescriptionAr] [nvarchar](max) NULL,
 CONSTRAINT [PK_AnnouncementTypeAndDescription] PRIMARY KEY CLUSTERED 
(
	[AnnouncementTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ApplicationSyncInfo]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ApplicationSyncInfo](
	[ExternalAppName] [nvarchar](50) NULL,
	[SyncDateTime] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Attachments]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Attachments](
	[AttachmentID] [int] IDENTITY(1,1) NOT NULL,
	[ServiceID] [int] NULL,
	[Type] [nvarchar](100) NULL,
	[AttachmentGuid] [nvarchar](150) NULL,
	[AttachmentsName] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
 CONSTRAINT [PK_MemoAttachments] PRIMARY KEY CLUSTERED 
(
	[AttachmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BabyAddition]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BabyAddition](
	[BabyAdditionID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[BabyName] [nvarchar](250) NULL,
	[Gender] [nvarchar](250) NULL,
	[Birthday] [datetime] NULL,
	[HospitalName] [nvarchar](250) NULL,
	[CountryofBirth] [nvarchar](250) NULL,
	[CityofBirth] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_BabyBonus] PRIMARY KEY CLUSTERED 
(
	[BabyAdditionID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[BabyAdditionHistroy]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[BabyAdditionHistroy](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[BabyAdditionID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](250) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_BabyAdditionHistroy] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CAComplaintSuggestions]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CAComplaintSuggestions](
	[CAComplaintSuggestionsID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Type] [nvarchar](50) NULL,
	[Source] [nvarchar](max) NULL,
	[Subject] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[RequestCreatedBy] [nvarchar](250) NULL,
	[MailID] [nvarchar](250) NULL,
	[PhoneNumber] [nvarchar](50) NULL,
	[ActionTaken] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_CitizenAffairComplaintSuggestions] PRIMARY KEY CLUSTERED 
(
	[CAComplaintSuggestionsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CAComplaintSuggestionsHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CAComplaintSuggestionsHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[CAComplaintSuggestionsID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](250) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_CitizenAffairComplaintSuggestionsHistroy] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Calendar]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Calendar](
	[CalendarID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[EventRequestor] [nvarchar](250) NULL,
	[EventType] [int] NULL,
	[EventDetails] [nvarchar](max) NULL,
	[DateFrom] [datetime] NULL,
	[DateTo] [datetime] NULL,
	[AllDayEvents] [bit] NULL,
	[Location] [int] NULL,
	[City] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ParentReferenceNumber] [nvarchar](250) NULL,
	[IsApologiesSent] [bit] NULL,
 CONSTRAINT [PK_Calendar] PRIMARY KEY CLUSTERED 
(
	[CalendarID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CalendarCommunicationHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CalendarCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[CalendarID] [int] NULL,
	[Action] [nvarchar](250) NULL,
	[Comment] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_CalendarCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Campaign]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Campaign](
	[CampaignID] [int] IDENTITY(1,1) NOT NULL,
	[ActivityDetails] [nvarchar](250) NULL,
	[CampaignStartDate] [datetime] NULL,
	[CampaignPeriod] [nvarchar](250) NULL,
	[DiwansRole] [nvarchar](max) NULL,
	[OtherEntities] [nvarchar](max) NULL,
	[Notes] [nvarchar](max) NULL,
	[TargetsAudience] [nvarchar](max) NULL,
	[RequestDetails] [nvarchar](max) NULL,
	[RequestDate] [datetime] NULL,
	[GeneralInformation] [nvarchar](max) NULL,
	[MainObjective] [nvarchar](max) NULL,
	[WhereEver] [nvarchar](max) NULL,
	[What] [nvarchar](max) NULL,
	[MainIdea] [nvarchar](max) NULL,
	[StrategicGoalsPlanandVisionofRRC] [nvarchar](max) NULL,
	[Languages] [nvarchar](max) NULL,
	[MediaChannel] [nvarchar](max) NULL,
	[MediaManager] [nvarchar](250) NULL,
	[MediaStaff] [nvarchar](250) NULL,
	[Attachments] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Campaign] PRIMARY KEY CLUSTERED 
(
	[CampaignID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CarCompany]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CarCompany](
	[CarCompanyID] [int] IDENTITY(1,1) NOT NULL,
	[CompanyName] [nvarchar](250) NULL,
	[ContactName] [nvarchar](250) NULL,
	[ContactNumber] [nvarchar](50) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_CarCompany] PRIMARY KEY CLUSTERED 
(
	[CarCompanyID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Certificate]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Certificate](
	[CertificateID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[Attention] [nvarchar](250) NULL,
	[To] [nvarchar](250) NULL,
	[SalaryCertificateClassification] [nvarchar](250) NULL,
	[Reason] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[CertificateType] [nvarchar](250) NULL,
 CONSTRAINT [PK_Certificate] PRIMARY KEY CLUSTERED 
(
	[CertificateID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CertificateHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CertificateHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[CertificateID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_CertificateHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Circular]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Circular](
	[CircularID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[Title] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[Priority] [nvarchar](250) NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[InitalApproverDepartment] [int] NULL,
 CONSTRAINT [PK_Circular] PRIMARY KEY CLUSTERED 
(
	[CircularID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CircularDestinationDepartment]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CircularDestinationDepartment](
	[CircularDestinationDepartmentID] [int] IDENTITY(1,1) NOT NULL,
	[CircularID] [int] NULL,
	[DepartmentID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_CircularDestinationDepartment] PRIMARY KEY CLUSTERED 
(
	[CircularDestinationDepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CircularHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CircularHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[CircularID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_CircularHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CitizenAffair]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CitizenAffair](
	[CitizenAffairID] [int] IDENTITY(1,1) NOT NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[RequestType] [nvarchar](255) NULL,
	[InitalApproverDepartmentID] [int] NULL,
	[NotifyUpon] [nvarchar](255) NULL,
	[InternalRequestorID] [int] NULL,
	[InternalRequestorDepartmentID] [int] NULL,
	[ExternalRequestEmailID] [nvarchar](255) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_CitizenAffair] PRIMARY KEY CLUSTERED 
(
	[CitizenAffairID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CitizenAffairHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CitizenAffairHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[CitizenAffairID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_CitizenAffairHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CitizenAffairPersonalReport]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CitizenAffairPersonalReport](
	[PersonalReportID] [int] IDENTITY(1,1) NOT NULL,
	[CitizenAffairID] [int] NULL,
	[Name] [nvarchar](255) NULL,
	[Employer] [nvarchar](255) NULL,
	[Destination] [nvarchar](255) NULL,
	[MonthlySalary] [nvarchar](255) NULL,
	[EmiratesID] [nvarchar](255) NULL,
	[MaritalStatus] [nvarchar](255) NULL,
	[NoOfChildrens] [nvarchar](255) NULL,
	[PhoneNumber] [nvarchar](255) NULL,
	[Emirates] [int] NULL,
	[City] [nvarchar](255) NULL,
	[Age] [nvarchar](255) NULL,
	[ReportObjectives] [nvarchar](max) NULL,
	[FindingNotes] [nvarchar](max) NULL,
	[Recommendation] [nvarchar](max) NULL,
	[PersonalProfilePhotoID] [nvarchar](255) NULL,
	[PersonalProfileName] [nvarchar](255) NULL,
 CONSTRAINT [PK_CitizenAffairPersonalReport] PRIMARY KEY CLUSTERED 
(
	[PersonalReportID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CitizenAffarFieldVisit]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CitizenAffarFieldVisit](
	[CreationFieldID] [int] IDENTITY(1,1) NOT NULL,
	[CitizenAffairID] [int] NULL,
	[Date] [datetime] NULL,
	[Location] [nvarchar](255) NULL,
	[RequetsedBy] [nvarchar](255) NULL,
	[VisitObjective] [nvarchar](max) NULL,
	[FindingNotes] [nvarchar](max) NULL,
	[ForWhom] [nvarchar](100) NULL,
	[EmiratesID] [nvarchar](255) NULL,
	[Name] [nvarchar](255) NULL,
	[PhoneNumber] [nvarchar](255) NULL,
	[City] [int] NULL,
	[LocationName] [nvarchar](255) NULL,
	[LocationID] [int] NULL,
	[Emirates] [int] NULL,
	[CityID] [int] NULL,
 CONSTRAINT [PK_CitizenAffarFieldVisit] PRIMARY KEY CLUSTERED 
(
	[CreationFieldID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Compensation]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Compensation](
	[CompensationID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[OfficialTaskID] [int] NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[OfficialTaskType] [nvarchar](250) NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[NumberofDays] [int] NULL,
	[CompensationDescription] [nvarchar](max) NULL,
	[NeedCompensation] [bit] NULL,
	[Comments] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsHrHeadApproved] [int] NULL,
 CONSTRAINT [PK_Compensation] PRIMARY KEY CLUSTERED 
(
	[CompensationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CompensationCommunicationHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CompensationCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[CompensationID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_CompensationCommunicationChat] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Contact]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Contact](
	[ContactID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Type] [nvarchar](250) NULL,
	[Department] [nvarchar](250) NULL,
	[UserName] [nvarchar](250) NULL,
	[EntityName] [nvarchar](250) NULL,
	[Designation] [nvarchar](250) NULL,
	[EmailId] [nvarchar](50) NULL,
	[PhoneNumber] [nvarchar](50) NULL,
	[OfficialEntity] [bit] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsGoverenmentEntity] [int] NULL,
	[ProfilePhotoID] [nvarchar](250) NULL,
	[ProfilePhotoName] [nvarchar](250) NULL,
	[Section] [int] NULL,
	[Unit] [int] NULL,
	[PhoneNumberExtension] [nvarchar](10) NULL,
 CONSTRAINT [PK_ContactManagement] PRIMARY KEY CLUSTERED 
(
	[ContactID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ContactHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ContactHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[ContactID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](250) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_ContactManagementHistroy] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CVBank]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CVBank](
	[CVBankId] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[CandidateName] [nvarchar](250) NULL,
	[Specialization] [int] NULL,
	[EducationalQualification] [nvarchar](max) NULL,
	[Gender] [nvarchar](250) NULL,
	[AreaofExpertise] [nvarchar](250) NULL,
	[YearsofExperience] [nvarchar](250) NULL,
	[CountryofResidence] [int] NULL,
	[CityofResidence] [int] NULL,
	[Address] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[EmailId] [nvarchar](250) NULL,
	[JobTitle] [nvarchar](250) NULL,
 CONSTRAINT [PK_CVBank] PRIMARY KEY CLUSTERED 
(
	[CVBankId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DiwanIdentity]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DiwanIdentity](
	[DiwanIdentityID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[PurposeofUse] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK_DiwanIdentity] PRIMARY KEY CLUSTERED 
(
	[DiwanIdentityID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DiwanIdentityCommunicationHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DiwanIdentityCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[DiwanIdentityID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_DiwanIdentifyCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Documents]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Documents](
	[AttachmentID] [int] IDENTITY(1,1) NOT NULL,
	[Type] [nvarchar](100) NULL,
	[AttachmentGuid] [nvarchar](max) NULL,
	[AttachmentsName] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Documents] PRIMARY KEY CLUSTERED 
(
	[AttachmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Drivers]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Drivers](
	[DriverID] [int] IDENTITY(1,1) NOT NULL,
	[UserProfileID] [int] NOT NULL,
	[LogDate] [datetime] NULL,
	[ExtraHours] [float] NULL,
	[CompensateHours] [float] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [bit] NULL,
	[UpdatedBy] [bit] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Drivers] PRIMARY KEY CLUSTERED 
(
	[DriverID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTask]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTask](
	[TaskID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[Title] [nvarchar](255) NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[TaskDetails] [nvarchar](max) NULL,
	[Priority] [nvarchar](255) NULL,
	[LinkToMemo] [nvarchar](255) NULL,
	[LinkToLetter] [nvarchar](255) NULL,
	[RemindMeAt] [datetime] NULL,
	[Status] [int] NULL,
	[AssigneeID] [int] NULL,
	[IsRead] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[DelegateAssignee] [int] NULL,
	[AssigneeDepartment] [int] NULL,
	[Country] [int] NULL,
	[City] [nvarchar](250) NULL,
	[Emirates] [int] NULL,
 CONSTRAINT [PK_DutyTask] PRIMARY KEY CLUSTERED 
(
	[TaskID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[Action] [nvarchar](255) NULL,
	[AttachmentGuid] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_DutyTaskCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskLabel]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskLabel](
	[LabelID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[UserID] [int] NULL,
	[Labels] [nvarchar](250) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskLabel] PRIMARY KEY CLUSTERED 
(
	[LabelID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskLinkToLetter]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskLinkToLetter](
	[LinkToLetterID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[LetterReferenceNo] [nvarchar](max) NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskLinkToLetter] PRIMARY KEY CLUSTERED 
(
	[LinkToLetterID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskLinkToMeeting]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskLinkToMeeting](
	[LinkToMeetingID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[MeetingReferenceNo] [nvarchar](max) NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskLinkToMeeting] PRIMARY KEY CLUSTERED 
(
	[LinkToMeetingID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskLinkToMemo]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskLinkToMemo](
	[LinkToMemoID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[MemoReferenceNo] [nvarchar](max) NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskLinkToMemo] PRIMARY KEY CLUSTERED 
(
	[LinkToMemoID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskResponsibleDepartment]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskResponsibleDepartment](
	[ResponsibleID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[ResponsibleDepartmentID] [int] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskResponsibleDepartment] PRIMARY KEY CLUSTERED 
(
	[ResponsibleID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DutyTaskResponsibleUsers]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DutyTaskResponsibleUsers](
	[ResponsibleID] [int] IDENTITY(1,1) NOT NULL,
	[TaskID] [int] NULL,
	[ResponsibleUsersID] [int] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_DutyTaskResponsibleUsers] PRIMARY KEY CLUSTERED 
(
	[ResponsibleID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Event]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Event](
	[EventID] [int] NOT NULL,
	[EventCreationType] [nvarchar](250) NULL,
	[EventType] [nvarchar](250) NULL,
	[EventName] [nvarchar](250) NULL,
	[EventDetails] [nvarchar](250) NULL,
	[FromDate] [datetime] NULL,
	[ToDate] [datetime] NULL,
	[AllDay] [nvarchar](250) NULL,
	[Location] [nvarchar](250) NULL,
	[Approver] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Event] PRIMARY KEY CLUSTERED 
(
	[EventID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Gift]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Gift](
	[GiftID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[GiftType] [int] NULL,
	[ReceivedFromOrganization] [nvarchar](255) NULL,
	[ReceivedFromName] [nvarchar](255) NULL,
	[ReceivedDate] [datetime] NULL,
	[PurchasedToOrganization] [nvarchar](255) NULL,
	[PurchasedToName] [nvarchar](255) NULL,
	[PurchasedBy] [int] NULL,
	[HandedOverTo] [nvarchar](255) NULL,
	[HandedOverDate] [datetime] NULL,
	[Status] [int] NULL,
	[IsSend] [bit] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Gift] PRIMARY KEY CLUSTERED 
(
	[GiftID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[GiftHistory]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[GiftHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[GiftID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_GiftHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HardwareMovement]    Script Date: 28-Dec-19 10:23:57 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HardwareMovement](
	[HardwareMovementID] [int] IDENTITY(1,1) NOT NULL,
	[ServicedeskReferenceNumber] [nvarchar](250) NULL,
	[MovementType] [nvarchar](250) NULL,
	[EmployeeName] [nvarchar](250) NULL,
	[EmployeeDepartment] [nvarchar](max) NULL,
	[CompanyName] [nvarchar](250) NULL,
	[ApproverName] [nvarchar](250) NULL,
	[ApproverDepartment] [nvarchar](250) NULL,
	[Comment] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_HardwareMovement] PRIMARY KEY CLUSTERED 
(
	[HardwareMovementID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HRComplaintSuggestions]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HRComplaintSuggestions](
	[HRComplaintSuggestionsID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Source] [nvarchar](250) NULL,
	[Type] [nvarchar](50) NULL,
	[Subject] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[RequestCreatedBy] [nvarchar](250) NULL,
	[MailID] [nvarchar](250) NULL,
	[PhoneNumber] [nvarchar](50) NULL,
	[ActionTaken] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_HRComplaintSuggestions] PRIMARY KEY CLUSTERED 
(
	[HRComplaintSuggestionsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HRComplaintSuggestionsHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HRComplaintSuggestionsHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[HRComplaintSuggestionsID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](250) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
 CONSTRAINT [PK_HRComplaintSuggestionsHistroy] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ITSupport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ITSupport](
	[ITSupportID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NOT NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[Subject] [nvarchar](255) NULL,
	[RequestorDepartment] [nvarchar](255) NULL,
	[RequestorName] [nvarchar](255) NULL,
	[RequestType] [nvarchar](100) NULL,
	[RequestDetails] [nvarchar](max) NULL,
	[Priority] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[Status] [bit] NULL,
	[ServiceDeskId] [int] NULL,
	[IsSync] [bit] NULL,
 CONSTRAINT [PK_ITSupport_1] PRIMARY KEY CLUSTERED 
(
	[ITSupportID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ITSupportHistoryLog]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ITSupportHistoryLog](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[ITSupportID] [int] NOT NULL,
	[Action] [nvarchar](255) NULL,
	[ActionBy] [nvarchar](255) NULL,
	[ActionDatetime] [datetime] NULL,
	[Comments] [nvarchar](255) NULL,
 CONSTRAINT [PK_ITSupportHistoryLog] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Leave]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Leave](
	[LeaveID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[LeaveType] [nvarchar](250) NULL,
	[Reason] [nvarchar](max) NULL,
	[DOANameID] [int] NULL,
	[DOADepartmentID] [int] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[BalanceLeave] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsHrHeadApproved] [bit] NULL,
	[ApproverDepartmentID] [int] NULL,
	[LeaveTypeOther] [int] NULL,
	[IsSync] [bit] NULL,
 CONSTRAINT [PK_Leaves] PRIMARY KEY CLUSTERED 
(
	[LeaveID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LeaveCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LeaveCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[LeaveID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_LeaveCommunicationChat] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Legal]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Legal](
	[LegalID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[Subject] [nvarchar](250) NULL,
	[RequestDetails] [nvarchar](max) NULL,
	[Comments] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Legal] PRIMARY KEY CLUSTERED 
(
	[LegalID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LegalCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LegalCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[LegalID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_LegalCommunicationChat] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LegalKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LegalKeywords](
	[LegalKeywordsID] [int] IDENTITY(1,1) NOT NULL,
	[LegalID] [int] NULL,
	[UserID] [int] NULL,
	[Keywords] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInbound]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInbound](
	[LetterID] [int] IDENTITY(1,1) NOT NULL,
	[LetterReferenceID] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[LetterTitle] [nvarchar](250) NULL,
	[ReceivingDate] [datetime] NULL,
	[ReceivedFromEntityID] [int] NULL,
	[IsGovernmentEntity] [bit] NULL,
	[InitialApproverDepartment] [nvarchar](250) NULL,
	[RelatedToIncomingLetter] [nvarchar](max) NULL,
	[LetterDetails] [nvarchar](max) NULL,
	[Notes] [nvarchar](max) NULL,
	[DocumentClassification] [nvarchar](250) NULL,
	[Priority] [nvarchar](250) NULL,
	[NeedReply] [bit] NULL,
	[LetterPhysicallySend] [bit] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[LetterType] [nvarchar](250) NULL,
	[ReceivedFromName] [nvarchar](255) NULL,
 CONSTRAINT [PK_LettersInbound] PRIMARY KEY CLUSTERED 
(
	[LetterID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInbound_RelatedOutgoing]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInbound_RelatedOutgoing](
	[LetterOutgoingReleated] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[OutgoingLetterReferenceNo] [nvarchar](max) NULL,
	[LetterType] [int] NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_LettersInbound_RelatedOutgoing] PRIMARY KEY CLUSTERED 
(
	[LetterOutgoingReleated] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInboundDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInboundDestinationDepartment](
	[LetterDestinationDepartmentID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[DepartmentID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_LettersInboundDestinationDepartment] PRIMARY KEY CLUSTERED 
(
	[LetterDestinationDepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInboundDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInboundDestinationUsers](
	[LetterDestinationUsersID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[UserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_LettersInboundDestinationUsers] PRIMARY KEY CLUSTERED 
(
	[LetterDestinationUsersID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInboundHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInboundHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_LettersInboundHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersInboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersInboundKeywords](
	[LetterKeywordsID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[UserID] [int] NULL,
	[Keywords] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutbound]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutbound](
	[LetterID] [int] IDENTITY(1,1) NOT NULL,
	[LetterReferenceID] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[LetterTitle] [nvarchar](250) NULL,
	[InitialApproverDepartment] [nvarchar](250) NULL,
	[RelatedToIncomingLetter] [nvarchar](max) NULL,
	[LetterDetails] [nvarchar](max) NULL,
	[DocumentClassification] [nvarchar](250) NULL,
	[Priority] [nvarchar](250) NULL,
	[NeedReply] [bit] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Letters] PRIMARY KEY CLUSTERED 
(
	[LetterID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutbound_RelatedOutgoing]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutbound_RelatedOutgoing](
	[LetterOutgoingReleated] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[OutgoingLetterReferenceNo] [nvarchar](max) NULL,
	[LetterType] [int] NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_Letters_RelatedOutgoing] PRIMARY KEY CLUSTERED 
(
	[LetterOutgoingReleated] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutboundDestinationEntity]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutboundDestinationEntity](
	[LetterDestinationID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[EntityID] [int] NULL,
	[IsGovernmentEntity] [bit] NULL,
	[DeleteFlag] [bit] NULL,
	[SenderName] [nvarchar](max) NULL,
 CONSTRAINT [PK_LetterDestinationDepartment] PRIMARY KEY CLUSTERED 
(
	[LetterDestinationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutboundDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutboundDestinationUsers](
	[LetterDestinationUsersID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[UserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_LetterDestinationUsers] PRIMARY KEY CLUSTERED 
(
	[LetterDestinationUsersID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutboundHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutboundHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_LetterHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LettersOutboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LettersOutboundKeywords](
	[LetterKeywordsID] [int] IDENTITY(1,1) NOT NULL,
	[LetterID] [int] NULL,
	[UserID] [int] NULL,
	[Keywords] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_LetterKeywords] PRIMARY KEY CLUSTERED 
(
	[LetterKeywordsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_AdminManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_AdminManagement](
	[LookupsID] [int] IDENTITY(1,1) NOT NULL,
	[Category] [nvarchar](250) NULL,
	[DisplayName] [nvarchar](max) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_MasterAdminManagement] PRIMARY KEY CLUSTERED 
(
	[LookupsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_ApproverConfiguration]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_ApproverConfiguration](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DepartmentID] [int] NULL,
	[ApproverID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_ApproverConfiguration] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Banner]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Banner](
	[BannerID] [int] IDENTITY(1,1) NOT NULL,
	[AttachmentGuid] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[createdBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_City]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_City](
	[CityID] [int] IDENTITY(1,1) NOT NULL,
	[CityName] [nvarchar](250) NULL,
	[ArCityName] [nvarchar](250) NULL,
	[CountryID] [int] NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_City] PRIMARY KEY CLUSTERED 
(
	[CityID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_CityAndEmirates]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_CityAndEmirates](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EmiratesID] [int] NULL,
	[CityID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_CityAndEmirates] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Complaint]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Complaint](
	[ComplaintID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Name] [nvarchar](250) NULL,
	[Type] [nvarchar](250) NULL,
	[Subject] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[RequestedBy] [nvarchar](250) NULL,
	[MailID] [nvarchar](250) NULL,
	[CitizenAffairManager] [nvarchar](250) NULL,
	[CitizenAffairStaff] [nvarchar](250) NULL,
	[HRManager] [nvarchar](250) NULL,
	[HRStaff] [nvarchar](250) NULL,
	[Attachments] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_M_Complaint] PRIMARY KEY CLUSTERED 
(
	[ComplaintID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Country]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Country](
	[CountryID] [int] IDENTITY(1,1) NOT NULL,
	[CountryName] [nvarchar](250) NULL,
	[ArCountryName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Country] PRIMARY KEY CLUSTERED 
(
	[CountryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Department]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Department](
	[DepartmentID] [int] IDENTITY(1,1) NOT NULL,
	[DepartmentName] [nvarchar](max) NULL,
	[ArDepartmentName] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[GroupMailID] [nvarchar](max) NULL,
 CONSTRAINT [PK_M_Department_1] PRIMARY KEY CLUSTERED 
(
	[DepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_DesignType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_DesignType](
	[DesignTypeID] [int] IDENTITY(1,1) NOT NULL,
	[DesignTypeName] [nvarchar](250) NULL,
	[ArDesignTypeName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_DesignType] PRIMARY KEY CLUSTERED 
(
	[DesignTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Education]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Education](
	[EducationID] [int] IDENTITY(1,1) NOT NULL,
	[EducationName] [nvarchar](250) NULL,
	[ArEducationName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Education] PRIMARY KEY CLUSTERED 
(
	[EducationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Emirates]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Emirates](
	[EmiratesID] [int] IDENTITY(1,1) NOT NULL,
	[EmiratesName] [nvarchar](250) NULL,
	[ArEmiratesName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Emirates] PRIMARY KEY CLUSTERED 
(
	[EmiratesID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_EmployeeStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_EmployeeStatus](
	[EmployeeStatusID] [int] IDENTITY(1,1) NOT NULL,
	[EmployeeStatusName] [nvarchar](250) NULL,
	[ArEmployeeStatusName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_EmployeeStatus] PRIMARY KEY CLUSTERED 
(
	[EmployeeStatusID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_EventType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_EventType](
	[EventTypeID] [int] IDENTITY(1,1) NOT NULL,
	[EventTypeName] [nvarchar](250) NULL,
	[ArEventTypeName] [nvarchar](250) NULL,
	[DisplayOrder] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_EventType] PRIMARY KEY CLUSTERED 
(
	[EventTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Experience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Experience](
	[ExperienceID] [int] IDENTITY(1,1) NOT NULL,
	[ExperienceName] [nvarchar](250) NULL,
	[ArExperienceName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Experience] PRIMARY KEY CLUSTERED 
(
	[ExperienceID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Grade]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Grade](
	[GradeID] [int] IDENTITY(1,1) NOT NULL,
	[GradeName] [nvarchar](250) NULL,
	[ArGradeName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Holidays]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Holidays](
	[HolidayID] [int] IDENTITY(1,1) NOT NULL,
	[Holiday] [nvarchar](250) NULL,
	[Message] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Holidays] PRIMARY KEY CLUSTERED 
(
	[HolidayID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Language]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Language](
	[LanguageID] [int] IDENTITY(1,1) NOT NULL,
	[LanguageName] [nvarchar](250) NULL,
	[ArLanguageName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Language] PRIMARY KEY CLUSTERED 
(
	[LanguageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_LeaveType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_LeaveType](
	[LeaveTypeID] [int] IDENTITY(1,1) NOT NULL,
	[LeaveTypeName] [nvarchar](250) NULL,
	[ArLeaveTypeName] [nvarchar](250) NULL,
	[DisplayOrder] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Location]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Location](
	[LocationID] [int] IDENTITY(1,1) NOT NULL,
	[LocationName] [nvarchar](250) NULL,
	[ArLocationName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Location] PRIMARY KEY CLUSTERED 
(
	[LocationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_LogType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_LogType](
	[LogTypeID] [int] IDENTITY(1,1) NOT NULL,
	[LogTypeENValue] [nvarchar](250) NULL,
	[LogTypeARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [P_LogType] PRIMARY KEY CLUSTERED 
(
	[LogTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Lookups]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Lookups](
	[LookupsID] [int] IDENTITY(1,1) NOT NULL,
	[Module] [nvarchar](250) NULL,
	[Category] [nvarchar](250) NULL,
	[DisplayName] [nvarchar](max) NULL,
	[ArDisplayName] [nvarchar](max) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Lookups] PRIMARY KEY CLUSTERED 
(
	[LookupsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_MediaChannel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_MediaChannel](
	[MediaChannelID] [int] IDENTITY(1,1) NOT NULL,
	[MediaChannelName] [nvarchar](250) NULL,
	[ArMediaChannelName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_MediaChannel] PRIMARY KEY CLUSTERED 
(
	[MediaChannelID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_MeetingType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_MeetingType](
	[MeetingTypeID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingTypeName] [nvarchar](250) NULL,
	[ArMeetingTypeName] [nvarchar](250) NULL,
	[DisplayOrder] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_MeetingType] PRIMARY KEY CLUSTERED 
(
	[MeetingTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Module]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Module](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleName] [nvarchar](255) NULL,
	[ModuleID] [int] NULL,
 CONSTRAINT [PK_M_Module] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Nationality]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Nationality](
	[NationalityID] [int] IDENTITY(1,1) NOT NULL,
	[NationalityName] [nvarchar](250) NULL,
	[ArNationalityName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Nationality] PRIMARY KEY CLUSTERED 
(
	[NationalityID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_OfficialTaskRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_OfficialTaskRequest](
	[OfficialTaskRequestID] [int] IDENTITY(1,1) NOT NULL,
	[OfficialTaskRequestName] [nvarchar](250) NULL,
	[ArOfficialTaskRequestName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_OfficialTaskRequest] PRIMARY KEY CLUSTERED 
(
	[OfficialTaskRequestID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Religion]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Religion](
	[ReligionID] [int] IDENTITY(1,1) NOT NULL,
	[ReligionName] [nvarchar](250) NULL,
	[ArReligionName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Religion] PRIMARY KEY CLUSTERED 
(
	[ReligionID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Section]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Section](
	[SectionID] [int] IDENTITY(1,1) NOT NULL,
	[SectionName] [nvarchar](255) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ArSectionName] [nvarchar](max) NULL,
 CONSTRAINT [PK_M_Section] PRIMARY KEY CLUSTERED 
(
	[SectionID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Specialization]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Specialization](
	[SpecializationID] [int] IDENTITY(1,1) NOT NULL,
	[SpecializationName] [nvarchar](250) NULL,
	[ArSpecializationName] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_M_Specialization] PRIMARY KEY CLUSTERED 
(
	[SpecializationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_Title]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_Title](
	[TitleID] [int] IDENTITY(1,1) NOT NULL,
	[Title] [nvarchar](250) NULL,
	[ArTitle] [nvarchar](250) NULL,
	[DisplayOrder] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_TripDestination]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_TripDestination](
	[TripDestinationID] [int] IDENTITY(1,1) NOT NULL,
	[TripDestinationENValue] [nvarchar](250) NULL,
	[TripDestinationARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_TripDestination] PRIMARY KEY CLUSTERED 
(
	[TripDestinationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_TripReleaseLocation]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_TripReleaseLocation](
	[ReleaseLocationID] [int] IDENTITY(1,1) NOT NULL,
	[ReleaseLocationENValue] [nvarchar](250) NULL,
	[ReleaseLocationARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_TripReleaseLocation] PRIMARY KEY CLUSTERED 
(
	[ReleaseLocationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_TripType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_TripType](
	[TripTypeID] [int] IDENTITY(1,1) NOT NULL,
	[TripTypeENValue] [nvarchar](250) NULL,
	[TripTypeARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_TripType] PRIMARY KEY CLUSTERED 
(
	[TripTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_VehicleIssues]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_VehicleIssues](
	[IssueID] [int] IDENTITY(1,1) NOT NULL,
	[IssueENValue] [nvarchar](250) NULL,
	[IssueARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [P_VehicleIssues] PRIMARY KEY CLUSTERED 
(
	[IssueID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_VehicleModel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_VehicleModel](
	[VehicleModelID] [int] IDENTITY(1,1) NOT NULL,
	[VehicleModelENValue] [nvarchar](250) NULL,
	[VehicleModelARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_VehicleModel] PRIMARY KEY CLUSTERED 
(
	[VehicleModelID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[M_VehicleRequestStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[M_VehicleRequestStatus](
	[StatusID] [int] IDENTITY(1,1) NOT NULL,
	[StatusENValue] [nvarchar](250) NULL,
	[StatusARValue] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_VehicleRequestStatus] PRIMARY KEY CLUSTERED 
(
	[StatusID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Maintenance]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Maintenance](
	[MaintenanceID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[RequestorID] [int] NULL,
	[RequestorDepartmentID] [int] NULL,
	[Subject] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[Priority] [bit] NULL,
	[ApproverDepartment] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsMaintenanceHeadApproved] [bit] NULL,
 CONSTRAINT [PK_Maintenance] PRIMARY KEY CLUSTERED 
(
	[MaintenanceID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MaintenanceCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MaintenanceCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[MaintenanceID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_MaintenanceCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaDesignRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaDesignRequest](
	[DesignID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NOT NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[Title] [nvarchar](255) NULL,
	[InitiativeProjectActivity] [nvarchar](255) NULL,
	[DiwansRole] [nvarchar](255) NULL,
	[OtherParties] [nvarchar](255) NULL,
	[TargetGroup] [nvarchar](255) NULL,
	[DeliverableDate] [datetime] NULL,
	[TypeOfDesignRequired] [int] NULL,
	[Languages] [int] NULL,
	[GeneralObjective] [nvarchar](max) NULL,
	[MainObjective] [nvarchar](max) NULL,
	[StrategicObjective] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK_DesignRequest] PRIMARY KEY CLUSTERED 
(
	[DesignID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaDesignRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaDesignRequestCommunicationHistory](
	[CommunicationId] [int] IDENTITY(1,1) NOT NULL,
	[DesignID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[CreatedBy] [nvarchar](100) NULL,
	[CreatedDateTime] [datetime] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](250) NULL,
 CONSTRAINT [PK_DesignRequestHistory_1] PRIMARY KEY CLUSTERED 
(
	[CommunicationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewCampaignRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewCampaignRequest](
	[CampaignID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[InitiativeProjectActivity] [nvarchar](255) NULL,
	[CampaignStartDate] [datetime] NULL,
	[CampaignPeriod] [nvarchar](255) NULL,
	[DiwansRole] [nvarchar](255) NULL,
	[OtherEntities] [nvarchar](255) NULL,
	[TargetGroup] [nvarchar](255) NULL,
	[TargetAudience] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[Languages] [int] NULL,
	[MediaChannels] [int] NULL,
	[Notes] [nvarchar](max) NULL,
	[RequestDetails] [nvarchar](max) NULL,
	[GeneralInformation] [nvarchar](max) NULL,
	[MainObjective] [nvarchar](max) NULL,
	[MainIdea] [nvarchar](max) NULL,
	[StrategicGoals] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK_MediaNewCampaignRequest] PRIMARY KEY CLUSTERED 
(
	[CampaignID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewCampaignRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewCampaignRequestCommunicationHistory](
	[CommunicationId] [int] IDENTITY(1,1) NOT NULL,
	[CampaignID] [int] NULL,
	[Action] [nvarchar](max) NULL,
	[CreatedBy] [nvarchar](100) NULL,
	[CreatedDateTime] [datetime] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_MediaNewCampaignRequestCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewPhotographerRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewPhotographerRequest](
	[PhotoGrapherID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[EventName] [nvarchar](255) NULL,
	[EventDate] [datetime] NULL,
	[Location] [nvarchar](255) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK_MediaNewPhotographerRequest] PRIMARY KEY CLUSTERED 
(
	[PhotoGrapherID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewPhotographerRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewPhotographerRequestCommunicationHistory](
	[CommunicationId] [int] IDENTITY(1,1) NOT NULL,
	[PhotoGrapherId] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[createdDateTime] [datetime] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_MediaNewPhotographerRequestHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewPressReleaseRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewPressReleaseRequest](
	[PressReleaseID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[Date] [datetime] NULL,
	[Subject] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[EventName] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[AttendedBy] [nvarchar](255) NULL,
	[Partners] [nvarchar](255) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK_MediaNewPressReleaseRequest] PRIMARY KEY CLUSTERED 
(
	[PressReleaseID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaNewPressReleaseRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaNewPressReleaseRequestCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[PressReleaseID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_MediaNewPreessReleaseRequestHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaPhotoRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaPhotoRequest](
	[PhotoID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](255) NULL,
	[SourceName] [nvarchar](255) NULL,
	[EventName] [nvarchar](255) NULL,
	[EventDate] [datetime] NULL,
	[Location] [nvarchar](255) NULL,
	[PhotoDescription] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](255) NULL,
	[UpdatedBy] [nvarchar](255) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[ApproverDepartmentID] [int] NULL,
 CONSTRAINT [PK__MediaPho__045BA97BA2565CFF] PRIMARY KEY CLUSTERED 
(
	[PhotoID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MediaPhotoRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MediaPhotoRequestCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[PhotoID] [int] NULL,
	[Action] [nvarchar](100) NULL,
	[CreatedBy] [nvarchar](100) NULL,
	[CreatedDateTime] [datetime] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_MediaPhotoRequestHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Meeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Meeting](
	[MeetingID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[OrganizerDepartmentID] [int] NULL,
	[OrganizerUserID] [int] NULL,
	[Subject] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[StartDateTime] [datetime] NULL,
	[EndDateTime] [datetime] NULL,
	[MeetingType] [int] NULL,
	[IsInternalInvitees] [bit] NULL,
	[IsExternalInvitees] [bit] NULL,
	[RemindMeAt] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [int] NULL,
 CONSTRAINT [PK_Meeting] PRIMARY KEY CLUSTERED 
(
	[MeetingID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MeetingcommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MeetingcommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingID] [int] NULL,
	[Action] [nvarchar](250) NULL,
	[Comment] [nvarchar](250) NULL,
	[CreatedBy] [int] NULL,
	[createdDateTime] [datetime] NULL,
	[ParentCommunicationID] [int] NULL,
	[IsMom] [bit] NULL,
 CONSTRAINT [PK_MeetingcommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MeetingExternalInvitees]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MeetingExternalInvitees](
	[MeetingExternalInviteesID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingID] [int] NULL,
	[Organization] [nvarchar](250) NULL,
	[ContactPerson] [nvarchar](250) NOT NULL,
	[EmailID] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_MeetingExternalInvitees] PRIMARY KEY CLUSTERED 
(
	[MeetingExternalInviteesID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MeetingInternalInvitees]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MeetingInternalInvitees](
	[MeetingInternalInviteesID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingID] [int] NULL,
	[DepartmentID] [int] NULL,
	[UserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_MeetingInternalInvitees] PRIMARY KEY CLUSTERED 
(
	[MeetingInternalInviteesID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MeetingRemindMeAt]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MeetingRemindMeAt](
	[MeetingRemindID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingID] [int] NULL,
	[RemindMeDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedBy] [int] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_MeetingRemindMeAt] PRIMARY KEY CLUSTERED 
(
	[MeetingRemindID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Memo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Memo](
	[MemoID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](255) NULL,
	[Title] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[Details] [nvarchar](max) NULL,
	[Private] [nvarchar](250) NULL,
	[Priority] [nvarchar](250) NULL,
	[InitalApproverDepartment] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Memo] PRIMARY KEY CLUSTERED 
(
	[MemoID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MemoDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MemoDestinationDepartment](
	[MemoDestinationDepartmentID] [int] IDENTITY(1,1) NOT NULL,
	[MemoID] [int] NULL,
	[DepartmentID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_MemoDestinationDepartment] PRIMARY KEY CLUSTERED 
(
	[MemoDestinationDepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MemoDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MemoDestinationUsers](
	[MemoDestinationUsersID] [int] IDENTITY(1,1) NOT NULL,
	[MemoID] [int] NULL,
	[UserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_MemoDestinationUsers] PRIMARY KEY CLUSTERED 
(
	[MemoDestinationUsersID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MemoHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MemoHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[MemoID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](250) NULL,
 CONSTRAINT [PK_MemoHistory] PRIMARY KEY CLUSTERED 
(
	[HistoryID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MemoKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MemoKeywords](
	[MemoKeywordsID] [int] IDENTITY(1,1) NOT NULL,
	[MemoID] [int] NULL,
	[UserID] [int] NULL,
	[Keywords] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_MemoKeywords] PRIMARY KEY CLUSTERED 
(
	[MemoKeywordsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[MOM]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MOM](
	[MOMID] [int] IDENTITY(1,1) NOT NULL,
	[MeetingID] [int] NULL,
	[PointsDiscussed] [nvarchar](max) NULL,
	[PendingPoints] [nvarchar](max) NULL,
	[Suggestion] [nvarchar](max) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_MOM] PRIMARY KEY CLUSTERED 
(
	[MOMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[News]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[News](
	[NewsID] [int] IDENTITY(1,1) NOT NULL,
	[News] [nvarchar](max) NULL,
	[ExpiryDate] [datetime] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_News] PRIMARY KEY CLUSTERED 
(
	[NewsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Notification]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Notification](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ServiceID] [int] NOT NULL,
	[ReferenceNumber] [nvarchar](max) NULL,
	[Service] [nvarchar](max) NULL,
	[Process] [nvarchar](max) NULL,
	[LastUpdateDate] [datetime] NULL,
	[IsRead] [bit] NULL,
	[FromEmail] [nvarchar](max) NULL,
	[ToEmail] [nvarchar](max) NULL,
	[DelegateToEmail] [nvarchar](max) NULL,
	[DelegateFromEmail] [nvarchar](max) NULL,
	[Title] [nvarchar](max) NULL,
	[IsAnonymous] [bit] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OfficialMission]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OfficialMission](
	[OfficialMissionID] [int] IDENTITY(1,1) NOT NULL,
	[Date] [datetime] NULL,
	[EmployeeName] [nvarchar](250) NULL,
	[FromDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[Description] [nvarchar](250) NULL,
	[Type] [nvarchar](250) NULL,
	[Approver] [nvarchar](250) NULL,
	[HRManager] [nvarchar](250) NULL,
	[HRTeam] [nvarchar](250) NULL,
	[Hospitality] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_OfficialMission] PRIMARY KEY CLUSTERED 
(
	[OfficialMissionID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OfficialTask]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OfficialTask](
	[OfficialTaskID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Date] [datetime] NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[OfficialTaskType] [int] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[NumberofDays] [int] NULL,
	[OfficialTaskDescription] [nvarchar](max) NULL,
	[Comments] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsSync] [bit] NULL,
 CONSTRAINT [PK_OfficalTask] PRIMARY KEY CLUSTERED 
(
	[OfficialTaskID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OfficialTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OfficialTaskCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[OfficialTaskID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_OfficalTaskCommunicationChat] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[OfficialTaskEmployeeName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OfficialTaskEmployeeName](
	[OfficialTaskEmployeeNameID] [int] IDENTITY(1,1) NOT NULL,
	[OfficialTaskID] [int] NULL,
	[UserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_OfficalTaskEmployeeName] PRIMARY KEY CLUSTERED 
(
	[OfficialTaskEmployeeNameID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Organization]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Organization](
	[OrganizationID] [int] IDENTITY(1,1) NOT NULL,
	[OrganizationUnits] [nvarchar](250) NULL,
	[ArOrganizationUnits] [nvarchar](250) NULL,
	[GroupMailID] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
 CONSTRAINT [PK_Organization] PRIMARY KEY CLUSTERED 
(
	[OrganizationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Photo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Photo](
	[PhotoID] [int] IDENTITY(1,1) NOT NULL,
	[EventName] [nvarchar](250) NULL,
	[PhotoDescription] [nvarchar](250) NULL,
	[Date] [datetime] NULL,
	[Location] [nvarchar](max) NULL,
	[MediaManager] [nvarchar](250) NULL,
	[MediaStaff] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Photo] PRIMARY KEY CLUSTERED 
(
	[PhotoID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Photographers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Photographers](
	[PhotographersID] [int] IDENTITY(1,1) NOT NULL,
	[EventName] [nvarchar](250) NULL,
	[Datetime] [datetime] NULL,
	[Location] [nvarchar](max) NULL,
	[MediaManager] [nvarchar](250) NULL,
	[MediaStaff] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Photographers] PRIMARY KEY CLUSTERED 
(
	[PhotographersID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Photos]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Photos](
	[PhotoID] [int] IDENTITY(1,1) NOT NULL,
	[AttachmentGuid] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[ExpiryDate] [datetime] NULL,
	[createdBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_Photos] PRIMARY KEY CLUSTERED 
(
	[PhotoID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Press]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Press](
	[PressID] [int] IDENTITY(1,1) NOT NULL,
	[Requestor] [nvarchar](250) NULL,
	[PressType] [nvarchar](250) NULL,
	[Subject] [nvarchar](250) NULL,
	[EventName] [datetime] NULL,
	[Date] [nvarchar](250) NULL,
	[Location] [nvarchar](max) NULL,
	[AttendedBy] [nvarchar](250) NULL,
	[Partners] [nvarchar](250) NULL,
	[MediaManager] [nvarchar](250) NULL,
	[MediaStaff] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Press] PRIMARY KEY CLUSTERED 
(
	[PressID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ShareparticipationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ShareparticipationUsers](
	[MemoSharedUsersID] [int] IDENTITY(1,1) NOT NULL,
	[ServiceID] [int] NULL,
	[UserID] [int] NULL,
	[Type] [nvarchar](100) NULL,
 CONSTRAINT [PK_MemoSharedUsers] PRIMARY KEY CLUSTERED 
(
	[MemoSharedUsersID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SubEvent]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SubEvent](
	[SubEventID] [int] IDENTITY(1,1) NOT NULL,
	[EventID] [int] NULL,
	[EventCreationType] [nvarchar](250) NULL,
	[EventType] [nvarchar](250) NULL,
	[EventName] [nvarchar](250) NULL,
	[EventDetails] [nvarchar](250) NULL,
	[FromDate] [datetime] NULL,
	[ToDate] [datetime] NULL,
	[AllDay] [nvarchar](250) NULL,
	[Location] [nvarchar](250) NULL,
	[Approver] [nvarchar](250) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_SubEvent] PRIMARY KEY CLUSTERED 
(
	[SubEventID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Task]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Task](
	[TaskID] [int] IDENTITY(1,1) NOT NULL,
	[TaskTitle] [nvarchar](max) NULL,
	[SelectCategory] [nvarchar](250) NULL,
	[TaskStartDate] [datetime] NULL,
	[TaskDescription] [nvarchar](max) NULL,
	[TaskDueDate] [datetime] NULL,
	[Assignee] [nvarchar](250) NULL,
	[Participants] [nvarchar](max) NULL,
	[TaskPriority] [nvarchar](250) NULL,
	[Reminder] [datetime] NULL,
	[Attachments] [nvarchar](max) NULL,
	[AttachmentName] [nvarchar](max) NULL,
	[CommunicationBoard] [nvarchar](max) NULL,
	[TaskLinkToMemo] [nvarchar](max) NULL,
	[TaskLinkToLetters] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[Status] [nvarchar](250) NULL,
 CONSTRAINT [PK_Task] PRIMARY KEY CLUSTERED 
(
	[TaskID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Training]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Training](
	[TrainingID] [int] IDENTITY(1,1) NOT NULL,
	[TrainingReferenceID] [nvarchar](max) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SourceName] [nvarchar](250) NULL,
	[TrainingFor] [bit] NULL,
	[TraineeName] [nvarchar](250) NULL,
	[TrainingName] [nvarchar](250) NULL,
	[ApproverDepartmentID] [int] NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[UpdatedBy] [nvarchar](250) NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[IsHrHeadApproved] [bit] NULL,
	[IsNotificationReceived] [bit] NULL,
 CONSTRAINT [PK_Training] PRIMARY KEY CLUSTERED 
(
	[TrainingID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TrainingCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TrainingCommunicationHistory](
	[CommunicationID] [int] IDENTITY(1,1) NOT NULL,
	[TrainingID] [int] NULL,
	[Message] [nvarchar](max) NULL,
	[ParentCommunicationID] [int] NULL,
	[Action] [nvarchar](255) NULL,
	[CreatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateUser] [nvarchar](max) NULL,
 CONSTRAINT [PK_TrainingCommunicationHistory] PRIMARY KEY CLUSTERED 
(
	[CommunicationID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TripCoPassengers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TripCoPassengers](
	[TripCoPassengerID] [int] IDENTITY(1,1) NOT NULL,
	[VehicleReqID] [int] NULL,
	[CoPassengerID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[OtherCoPassengerName] [varchar](250) NULL,
 CONSTRAINT [PK_TripCoPassengers] PRIMARY KEY CLUSTERED 
(
	[TripCoPassengerID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TripVehicleIssues]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TripVehicleIssues](
	[TripVehicleIssueID] [int] IDENTITY(1,1) NOT NULL,
	[VehicleReqID] [int] NULL,
	[IssueID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[Type] [bit] NULL,
 CONSTRAINT [PK_TripVehicleIssues] PRIMARY KEY CLUSTERED 
(
	[TripVehicleIssueID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserProfile]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserProfile](
	[UserProfileId] [int] IDENTITY(1,1) NOT NULL,
	[EmployeeName] [nvarchar](250) NULL,
	[EmployeeCode] [nvarchar](250) NULL,
	[OfficialMailId] [nvarchar](250) NULL,
	[PersonalMailId] [nvarchar](250) NULL,
	[OrgUnitID] [int] NULL,
	[IsOrgHead] [bit] NULL,
	[Gender] [nvarchar](250) NULL,
	[BirthDate] [datetime] NULL,
	[Age] [int] NULL,
	[CountryofResidence] [int] NULL,
	[MobileNumber] [nvarchar](250) NULL,
	[EmployeePhoneNumber] [nvarchar](250) NULL,
	[Religion] [int] NULL,
	[Nationality] [int] NULL,
	[PreviousNationality] [nvarchar](250) NULL,
	[JoinDate] [datetime] NULL,
	[Title] [nvarchar](250) NULL,
	[Grade] [nvarchar](250) NULL,
	[EmployeePosition] [nvarchar](250) NULL,
	[EmploymentStatus] [nvarchar](250) NULL,
	[Resigned] [nvarchar](250) NULL,
	[ResignationDate] [datetime] NULL,
	[BalanceLeave] [int] NULL,
	[NotificationPreferencesEmail] [bit] NULL,
	[NotificationPreferencesSMS] [bit] NULL,
	[PassportNumber] [nvarchar](250) NULL,
	[PassportIssuePlace] [nvarchar](250) NULL,
	[PassportIssueDate] [datetime] NULL,
	[PassportExpiryDate] [datetime] NULL,
	[VisaNumber] [nvarchar](250) NULL,
	[VisaIssueDate] [datetime] NULL,
	[VisaExpiryDate] [datetime] NULL,
	[EmiratesIdNumber] [nvarchar](250) NULL,
	[EmiratesIdIssueDate] [datetime] NULL,
	[EmiratesIdExpiryDate] [datetime] NULL,
	[InsuranceNumber] [nvarchar](250) NULL,
	[InsuranceIssueDate] [datetime] NULL,
	[InsuranceExpiryDate] [datetime] NULL,
	[LabourContractNumber] [nvarchar](250) NULL,
	[LabourContractIssueDate] [datetime] NULL,
	[LaborContractExpiryDate] [datetime] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDatetime] [datetime] NULL,
	[UpdatedDatetime] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[LoginUser] [nvarchar](250) NULL,
	[RoleId] [nvarchar](250) NULL,
	[EmployeePhoto] [nvarchar](250) NULL,
	[ResidenceNumber] [nvarchar](250) NULL,
	[ResidenceIssuePlace] [nvarchar](250) NULL,
	[ResidenceIssueDate] [datetime] NULL,
	[EnteringDate] [datetime] NULL,
	[WorkAddress] [nvarchar](250) NULL,
	[GraduationDate] [datetime] NULL,
	[BirthPlace] [nvarchar](250) NULL,
	[Salary] [nvarchar](250) NULL,
	[ContractTypes] [nvarchar](250) NULL,
	[ProfilePhotoID] [nvarchar](max) NULL,
	[ProfilePhotoName] [nvarchar](max) NULL,
	[ADUserName] [nvarchar](max) NULL,
	[ADEmployeeName] [nvarchar](max) NULL,
	[HOD] [bit] NULL,
	[HOS] [bit] NULL,
	[CanRaiseOfficalRequest] [bit] NULL,
	[CanManageNews] [bit] NULL,
	[DepartmentID] [int] NULL,
	[SectionID] [int] NULL,
	[CanEditContact] [bit] NULL,
	[SignaturePhoto] [nvarchar](max) NULL,
	[SignaturePhotoID] [nvarchar](max) NULL,
	[ReferenceNumber]  AS (concat(right(concat('0','0',[UserProfileId]),(3)),'-',datepart(year,getutcdate()),'-','U')),
	[IsDriver] [bit] NULL,
	[InTime] [datetime] NULL,
	[OutTime] [datetime] NULL,
	[PunchSyncDate] [nvarchar](50) NULL,
 CONSTRAINT [PK_UserProfile] PRIMARY KEY CLUSTERED 
(
	[UserProfileId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserProfileEducation]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserProfileEducation](
	[UserProfileEducationId] [int] IDENTITY(1,1) NOT NULL,
	[UserProfileId] [int] NOT NULL,
	[Degree] [int] NULL,
	[SchoolCollege] [nvarchar](250) NULL,
	[FieldStudy] [nvarchar](max) NULL,
	[TimePeriodFrom] [datetime] NULL,
	[TimePeriodTo] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_UserProfileEducation] PRIMARY KEY CLUSTERED 
(
	[UserProfileEducationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserProfileTrainingCertifications]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserProfileTrainingCertifications](
	[UserProfileTrainingCertificationsId] [int] IDENTITY(1,1) NOT NULL,
	[UserProfileId] [int] NOT NULL,
	[TrainingName] [nvarchar](max) NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
	[TrainingRequestID] [int] NULL,
 CONSTRAINT [PK_UserProfileTrainingCertifications] PRIMARY KEY CLUSTERED 
(
	[UserProfileTrainingCertificationsId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserProfileWorkExperience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserProfileWorkExperience](
	[UserProfileWorkExperienceId] [int] IDENTITY(1,1) NOT NULL,
	[UserProfileId] [int] NOT NULL,
	[JobTitle] [nvarchar](250) NULL,
	[Company] [nvarchar](250) NULL,
	[City] [nvarchar](250) NULL,
	[TimePeriodFrom] [datetime] NULL,
	[TimePeriodTo] [datetime] NULL,
	[DeleteFlag] [bit] NULL,
 CONSTRAINT [PK_UserProfileWorkExperience] PRIMARY KEY CLUSTERED 
(
	[UserProfileWorkExperienceId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VehicleFines]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VehicleFines](
	[VehicleFineID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[VehicleModelID] [nvarchar](max) NULL,
	[FineNumber] [nvarchar](50) NULL,
	[FinedDate] [datetime] NULL,
	[Location] [nvarchar](100) NULL,
	[BlackPoints] [int] NULL,
	[Status] [int] NULL,
	[Description] [nvarchar](max) NULL,
	[EmailTo] [nvarchar](250) NULL,
	[EmailCCDepartmentID] [int] NULL,
	[EmailCCUserID] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[VehicleID] [int] NULL,
	[DriverID] [int] NULL,
 CONSTRAINT [PK_VehicleFines] PRIMARY KEY CLUSTERED 
(
	[VehicleFineID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VehicleHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VehicleHistory](
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[VehiclReqID] [int] NOT NULL,
	[Action] [nvarchar](max) NULL,
	[ActionBy] [nvarchar](100) NULL,
	[ActionDateTime] [datetime] NULL,
	[Comments] [nvarchar](max) NULL,
	[DelegateUser] [nvarchar](250) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VehicleLogs]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VehicleLogs](
	[VehicleLogID] [int] IDENTITY(1,1) NOT NULL,
	[CurrentMileage] [int] NULL,
	[NextMileage] [int] NULL,
	[LogType] [int] NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[VehicleID] [int] NULL,
 CONSTRAINT [PK_VehicleLogs] PRIMARY KEY CLUSTERED 
(
	[VehicleLogID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[VehicleRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[VehicleRequest](
	[VehicleReqID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[RequestType] [int] NULL,
	[Requestor] [int] NULL,
	[RequestDateTime] [datetime] NULL,
	[DriverID] [int] NULL,
	[TobeDrivenbyDepartmentID] [int] NULL,
	[TobeDrivenbyDriverID] [int] NULL,
	[TripTypeID] [int] NULL,
	[TripTypeOthers] [nvarchar](max) NULL,
	[Emirates] [int] NULL,
	[City] [int] NULL,
	[Destination] [int] NULL,
	[DestinationOthers] [nvarchar](max) NULL,
	[TripPeriodFrom] [datetime] NULL,
	[TripPeriodTo] [datetime] NULL,
	[VehicleModelID] [int] NULL,
	[ApproverDepartment] [int] NULL,
	[ApproverName] [int] NULL,
	[ReleaseDateTime] [datetime] NULL,
	[LastMileageReading] [int] NULL,
	[ReleaseLocationID] [int] NULL,
	[ReturnDateTime] [datetime] NULL,
	[CurrentMileageReading] [int] NULL,
	[HavePersonalBelongings] [bit] NULL,
	[PersonalBelongingsText] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[VehicleID] [int] NOT NULL,
	[Notes] [varchar](250) NOT NULL,
	[ReturnLocationID] [int] NULL,
	[Reason] [nvarchar](max) NULL,
 CONSTRAINT [PK_VehicleRequest] PRIMARY KEY CLUSTERED 
(
	[VehicleReqID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Vehicles]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Vehicles](
	[VehicleID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[PlateNumber] [nvarchar](50) NULL,
	[PlateColor] [nvarchar](50) NULL,
	[VehicleMake] [nvarchar](100) NULL,
	[VehicleModel] [nvarchar](100) NULL,
	[YearofManufacture] [int] NULL,
	[CarCompanyID] [int] NULL,
	[ContractNumber] [nvarchar](50) NULL,
	[ContractDuration] [int] NULL,
	[ContractStartDate] [datetime] NULL,
	[ContractEndDate] [datetime] NULL,
	[VehicleRegistrationNumber] [nvarchar](50) NULL,
	[VehicleRegistrationExpiry] [datetime] NULL,
	[NextService] [int] NULL,
	[TyreChange] [int] NULL,
	[Notes] [nvarchar](max) NULL,
	[DeleteFlag] [bit] NULL,
	[CreatedBy] [int] NULL,
	[UpdatedBy] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[UpdatedDateTime] [datetime] NULL,
	[VehicleName] [nvarchar](255) NULL,
	[CurrentMileage] [nvarchar](255) NULL,
	[RequestorID] [int] NULL,
	[IsAlternativeVehicle] [bit] NULL,
 CONSTRAINT [PK_Vehicles] PRIMARY KEY CLUSTERED 
(
	[VehicleID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Workflow]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Workflow](
	[WorkflowID] [int] IDENTITY(1,1) NOT NULL,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Service] [nvarchar](250) NULL,
	[WorkflowProcess] [nvarchar](250) NULL,
	[FromName] [nvarchar](250) NULL,
	[FromEmail] [nvarchar](250) NULL,
	[ToName] [nvarchar](250) NULL,
	[ToEmail] [nvarchar](250) NULL,
	[Status] [int] NULL,
	[CreatedDateTime] [datetime] NULL,
	[DelegateFromEmail] [nvarchar](250) NULL,
	[DelegateFromName] [nvarchar](250) NULL,
	[DelegateToEmail] [nvarchar](250) NULL,
	[DelegateToName] [nvarchar](250) NULL,
	[IsRedirect] [bit] NULL,
 CONSTRAINT [PK_Workflow] PRIMARY KEY CLUSTERED 
(
	[WorkflowID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[DutyTask] ADD  CONSTRAINT [DF_DutyTask_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[Gift] ADD  CONSTRAINT [DF_Gift_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[ITSupport] ADD  DEFAULT ((0)) FOR [Status]
GO
ALTER TABLE [dbo].[ITSupport] ADD  DEFAULT ((0)) FOR [IsSync]
GO
ALTER TABLE [dbo].[Leave] ADD  DEFAULT ((0)) FOR [IsSync]
GO
ALTER TABLE [dbo].[M_AdminManagement] ADD  CONSTRAINT [DF_MasterAdminManagement_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_ApproverConfiguration] ADD  CONSTRAINT [DF_M_ApproverConfiguration_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_City] ADD  CONSTRAINT [DF_M_City_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Country] ADD  CONSTRAINT [DF_M_Country_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Department] ADD  CONSTRAINT [DF_M_Department_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_DesignType] ADD  CONSTRAINT [DF_M_DesignType_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Education] ADD  CONSTRAINT [DF_M_Education_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Emirates] ADD  CONSTRAINT [DF_M_Emirates_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_EmployeeStatus] ADD  CONSTRAINT [DF_M_EmployeeStatus_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Experience] ADD  CONSTRAINT [DF_M_Experience_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Language] ADD  CONSTRAINT [DF_M_Language_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Location] ADD  CONSTRAINT [DF_M_Location_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Lookups] ADD  CONSTRAINT [DF_M_Lookups_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_MediaChannel] ADD  CONSTRAINT [DF_M_MediaChannel_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Nationality] ADD  CONSTRAINT [DF_M_Nationality_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_OfficialTaskRequest] ADD  CONSTRAINT [DF_M_OfficialTaskRequest_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Religion] ADD  CONSTRAINT [DF_M_Religion_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Section] ADD  CONSTRAINT [DF_M_Section_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_Specialization] ADD  CONSTRAINT [DF_M_Specialization_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_TripDestination] ADD  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_TripType] ADD  DEFAULT ('false') FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[M_VehicleIssues] ADD  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[MeetingcommunicationHistory] ADD  CONSTRAINT [DF_MeetingcommunicationHistory_IsMom]  DEFAULT ((0)) FOR [IsMom]
GO
ALTER TABLE [dbo].[Notification] ADD  DEFAULT ((0)) FOR [IsAnonymous]
GO
ALTER TABLE [dbo].[OfficialTask] ADD  DEFAULT ((0)) FOR [IsSync]
GO
ALTER TABLE [dbo].[Training] ADD  DEFAULT ((0)) FOR [IsNotificationReceived]
GO
ALTER TABLE [dbo].[TripVehicleIssues] ADD  DEFAULT ((0)) FOR [Type]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_IsOrgHead]  DEFAULT ((0)) FOR [IsOrgHead]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [df_NotificationPreferencesEmail]  DEFAULT ((1)) FOR [NotificationPreferencesEmail]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_DeleteFlag]  DEFAULT ((0)) FOR [DeleteFlag]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_HOD]  DEFAULT ((0)) FOR [HOD]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_HOS]  DEFAULT ((0)) FOR [HOS]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_CanRaiseOfficalRequest]  DEFAULT ((0)) FOR [CanRaiseOfficalRequest]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [DF_UserProfile_CanManageNews]  DEFAULT ((0)) FOR [CanManageNews]
GO
ALTER TABLE [dbo].[UserProfile] ADD  CONSTRAINT [IsDriverConstranint]  DEFAULT ('0') FOR [IsDriver]
GO
ALTER TABLE [dbo].[Workflow] ADD  CONSTRAINT [D_Workflow_IsRedirect]  DEFAULT ((0)) FOR [IsRedirect]
GO
ALTER TABLE [dbo].[AnnouncementHistory]  WITH CHECK ADD  CONSTRAINT [FK_AnnouncementHistory_Announcement] FOREIGN KEY([AnnouncementID])
REFERENCES [dbo].[Announcement] ([AnnouncementID])
GO
ALTER TABLE [dbo].[AnnouncementHistory] CHECK CONSTRAINT [FK_AnnouncementHistory_Announcement]
GO
ALTER TABLE [dbo].[BabyAdditionHistroy]  WITH CHECK ADD  CONSTRAINT [FK_BabyAdditionHistroy_BabyAddition] FOREIGN KEY([BabyAdditionID])
REFERENCES [dbo].[BabyAddition] ([BabyAdditionID])
GO
ALTER TABLE [dbo].[BabyAdditionHistroy] CHECK CONSTRAINT [FK_BabyAdditionHistroy_BabyAddition]
GO
ALTER TABLE [dbo].[CAComplaintSuggestionsHistory]  WITH CHECK ADD  CONSTRAINT [FK_CitizenAffairComplaintSuggestionsHistroy_CitizenAffairComplaintSuggestions] FOREIGN KEY([CAComplaintSuggestionsID])
REFERENCES [dbo].[CAComplaintSuggestions] ([CAComplaintSuggestionsID])
GO
ALTER TABLE [dbo].[CAComplaintSuggestionsHistory] CHECK CONSTRAINT [FK_CitizenAffairComplaintSuggestionsHistroy_CitizenAffairComplaintSuggestions]
GO
ALTER TABLE [dbo].[CalendarCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_CalendarCommunicationHistory_Calendar] FOREIGN KEY([CalendarID])
REFERENCES [dbo].[Calendar] ([CalendarID])
GO
ALTER TABLE [dbo].[CalendarCommunicationHistory] CHECK CONSTRAINT [FK_CalendarCommunicationHistory_Calendar]
GO
ALTER TABLE [dbo].[CertificateHistory]  WITH CHECK ADD FOREIGN KEY([CertificateID])
REFERENCES [dbo].[Certificate] ([CertificateID])
GO
ALTER TABLE [dbo].[CircularDestinationDepartment]  WITH CHECK ADD FOREIGN KEY([CircularID])
REFERENCES [dbo].[Circular] ([CircularID])
GO
ALTER TABLE [dbo].[CircularDestinationDepartment]  WITH CHECK ADD FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[CircularHistory]  WITH CHECK ADD FOREIGN KEY([CircularID])
REFERENCES [dbo].[Circular] ([CircularID])
GO
ALTER TABLE [dbo].[CitizenAffairHistory]  WITH CHECK ADD  CONSTRAINT [FK_CitizenAffairHistory_CitizenAffair] FOREIGN KEY([CitizenAffairID])
REFERENCES [dbo].[CitizenAffair] ([CitizenAffairID])
GO
ALTER TABLE [dbo].[CitizenAffairHistory] CHECK CONSTRAINT [FK_CitizenAffairHistory_CitizenAffair]
GO
ALTER TABLE [dbo].[CitizenAffairPersonalReport]  WITH CHECK ADD  CONSTRAINT [FK_CitizenAffairPersonalReport_CitizenAffairPersonalReport] FOREIGN KEY([CitizenAffairID])
REFERENCES [dbo].[CitizenAffair] ([CitizenAffairID])
GO
ALTER TABLE [dbo].[CitizenAffairPersonalReport] CHECK CONSTRAINT [FK_CitizenAffairPersonalReport_CitizenAffairPersonalReport]
GO
ALTER TABLE [dbo].[CitizenAffarFieldVisit]  WITH CHECK ADD  CONSTRAINT [FK_CitizenAffarFieldVisit_CitizenAffair] FOREIGN KEY([CitizenAffairID])
REFERENCES [dbo].[CitizenAffair] ([CitizenAffairID])
GO
ALTER TABLE [dbo].[CitizenAffarFieldVisit] CHECK CONSTRAINT [FK_CitizenAffarFieldVisit_CitizenAffair]
GO
ALTER TABLE [dbo].[CompensationCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([CompensationID])
REFERENCES [dbo].[Compensation] ([CompensationID])
GO
ALTER TABLE [dbo].[ContactHistory]  WITH CHECK ADD  CONSTRAINT [FK_ContactHistroy_Contact] FOREIGN KEY([ContactID])
REFERENCES [dbo].[Contact] ([ContactID])
GO
ALTER TABLE [dbo].[ContactHistory] CHECK CONSTRAINT [FK_ContactHistroy_Contact]
GO
ALTER TABLE [dbo].[ContactHistory]  WITH CHECK ADD  CONSTRAINT [FK_ContactManagementHistroy_ContactManagement] FOREIGN KEY([ContactID])
REFERENCES [dbo].[Contact] ([ContactID])
GO
ALTER TABLE [dbo].[ContactHistory] CHECK CONSTRAINT [FK_ContactManagementHistroy_ContactManagement]
GO
ALTER TABLE [dbo].[DiwanIdentityCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([DiwanIdentityID])
REFERENCES [dbo].[DiwanIdentity] ([DiwanIdentityID])
GO
ALTER TABLE [dbo].[Drivers]  WITH CHECK ADD FOREIGN KEY([UserProfileID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[DutyTaskCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskLabel]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskLabel]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[DutyTaskLinkToLetter]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskLinkToMeeting]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskLinkToMeeting]  WITH CHECK ADD  CONSTRAINT [FK_DutyTaskLinkToMeeting_DutyTask] FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskLinkToMeeting] CHECK CONSTRAINT [FK_DutyTaskLinkToMeeting_DutyTask]
GO
ALTER TABLE [dbo].[DutyTaskLinkToMemo]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskResponsibleDepartment]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[DutyTaskResponsibleUsers]  WITH CHECK ADD FOREIGN KEY([TaskID])
REFERENCES [dbo].[DutyTask] ([TaskID])
GO
ALTER TABLE [dbo].[GiftHistory]  WITH CHECK ADD FOREIGN KEY([GiftID])
REFERENCES [dbo].[Gift] ([GiftID])
GO
ALTER TABLE [dbo].[HRComplaintSuggestionsHistory]  WITH CHECK ADD FOREIGN KEY([HRComplaintSuggestionsID])
REFERENCES [dbo].[HRComplaintSuggestions] ([HRComplaintSuggestionsID])
GO
ALTER TABLE [dbo].[HRComplaintSuggestionsHistory]  WITH CHECK ADD  CONSTRAINT [FK_HRComplaintSuggestionsHistroy_HRComplaintSuggestions] FOREIGN KEY([HRComplaintSuggestionsID])
REFERENCES [dbo].[HRComplaintSuggestions] ([HRComplaintSuggestionsID])
GO
ALTER TABLE [dbo].[HRComplaintSuggestionsHistory] CHECK CONSTRAINT [FK_HRComplaintSuggestionsHistroy_HRComplaintSuggestions]
GO
ALTER TABLE [dbo].[ITSupportHistoryLog]  WITH CHECK ADD  CONSTRAINT [FK_ITSupportHistoryLog_ITSupport] FOREIGN KEY([ITSupportID])
REFERENCES [dbo].[ITSupport] ([ITSupportID])
GO
ALTER TABLE [dbo].[ITSupportHistoryLog] CHECK CONSTRAINT [FK_ITSupportHistoryLog_ITSupport]
GO
ALTER TABLE [dbo].[Leave]  WITH CHECK ADD FOREIGN KEY([DOADepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[Leave]  WITH CHECK ADD FOREIGN KEY([DOANameID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[LeaveCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([LeaveID])
REFERENCES [dbo].[Leave] ([LeaveID])
GO
ALTER TABLE [dbo].[LegalCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([LegalID])
REFERENCES [dbo].[Legal] ([LegalID])
GO
ALTER TABLE [dbo].[LegalKeywords]  WITH CHECK ADD FOREIGN KEY([LegalID])
REFERENCES [dbo].[Legal] ([LegalID])
GO
ALTER TABLE [dbo].[LettersInbound_RelatedOutgoing]  WITH CHECK ADD  CONSTRAINT [FK_LettersInbound_RelatedOutgoing_LettersInbound] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersInbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersInbound_RelatedOutgoing] CHECK CONSTRAINT [FK_LettersInbound_RelatedOutgoing_LettersInbound]
GO
ALTER TABLE [dbo].[LettersInboundDestinationDepartment]  WITH CHECK ADD FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[LettersInboundDestinationDepartment]  WITH CHECK ADD  CONSTRAINT [FK_LettersInboundDestinationDepartment_LettersInbound] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersInbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersInboundDestinationDepartment] CHECK CONSTRAINT [FK_LettersInboundDestinationDepartment_LettersInbound]
GO
ALTER TABLE [dbo].[LettersInboundDestinationUsers]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[LettersInboundDestinationUsers]  WITH CHECK ADD  CONSTRAINT [FK_LettersInboundDestinationUsers_LettersInbound] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersInbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersInboundDestinationUsers] CHECK CONSTRAINT [FK_LettersInboundDestinationUsers_LettersInbound]
GO
ALTER TABLE [dbo].[LettersInboundHistory]  WITH CHECK ADD  CONSTRAINT [FK_LettersInboundHistory_LettersInbound] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersInbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersInboundHistory] CHECK CONSTRAINT [FK_LettersInboundHistory_LettersInbound]
GO
ALTER TABLE [dbo].[LettersInboundKeywords]  WITH CHECK ADD FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersInbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersInboundKeywords]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[LettersOutbound_RelatedOutgoing]  WITH CHECK ADD  CONSTRAINT [FK_Letters_RelatedOutgoing_Letters] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutbound_RelatedOutgoing] CHECK CONSTRAINT [FK_Letters_RelatedOutgoing_Letters]
GO
ALTER TABLE [dbo].[LettersOutboundDestinationEntity]  WITH CHECK ADD  CONSTRAINT [FK_LetterDestinationDepartment_Letters] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutboundDestinationEntity] CHECK CONSTRAINT [FK_LetterDestinationDepartment_Letters]
GO
ALTER TABLE [dbo].[LettersOutboundDestinationUsers]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[LettersOutboundDestinationUsers]  WITH CHECK ADD  CONSTRAINT [FK_LetterDestinationUsers_Letters] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutboundDestinationUsers] CHECK CONSTRAINT [FK_LetterDestinationUsers_Letters]
GO
ALTER TABLE [dbo].[LettersOutboundHistory]  WITH CHECK ADD FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutboundHistory]  WITH CHECK ADD  CONSTRAINT [FK_LetterHistory_LetterHistory] FOREIGN KEY([HistoryID])
REFERENCES [dbo].[LettersOutboundHistory] ([HistoryID])
GO
ALTER TABLE [dbo].[LettersOutboundHistory] CHECK CONSTRAINT [FK_LetterHistory_LetterHistory]
GO
ALTER TABLE [dbo].[LettersOutboundKeywords]  WITH CHECK ADD FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutboundKeywords]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[LettersOutboundKeywords]  WITH CHECK ADD  CONSTRAINT [FK_LetterKeywords_Letters] FOREIGN KEY([LetterID])
REFERENCES [dbo].[LettersOutbound] ([LetterID])
GO
ALTER TABLE [dbo].[LettersOutboundKeywords] CHECK CONSTRAINT [FK_LetterKeywords_Letters]
GO
ALTER TABLE [dbo].[M_ApproverConfiguration]  WITH NOCHECK ADD  CONSTRAINT [FK_M_ApproverConfiguration_M_Department] FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[M_ApproverConfiguration] CHECK CONSTRAINT [FK_M_ApproverConfiguration_M_Department]
GO
ALTER TABLE [dbo].[M_ApproverConfiguration]  WITH CHECK ADD  CONSTRAINT [FK_M_ApproverConfiguration_UserProfile] FOREIGN KEY([ApproverID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[M_ApproverConfiguration] CHECK CONSTRAINT [FK_M_ApproverConfiguration_UserProfile]
GO
ALTER TABLE [dbo].[M_CityAndEmirates]  WITH CHECK ADD  CONSTRAINT [FK_M_CityAndEmirates_M_Emirates] FOREIGN KEY([EmiratesID])
REFERENCES [dbo].[M_Emirates] ([EmiratesID])
GO
ALTER TABLE [dbo].[M_CityAndEmirates] CHECK CONSTRAINT [FK_M_CityAndEmirates_M_Emirates]
GO
ALTER TABLE [dbo].[Maintenance]  WITH CHECK ADD FOREIGN KEY([RequestorID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[Maintenance]  WITH CHECK ADD FOREIGN KEY([RequestorDepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[Maintenance]  WITH CHECK ADD  CONSTRAINT [FK_MaintenanceCommunicationHistory_Maintenance] FOREIGN KEY([MaintenanceID])
REFERENCES [dbo].[Maintenance] ([MaintenanceID])
GO
ALTER TABLE [dbo].[Maintenance] CHECK CONSTRAINT [FK_MaintenanceCommunicationHistory_Maintenance]
GO
ALTER TABLE [dbo].[MaintenanceCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([MaintenanceID])
REFERENCES [dbo].[Maintenance] ([MaintenanceID])
GO
ALTER TABLE [dbo].[MediaDesignRequest]  WITH CHECK ADD FOREIGN KEY([TypeOfDesignRequired])
REFERENCES [dbo].[M_DesignType] ([DesignTypeID])
GO
ALTER TABLE [dbo].[MediaDesignRequest]  WITH CHECK ADD  CONSTRAINT [FK_MediaDesignRequest_MediaDesignRequest] FOREIGN KEY([DesignID])
REFERENCES [dbo].[MediaDesignRequest] ([DesignID])
GO
ALTER TABLE [dbo].[MediaDesignRequest] CHECK CONSTRAINT [FK_MediaDesignRequest_MediaDesignRequest]
GO
ALTER TABLE [dbo].[MediaDesignRequestCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([DesignID])
REFERENCES [dbo].[MediaDesignRequest] ([DesignID])
GO
ALTER TABLE [dbo].[MediaDesignRequestCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_MediaDesignRequestCommunicationHistory_MediaDesignRequest] FOREIGN KEY([DesignID])
REFERENCES [dbo].[MediaDesignRequest] ([DesignID])
GO
ALTER TABLE [dbo].[MediaDesignRequestCommunicationHistory] CHECK CONSTRAINT [FK_MediaDesignRequestCommunicationHistory_MediaDesignRequest]
GO
ALTER TABLE [dbo].[MediaNewCampaignRequest]  WITH CHECK ADD FOREIGN KEY([Languages])
REFERENCES [dbo].[M_Language] ([LanguageID])
GO
ALTER TABLE [dbo].[MediaNewCampaignRequest]  WITH CHECK ADD FOREIGN KEY([MediaChannels])
REFERENCES [dbo].[M_MediaChannel] ([MediaChannelID])
GO
ALTER TABLE [dbo].[MediaNewCampaignRequestCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([CampaignID])
REFERENCES [dbo].[MediaNewCampaignRequest] ([CampaignID])
GO
ALTER TABLE [dbo].[MediaNewCampaignRequestCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_MediaNewCampaignRequestCommunicationHistory_MediaNewCampaignRequest] FOREIGN KEY([CampaignID])
REFERENCES [dbo].[MediaNewCampaignRequest] ([CampaignID])
GO
ALTER TABLE [dbo].[MediaNewCampaignRequestCommunicationHistory] CHECK CONSTRAINT [FK_MediaNewCampaignRequestCommunicationHistory_MediaNewCampaignRequest]
GO
ALTER TABLE [dbo].[MediaNewPhotographerRequestCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([PhotoGrapherId])
REFERENCES [dbo].[MediaNewPhotographerRequest] ([PhotoGrapherID])
GO
ALTER TABLE [dbo].[MediaNewPhotographerRequestCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_MediaNewPhotographerRequestCommunicationHistory_MediaNewPhotographerRequest] FOREIGN KEY([PhotoGrapherId])
REFERENCES [dbo].[MediaNewPhotographerRequest] ([PhotoGrapherID])
GO
ALTER TABLE [dbo].[MediaNewPhotographerRequestCommunicationHistory] CHECK CONSTRAINT [FK_MediaNewPhotographerRequestCommunicationHistory_MediaNewPhotographerRequest]
GO
ALTER TABLE [dbo].[MediaNewPressReleaseRequestCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([PressReleaseID])
REFERENCES [dbo].[MediaNewPressReleaseRequest] ([PressReleaseID])
GO
ALTER TABLE [dbo].[MediaNewPressReleaseRequestCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_MediaNewPreessReleaseRequestHistory_MediaNewPreessReleaseRequestHistory] FOREIGN KEY([PressReleaseID])
REFERENCES [dbo].[MediaNewPressReleaseRequest] ([PressReleaseID])
GO
ALTER TABLE [dbo].[MediaNewPressReleaseRequestCommunicationHistory] CHECK CONSTRAINT [FK_MediaNewPreessReleaseRequestHistory_MediaNewPreessReleaseRequestHistory]
GO
ALTER TABLE [dbo].[MediaPhotoRequestCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([PhotoID])
REFERENCES [dbo].[MediaPhotoRequest] ([PhotoID])
GO
ALTER TABLE [dbo].[MediaPhotoRequestCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_MediaPhotoRequestHistory_MediaPhotoRequest1] FOREIGN KEY([PhotoID])
REFERENCES [dbo].[MediaPhotoRequest] ([PhotoID])
GO
ALTER TABLE [dbo].[MediaPhotoRequestCommunicationHistory] CHECK CONSTRAINT [FK_MediaPhotoRequestHistory_MediaPhotoRequest1]
GO
ALTER TABLE [dbo].[Meeting]  WITH CHECK ADD FOREIGN KEY([OrganizerDepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[Meeting]  WITH CHECK ADD FOREIGN KEY([OrganizerUserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[MeetingcommunicationHistory]  WITH CHECK ADD FOREIGN KEY([MeetingID])
REFERENCES [dbo].[Meeting] ([MeetingID])
GO
ALTER TABLE [dbo].[MeetingExternalInvitees]  WITH CHECK ADD  CONSTRAINT [FK_MeetingExternalInvitees_Meeting] FOREIGN KEY([MeetingID])
REFERENCES [dbo].[Meeting] ([MeetingID])
GO
ALTER TABLE [dbo].[MeetingExternalInvitees] CHECK CONSTRAINT [FK_MeetingExternalInvitees_Meeting]
GO
ALTER TABLE [dbo].[MeetingInternalInvitees]  WITH CHECK ADD FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[MeetingInternalInvitees]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[MeetingInternalInvitees]  WITH CHECK ADD  CONSTRAINT [FK_MeetingInternalInvitees_Meeting] FOREIGN KEY([MeetingID])
REFERENCES [dbo].[Meeting] ([MeetingID])
GO
ALTER TABLE [dbo].[MeetingInternalInvitees] CHECK CONSTRAINT [FK_MeetingInternalInvitees_Meeting]
GO
ALTER TABLE [dbo].[MeetingRemindMeAt]  WITH CHECK ADD  CONSTRAINT [FK_MeetingRemindMeAt_Meeting] FOREIGN KEY([MeetingID])
REFERENCES [dbo].[Meeting] ([MeetingID])
GO
ALTER TABLE [dbo].[MeetingRemindMeAt] CHECK CONSTRAINT [FK_MeetingRemindMeAt_Meeting]
GO
ALTER TABLE [dbo].[MemoDestinationDepartment]  WITH CHECK ADD FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[MemoDestinationDepartment]  WITH CHECK ADD FOREIGN KEY([MemoID])
REFERENCES [dbo].[Memo] ([MemoID])
GO
ALTER TABLE [dbo].[MemoDestinationUsers]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[MemoDestinationUsers]  WITH CHECK ADD  CONSTRAINT [FK_MemoDestinationUsers_MemoDetails] FOREIGN KEY([MemoID])
REFERENCES [dbo].[Memo] ([MemoID])
GO
ALTER TABLE [dbo].[MemoDestinationUsers] CHECK CONSTRAINT [FK_MemoDestinationUsers_MemoDetails]
GO
ALTER TABLE [dbo].[MemoHistory]  WITH CHECK ADD FOREIGN KEY([MemoID])
REFERENCES [dbo].[Memo] ([MemoID])
GO
ALTER TABLE [dbo].[MemoKeywords]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[MemoKeywords]  WITH CHECK ADD  CONSTRAINT [FK_MemoKeywords_MemoDetails] FOREIGN KEY([MemoID])
REFERENCES [dbo].[Memo] ([MemoID])
GO
ALTER TABLE [dbo].[MemoKeywords] CHECK CONSTRAINT [FK_MemoKeywords_MemoDetails]
GO
ALTER TABLE [dbo].[MOM]  WITH CHECK ADD  CONSTRAINT [FK_MOM_Meeting] FOREIGN KEY([MeetingID])
REFERENCES [dbo].[Meeting] ([MeetingID])
GO
ALTER TABLE [dbo].[MOM] CHECK CONSTRAINT [FK_MOM_Meeting]
GO
ALTER TABLE [dbo].[OfficialTask]  WITH CHECK ADD FOREIGN KEY([OfficialTaskType])
REFERENCES [dbo].[M_OfficialTaskRequest] ([OfficialTaskRequestID])
GO
ALTER TABLE [dbo].[OfficialTaskCommunicationHistory]  WITH CHECK ADD FOREIGN KEY([OfficialTaskID])
REFERENCES [dbo].[OfficialTask] ([OfficialTaskID])
GO
ALTER TABLE [dbo].[OfficialTaskEmployeeName]  WITH CHECK ADD FOREIGN KEY([OfficialTaskID])
REFERENCES [dbo].[OfficialTask] ([OfficialTaskID])
GO
ALTER TABLE [dbo].[OfficialTaskEmployeeName]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[ShareparticipationUsers]  WITH CHECK ADD  CONSTRAINT [FK_MemoSharedUsers_MemoDetails] FOREIGN KEY([ServiceID])
REFERENCES [dbo].[Memo] ([MemoID])
GO
ALTER TABLE [dbo].[ShareparticipationUsers] CHECK CONSTRAINT [FK_MemoSharedUsers_MemoDetails]
GO
ALTER TABLE [dbo].[SubEvent]  WITH CHECK ADD  CONSTRAINT [FK_SubEvent_EventID] FOREIGN KEY([EventID])
REFERENCES [dbo].[Event] ([EventID])
GO
ALTER TABLE [dbo].[SubEvent] CHECK CONSTRAINT [FK_SubEvent_EventID]
GO
ALTER TABLE [dbo].[TrainingCommunicationHistory]  WITH CHECK ADD  CONSTRAINT [FK_TrainingCommunicationHistory_Training] FOREIGN KEY([TrainingID])
REFERENCES [dbo].[Training] ([TrainingID])
GO
ALTER TABLE [dbo].[TrainingCommunicationHistory] CHECK CONSTRAINT [FK_TrainingCommunicationHistory_Training]
GO
ALTER TABLE [dbo].[TripCoPassengers]  WITH CHECK ADD FOREIGN KEY([VehicleReqID])
REFERENCES [dbo].[VehicleRequest] ([VehicleReqID])
GO
ALTER TABLE [dbo].[TripVehicleIssues]  WITH CHECK ADD FOREIGN KEY([IssueID])
REFERENCES [dbo].[M_VehicleIssues] ([IssueID])
GO
ALTER TABLE [dbo].[TripVehicleIssues]  WITH CHECK ADD FOREIGN KEY([VehicleReqID])
REFERENCES [dbo].[VehicleRequest] ([VehicleReqID])
GO
ALTER TABLE [dbo].[UserProfile]  WITH CHECK ADD FOREIGN KEY([CountryofResidence])
REFERENCES [dbo].[M_Country] ([CountryID])
GO
ALTER TABLE [dbo].[UserProfile]  WITH CHECK ADD FOREIGN KEY([Nationality])
REFERENCES [dbo].[M_Nationality] ([NationalityID])
GO
ALTER TABLE [dbo].[UserProfile]  WITH CHECK ADD FOREIGN KEY([OrgUnitID])
REFERENCES [dbo].[Organization] ([OrganizationID])
GO
ALTER TABLE [dbo].[UserProfile]  WITH CHECK ADD FOREIGN KEY([Religion])
REFERENCES [dbo].[M_Religion] ([ReligionID])
GO
ALTER TABLE [dbo].[UserProfileEducation]  WITH CHECK ADD FOREIGN KEY([Degree])
REFERENCES [dbo].[M_Education] ([EducationID])
GO
ALTER TABLE [dbo].[UserProfileEducation]  WITH CHECK ADD FOREIGN KEY([UserProfileId])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[UserProfileTrainingCertifications]  WITH CHECK ADD FOREIGN KEY([UserProfileId])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[UserProfileWorkExperience]  WITH CHECK ADD FOREIGN KEY([UserProfileId])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[VehicleFines]  WITH CHECK ADD FOREIGN KEY([EmailCCDepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[VehicleFines]  WITH CHECK ADD FOREIGN KEY([EmailCCUserID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[VehicleFines]  WITH CHECK ADD FOREIGN KEY([Status])
REFERENCES [dbo].[M_VehicleRequestStatus] ([StatusID])
GO
ALTER TABLE [dbo].[VehicleHistory]  WITH CHECK ADD FOREIGN KEY([VehiclReqID])
REFERENCES [dbo].[VehicleRequest] ([VehicleReqID])
GO
ALTER TABLE [dbo].[VehicleLogs]  WITH CHECK ADD FOREIGN KEY([LogType])
REFERENCES [dbo].[M_LogType] ([LogTypeID])
GO
ALTER TABLE [dbo].[VehicleLogs]  WITH CHECK ADD FOREIGN KEY([VehicleID])
REFERENCES [dbo].[Vehicles] ([VehicleID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([ApproverDepartment])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([ApproverName])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([Destination])
REFERENCES [dbo].[M_TripDestination] ([TripDestinationID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([DriverID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([Emirates])
REFERENCES [dbo].[M_Emirates] ([EmiratesID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([ReleaseLocationID])
REFERENCES [dbo].[M_TripReleaseLocation] ([ReleaseLocationID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([TobeDrivenbyDepartmentID])
REFERENCES [dbo].[M_Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([TobeDrivenbyDriverID])
REFERENCES [dbo].[UserProfile] ([UserProfileId])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([TripTypeID])
REFERENCES [dbo].[M_TripType] ([TripTypeID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([VehicleModelID])
REFERENCES [dbo].[M_VehicleModel] ([VehicleModelID])
GO
ALTER TABLE [dbo].[VehicleRequest]  WITH CHECK ADD FOREIGN KEY([City])
REFERENCES [dbo].[M_City] ([CityID])
GO
ALTER TABLE [dbo].[Vehicles]  WITH CHECK ADD FOREIGN KEY([CarCompanyID])
REFERENCES [dbo].[CarCompany] ([CarCompanyID])
GO
/****** Object:  StoredProcedure [dbo].[AccessControl]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[AccessControl]  ******/
CREATE PROCEDURE [dbo].[AccessControl] --  [AccessControl] 1,1,'Contact','ContactID','Contact','Delete'
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_ServiceID nvarchar(max) = 0,
	@P_Type nvarchar(max) = null,
	@P_ServiceIDName nvarchar(max) = null,
	@P_TableName nvarchar(max) = null,
	@P_Method nvarchar(max) = null
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	Declare @ReferenceNumber nvarchar(max) =null,@Result nvarchar(100) = 'Fail',@UserEmail nvarchar(max) = null, @RefCommand nvarchar(max)= null
	,@creator int = null,@creatorOrgUnitID int = null, @CalendarBulkEvent int  =0, @ParentReferenceNumber nvarchar(100) = null;
	select @UserEmail = OfficialMailId from UserProfile where UserProfileId = @P_UserID

	set @RefCommand = 'SELECT @ReferenceNumber = ReferenceNumber FROM '+ @P_TableName+' WHERE '+ @P_ServiceIDName +' = '+ @P_ServiceID

	if(@P_Type = 'Inbound Letter' or @P_Type = 'Outbound Letter')
	set @RefCommand = 'SELECT @ReferenceNumber = LetterReferenceID FROM '+ @P_TableName+' WHERE '+ @P_ServiceIDName +' = '+ @P_ServiceID
	ELSE IF(@P_Type ='Training')
	set @RefCommand = 'SELECT @ReferenceNumber = TrainingReferenceID FROM '+ @P_TableName+' WHERE '+ @P_ServiceIDName +' = '+ @P_ServiceID
	ELSE IF(@P_Type ='Compensation')
	set @RefCommand = 'SELECT @ReferenceNumber = ReferenceNumber FROM '+ @P_TableName+' WHERE [CompensationID] = '+ @P_ServiceID

	exec sp_executesql @RefCommand, N'@ReferenceNumber NVARCHAR(MAX) out', @ReferenceNumber out

	if(@P_Type='Calendar' and (select count(*)from Calendar where CalendarID= @P_ServiceID and ParentReferenceNumber is not null)>0)
	begin
		set @CalendarBulkEvent =1;
		select @ParentReferenceNumber= ParentReferenceNumber from Calendar where CalendarID= @P_ServiceID
	end

	select @creator = UserProfileId,@creatorOrgUnitID = OrgUnitID from UserProfile where OfficialMailId =( select top(1)FromEmail from Workflow where WorkflowProcess='SubmissionWorkflow' and ReferenceNumber = @ReferenceNumber order by WorkflowID asc)

	--select @creator , @creatorOrgUnitID

	
	if(@P_ServiceID =0)
	set @Result = 'Success'

	else if(@P_ServiceID > 0)
	begin
		if(@UserEmail in (select FromEmail from Workflow where Service = @P_Type and [ReferenceNumber] =@ReferenceNumber and FromEmail is not null))
		set @Result = 'Success'

		else if(@UserEmail in (select ToEmail from Workflow where WorkflowProcess !='DraftWorkflow' and Service = @P_Type and [ReferenceNumber] =@ReferenceNumber and ToEmail is not null))
		set @Result = 'Success'

		else if(@UserEmail in (select DelegateFromEmail from Workflow where  Service = @P_Type and [ReferenceNumber] =@ReferenceNumber  and DelegateFromEmail is not null))
		set @Result = 'Success'

		else if(@UserEmail in (select DelegateToEmail from Workflow where  Service = @P_Type and [ReferenceNumber] =@ReferenceNumber and DelegateToEmail is not null))
		set @Result = 'Success'

		else if(@P_Type = 'Memo' and  (select top 1 (W.Status) from Workflow W where W.ReferenceNumber = @ReferenceNumber order by W.WorkflowID desc)!=1)
		begin
			if(@UserEmail in (select OfficialMailId from UserProfile where UserProfileId in 
			(select D.UserID from [dbo].[MemoDestinationUsers] as D where D.[MemoID] = @P_ServiceID and( D.DeleteFlag = 0 or D.DeleteFlag is null)) and OfficialMailId is not null))
			set @Result = 'Success'

			else  if(@P_UserID in (select userID from ShareparticipationUsers where ServiceID=@P_ServiceID))
				set @Result = 'Success'

			else if((select Private from Memo where MemoID = @P_ServiceID and (DeleteFlag =0 or DeleteFlag is null))='No')
				begin
					if(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID = (select OrgUnitID from UserProfile where UserProfileID= (select CreatedBy from Memo where MemoID=@P_ServiceID and (DeleteFlag = 0 or DeleteFlag is null)))
						))
						set @Result = 'Success'
				end
		end

		else if(@P_Type = 'Outbound Letter' and (select top 1 [Status] from [dbo].[Workflow] where [ReferenceNumber] = @ReferenceNumber order by workflowID desc)<>18)
		begin
			if(@UserEmail in (select OfficialMailId from UserProfile where [OrgUnitID]=14 and (DeleteFlag = 0 or DeleteFlag is null)))
			set @Result ='Success'
		end

		else if(@P_Type = 'Inbound Letter'and (select  top 1 [Status] from [dbo].[Workflow] where [ReferenceNumber] = @ReferenceNumber  order by workflowID desc)<>24)
		begin
			if(@UserEmail in (select OfficialMailId from UserProfile where UserProfileId in 
			(select D.UserID from [dbo].[LettersInboundDestinationUsers] as D where D.[LetterID] = @P_ServiceID and( D.DeleteFlag = 0 or D.DeleteFlag is null)) and OfficialMailId is not null))
			set @Result ='Success'
		end

		else if(@P_Type = 'ITSupport')
		begin
			if(((select CreatedBy from ITSupport where ITSupportID = @P_ServiceID)= @P_UserID) or( @P_UserID in (select UserProfileId from UserProfile where OrgUnitID=11 and IsOrgHead = 1)))
			set @Result ='Success'
		end

		else if(@P_Type = 'Circular'and (select top 1 [Status] from [dbo].[Workflow] where [ReferenceNumber] = @ReferenceNumber order by WorkflowID desc)<>12)
		begin
			if(@UserEmail in (select OfficialMailId from UserProfile where DepartmentID in 
			(select D.[DepartmentID] from [dbo].[CircularDestinationDepartment] as D where D.CircularID=@P_ServiceID and 
			(D.DeleteFlag = 0 or D.DeleteFlag is null)) and (DeleteFlag = 0 or DeleteFlag is null)))
			set @Result ='Success'
		end

		else if(@P_Type = 'DutyTask')
		begin
			if((@P_UserID in (select [AssigneeID] from DutyTask where TaskID = @P_ServiceID ))or
		    	(@P_UserID in (select DelegateAssignee from DutyTask where TaskID = @P_ServiceID ))or
				(@P_UserID in (select CreatedBy from DutyTask where TaskID = @P_ServiceID )) or
				(@P_UserID in (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where TaskID = @P_ServiceID )))
				set @Result ='Success'
		end

		--else if(@P_Type = 'Citizen Affair')
		--begin
		--	if(@P_UserID in (select [InternalRequestorID] from [dbo].[CitizenAffair] where [CitizenAffairID] = @P_ServiceID and (DeleteFlag is null or DeleteFlag =0)))
		--		set @Result ='Success'
		--end

		else if(@P_Type = 'CAComplaintSuggestions')
		begin
			if((((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow')) and
				(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID in (5,6,7,8) and (DeleteFlag = 0 or DeleteFlag is null))))
				set @Result ='Success'

				if((((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='AssignToMeWorkflow')) and
				(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID in (5,6,7,8)  and (DeleteFlag = 0 or DeleteFlag is null))))
				set @Result ='Success'

				if((((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='AssignWorkflow')) and
				(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID in (5,6,7,8) and (DeleteFlag = 0 or DeleteFlag is null))))
				set @Result ='Success'

		end

		else if(@P_Type = 'Maintenance')
		begin
			if((((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)in('ApprovalWorkflow','AssignWorkflow','AssignToMeWorkflow'))) and
				((select top(1) [IsMaintenanceHeadApproved] from [dbo].[Maintenance]  where [MaintenanceID] =@P_ServiceID )=1) and
				 (@P_UserID in(select UserProfileId from UserProfile where OrgUnitID = 12)))
				set @Result ='Success'

			if((((select top(1) WorkflowID from Workflow  where [ReferenceNumber] =@ReferenceNumber and WorkflowProcess ='SubmissionWorkflow' order by WorkflowID desc)>0)) and
				(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID = 12 and IsOrgHead = 1 and (DeleteFlag = 0 or DeleteFlag is null))))
				set @Result ='Success'
		
		end

		else if(@P_Type = 'Legal')
		begin
			if((((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)in('SubmissionWorkflow','ReopenWorkflow','AssignWorkflow','AssignToMeWorkflow'))) and
				(@P_UserID in (select UserProfileId from UserProfile where OrgUnitID = 16 and (DeleteFlag = 0 or DeleteFlag is null))))
				set @Result ='Success'

	
		
		end


		else if((@P_Type = 'MediaDesignRequest' or @P_Type = 'DiwanIdentity' or @P_Type = 'MediaPhotoRequest' or
				@P_Type = 'MediaNewPhotoGrapherRequest' or @P_Type = 'MediaNewCampaignRequest' or @P_Type = 'MediaNewPressReleaseRequest') and 
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in (4,17) and IsOrgHead =1 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and IsOrgHead =1 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID  = 17 and IsOrgHead =1 and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				begin
					set @Result ='Success'	
				end

		else if((@P_Type = 'MediaDesignRequest' or @P_Type = 'DiwanIdentity' or @P_Type = 'MediaPhotoRequest' or
			@P_Type = 'MediaNewPhotoGrapherRequest' or @P_Type = 'MediaNewCampaignRequest' or @P_Type = 'MediaNewPressReleaseRequest') 
			and ((select top (1) WorkflowProcess from Workflow where ReferenceNumber=@ReferenceNumber order by WorkflowID desc) in ('AssignToMeWorkflow','AssignWorkflow')) and 
			((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in (4,17) and (DeleteFlag = 0 or DeleteFlag is null))) or
			(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4  and (DeleteFlag = 0 or DeleteFlag is null))) or
			(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID  = 17 and (DeleteFlag = 0 or DeleteFlag is null))))
			)
			begin
				set @Result ='Success'	
			end

		else if(@P_Type = 'MediaNewCampaignRequest')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=82) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
			  )
				set @Result ='Success'	
		end

		

		else if(@P_Type = 'MediaDesignRequest')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=64) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				set @Result ='Success'	
		end

		else if(@P_Type = 'DiwanIdentity')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=96) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				set @Result ='Success'	
		end

		else if(@P_Type = 'MediaPhotoRequest')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=88) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				set @Result ='Success'	
		end

		else if(@P_Type = 'MediaNewPhotoGrapherRequest')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=70) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				set @Result ='Success'	
		end

		else if(@P_Type = 'MediaNewPressReleaseRequest')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow') or
				((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select top(1) Status from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)=76) and
				((@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID = 4 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17) and @creatorOrgUnitID = 17 and (DeleteFlag = 0 or DeleteFlag is null))) or
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 17 or OrgUnitID = 4) and @creatorOrgUnitID not in(4,17) and (DeleteFlag = 0 or DeleteFlag is null))))
				)
				set @Result ='Success'	
		end

		else if((@P_Type = 'Leave' or @P_Type='CVBank' or @P_Type='UserProfile'  or @P_Type='Training' or @P_Type='Compensation') and 
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and IsOrgHead =1 and (DeleteFlag = 0 or DeleteFlag is null))))
				begin
					set @Result ='Success'	
				end

		else if((@P_Type = 'Leave'   or @P_Type='Training' or @P_Type='Compensation' or
				@P_Type = 'Announcement' or @P_Type= 'BabyAddition' or @P_Type ='Certificate' or @P_Type ='HRComplaintSuggestions') and 
				(select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)in ('AssignToMeWorkflow','AssignWorkflow')and
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9)  and (DeleteFlag = 0 or DeleteFlag is null))))
				begin
					set @Result ='Success'	
				end

		else if(@P_Type = 'Leave' )
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select IsHrHeadApproved from Leave where LeaveID = @P_ServiceID and (DeleteFlag = 0 or DeleteFlag is null))=1) and
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and (DeleteFlag = 0 or DeleteFlag is null))) )
				set @Result ='Success'	
		end

		else if(@P_Type='Training')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				((select IsHrHeadApproved from Training where TrainingID = @P_ServiceID and (DeleteFlag = 0 or DeleteFlag is null))=1) and
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and (DeleteFlag = 0 or DeleteFlag is null))) )
				set @Result ='Success'
			else if((select count(*) from Training where TraineeName=@P_UserID and TrainingReferenceID =@ReferenceNumber)>0)
				set @Result='Success'
		end

		else if(@P_Type = 'Announcement' or @P_Type= 'BabyAddition' or @P_Type ='Certificate' or @P_Type ='HRComplaintSuggestions')
		begin
			if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='SubmissionWorkflow')) and
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and (DeleteFlag = 0 or DeleteFlag is null))) )
				set @Result ='Success'	
		end

		else if(@P_Type = 'Compensation')
		begin
				--if( (((select top(1) WorkflowProcess from Workflow  where [ReferenceNumber] =@ReferenceNumber order by WorkflowID desc)='ApprovalWorkflow')) and
				--((select [IsHrHeadApproved] from [dbo].[Compensation] where CompensationID = @P_ServiceID and (DeleteFlag = 0 or DeleteFlag is null))=1) and
				--(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and (DeleteFlag = 0 or DeleteFlag is null))) )
				set @Result ='Success'		
		end

		else if(( @P_Type= 'Compensation') and 
				(@P_UserID in (select UserProfileId from UserProfile where (OrgUnitID = 9) and IsOrgHead =1 and (DeleteFlag = 0 or DeleteFlag is null))))
				begin
					set @Result ='Success'	
				end

		else if(@P_Type = 'Gift')
		begin
			if((@P_UserID in (select CreatedBy from Gift where GiftID = @P_ServiceID and (DeleteFlag =0 or DeleteFlag is null)))  )
				set @Result ='Success'	
		end

		else if(@P_Type = 'Meeting')
		begin
			if( 
				(@P_UserID in (select CreatedBy from Meeting where MeetingID = @P_ServiceID and (DeleteFlag =0 or DeleteFlag is null))) or 
				(@P_UserID in (select [UserID] from [dbo].[MeetingInternalInvitees] where MeetingID = @P_ServiceID )) 
			  )
				set @Result ='Success'	
		end

		

		else if(@P_Type = 'UserProfile')
		begin
			if( 
				(@P_UserID in (select OrgUnitID from UserProfile where @P_Method='GET' and((OrgUnitID = 4 and IsOrgHead =1) or (CanRaiseOfficalRequest = 1)) and 
				(DeleteFlag =0 or DeleteFlag is null))))
				set @Result ='Success'	

				if( 
				(@P_UserID in (select OrgUnitID from UserProfile where (@P_Method='GET' or @P_Method='POST' or @P_Method='PUT' or @P_Method='DELETE') and((OrgUnitID = 4 and IsOrgHead =1) ) and 
				(DeleteFlag =0 or DeleteFlag is null))))
				set @Result ='Success'	

				--if(@P_UserID = @P_ServiceID)
				set @Result ='Success'
		end

	end

	--if(( @P_Type= 'Compensation') and (@P_UserID != (select CreatedBy from OfficialTask where OfficialTaskID = @P_ServiceID)) and 
	--	 (select count(*) from [dbo].[Compensation] where [OfficialTaskID] = @P_ServiceID)=0)
	--			begin
	--				set @Result ='Fail'	
	--			end
	--else 
	if(( @P_Type= 'OfficialTask') and @P_ServiceID =0 and (select CanRaiseOfficalRequest from UserProfile where UserProfileId=@P_UserID) = 0)
				begin
					set @Result ='Fail'	
				end
	else if(@P_Type = 'Contact'  and (select CanEditContact
	from [dbo].[UserProfile] where UserProfileId=@P_UserID and (DeleteFlag = 0 or DeleteFlag is null)) = 0 and @P_Method in ('POST','PUT','DELETE'))
			begin
				set @Result ='Fail'	
			end
			else if(@P_Type = 'Contact'  and (select CanEditContact
	from [dbo].[UserProfile] where UserProfileId=@P_UserID and (DeleteFlag = 0 or DeleteFlag is null)) != 0 )
			begin
				set @Result ='Success'	
			end

			--if(@P_Type ='calendar' and ((@UserEmail in(select ToEmail from Worflow where ReferenceNumber in(select ParentReferenceNumber from Calendar where ReferenceNumber = @ReferenceNumber)))
			--	or (@UserEmail in(select FromEmail from Worflow where ReferenceNumber in(select ParentReferenceNumber from Calendar where ReferenceNumber = @ReferenceNumber)))
			--	or (@UserEmail in(select [DelegateFromEmail] from Worflow where ReferenceNumber in(select ParentReferenceNumber from Calendar where ReferenceNumber = @ReferenceNumber)))
			--	or (@UserEmail in(select [DelegateToEmail] from Worflow where ReferenceNumber in(select ParentReferenceNumber from Calendar where ReferenceNumber = @ReferenceNumber)))
			--))
			--set @Result ='Success'	
			if(@P_Type='Calendar' and @UserEmail in 
			
			(select OfficialMailID from UserProfile where OrgUnitID=4))
			set @Result ='Success'

			else if((@P_Type='Gift' or @P_Type='Calendar') and ((select [OrgUnitID] from [dbo].[UserProfile] where [UserProfileId]= @P_UserID)<>4)	)
				set @Result ='Fail'	
	select @Result
	end
GO
/****** Object:  StoredProcedure [dbo].[CalendarReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[CalendarReport] ******/
CREATE PROCEDURE [dbo].[CalendarReport] --[CalendarReport] 1,10 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int =15,
	@P_CalendarID int=0,
	@P_Method int=2,
	@P_ReferenceNumber nvarchar(250)='',
	@P_EventType nvarchar(250)=null,
	@P_Location nvarchar(250)='',
	@P_DateFrom datetime ='',
	@P_DateTo datetime ='',
	@P_EventRequestor nvarchar(255)='',
	@P_Status nvarchar(250)='',
	@P_SmartSearch nvarchar(250)='',
	@P_Language nvarchar(10)= null
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @UserEmail nvarchar(max)=null
	select @UserEmail= OfficialMailId from UserProfile where UserProfileId= @P_UserID

	if(@P_EventType is not null)
	begin
		Select @P_EventType = EventTypeName from M_EventType where EventTypeID=@P_EventType
	end

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	declare @result table(

	CalendarID int ,
	ReferenceNumber nvarchar(255),
	EventType nvarchar(255),
	EventRequestor nvarchar(max),
	Datefrom datetime,
	DateTo dateTime,
	Location nvarchar(255),
	UserName nvarchar(255),
	Status nvarchar(255) ,
	ApproverName  nvarchar(max),
	City  nvarchar(max)
	);

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null


	insert into @result
	select c.CalendarID,(case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,
	(select (case when @P_Language='AR' then E.[ArEventTypeName] else E.EventTypeName  end) from M_EVentType as E where E.[EventTypeID]=c.EventType)as EventType,
	c.EventRequestor,c.DateFrom,c.DateTo,
	(select(case when @P_Language='AR' then  ArLocationName else LocationName end) from M_Location where LocationID=Location),
	(select EmployeeName from UserProfile where UserProfileId=c.CreatedBy ) as UserName,
    (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID = w.Status) as Status
     ,(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 )),(Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
	 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
	where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
     and (c.CreatedBy=@P_UserID and (w.Status=120 or w.Status=123 or w.Status=124 ) )

	insert into @result
	select c.CalendarID,(case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,
	(select (case when @P_Language='AR' then E.[ArEventTypeName] else E.EventTypeName  end) from M_EVentType as E where E.[EventTypeID]=c.EventType)as EventType,
	c.EventRequestor,c.DateFrom,c.DateTo,
	(select(case when @P_Language='AR' then  ArLocationName else LocationName end) from M_Location where LocationID=Location),
	(select EmployeeName from UserProfile where UserProfileId=c.CreatedBy ) as UserName,
    (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID = w.Status) as Status
     ,(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 )),(Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
	 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
    and ((w.Status =120  and @UserEmail=w.ToEmail) or (w.Status=122  and c.CreatedBy = @P_UserID) 
	or(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=120))

	insert into @result
	select c.CalendarID,(case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,
	(select (case when @P_Language='AR' then E.[ArEventTypeName] else E.EventTypeName  end) from M_EVentType as E where E.[EventTypeID]=c.EventType)as EventType,
	c.EventRequestor,c.DateFrom,c.DateTo,
	(select(case when @P_Language='AR' then  ArLocationName else LocationName end) from M_Location where LocationID=Location),
	(select EmployeeName from UserProfile where UserProfileId=c.CreatedBy ) as UserName,
    (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID = w.Status) as Status
     ,(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 )),(Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
	 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
     and(c.CreatedBy=@P_UserID and (w.Status=121 ) )
	
	;WITH CTE AS(
   SELECT 
    RN = ROW_NUMBER()OVER(PARTITION BY CalendarID ORDER BY CalendarID)
   FROM @result
	)
	DELETE FROM CTE WHERE RN > 1
	
	--select * from @result

	-- update a set a.EventRequestor = (select  EventRequestor from Calendar where ReferenceNumber=a.ReferenceNumber )
	-- , a.EventType = (select (select (case when @P_Language='AR' then E.[ArEventTypeName] else E.EventTypeName  end) from M_EventType as E where E.EventTypeID= EventType) from Calendar where ReferenceNumber=a.ReferenceNumber ) from @result as a

	
	if(@P_ReferenceNumber != '')
	 delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'
	 
	 if(@P_EventRequestor != '')
	 delete from @result where EventRequestor not like '%'+@P_EventRequestor+'%'

	 if(@P_Location != '')
	 delete from @result where Location not like '%'+@P_Location+'%'

	 if(@P_Status!='')
	 delete from @result where Status not like '%'+@P_Status+'%'

	 if(@P_EventType is not null or @P_EventType !='')
	 delete from @result where EventType  not like '%' +@P_EventType+ '%'

	 if( @P_DateFrom!='' )
     delete from @result where cast( DateFrom as date) < cast(@P_DateFrom as date)

    if( @P_DateTo!='')
     delete from @result where cast(DateTo as date) > cast(@P_DateTo as date)
	--SELECT * FROM @result
     if(@P_SmartSearch != '')
     begin
     select CalendarID ,ReferenceNumber,EventType,EventRequestor,Datefrom,
	DateTo,Location,UserName,Status,ApproverName,City from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result where
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (EventRequestor  like '%'+@P_SmartSearch+'%') or
        (Location  like '%'+@P_SmartSearch+'%') or  (Status  like '%'+@P_SmartSearch+'%') or       
        ((SELECT  CONVERT(nvarchar(10), cast(DateFrom as date), 103))  like '%'+@P_SmartSearch+'%')  or
        ((SELECT  CONVERT(nvarchar(10), cast(DateTo as date), 103))  like '%'+@P_SmartSearch+'%') or
        (EventType like '%'+@P_SmartSearch+'%')or  (City like '%'+@P_SmartSearch+'%')
		or  (ApproverName like '%'+@P_SmartSearch+'%')))as m 		
	 end

	 if( @P_SmartSearch = '')
	 select * from @result 
  
END	
GO
/****** Object:  StoredProcedure [dbo].[CircularReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[CircularReport] ******/
CREATE PROCEDURE [dbo].[CircularReport] --[CircularReport] 1,10,'',2,null,
    @P_PageNumber int =1,
	@P_PageSize int =10,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_Status nvarchar(255) = null,
	@P_SourceOU nvarchar(255) = null,
	@P_DestinationOU nvarchar(255) = null,
	@P_Priority nvarchar(255) = null,
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(max)= null, 
	@P_Language nvarchar(10) = 'EN'

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @P_UserEmail nvarchar(255),@P_Username nvarchar(255) ;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	 SET @P_UserEmail = (Select [OfficialMailId] from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)
	 SET @P_Username = (Select [UserProfileId] from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max),
		FromMail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateTOEmail,FromEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

   declare @result table(
	id int,
	CircularID int,
	ReferenceNumber nvarchar(255),
	Title nvarchar(255),
	Source nvarchar(max),
	Destination nvarchar(max),
	Status nvarchar(255),
	CreatedDateTime datetime,
	Priority nvarchar(255),
	UpdatedDateTime datetime
	);
	
 Insert into @result
 Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
    a.CircularID,
    a.ReferenceNumber,
    a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
    (select STUFF(replace((SELECT ',' + 
CAST((case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) AS nVARCHAR(max)) AS [text()]
    FROM  [dbo].M_Department where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID  and DeleteFlag=0)
FOR XML PATH('')),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
    a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime 
   FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0  and( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail) and( w.Status=13 or w.Status=16))as m 
   	 
	--Outgoing Circular
	 insert into @result
	 Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
	 a.CircularID,
	 a.ReferenceNumber,
	 a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	 (select STUFF(replace((SELECT ',' + 
CAST((case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) AS nVARCHAR(max)) AS [text()]
    FROM  [dbo].M_Department where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID  and DeleteFlag=0)
FOR XML PATH('')),'&amp;','&'), 1, 1, NULL) )AS Destination,
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
	 a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	 (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime 
	FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
	where a.DeleteFlag = 0 AND (((a.CreatedBy = @P_Username and w.Status<>12 and w.Status!=16) or (w.FromMail=@P_UserEmail and w.Status<>12) or 
	@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.ReferenceNumber)) ) and  (@P_UserEmail != w.ToEmail or @P_Username = a.CreatedBy)) as m  	
	
	--Incoming Circular	
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
	a.CircularID,
	a.ReferenceNumber,
	a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF(replace((SELECT ',' + 
CAST((case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) AS nVARCHAR(max)) AS [text()]
    FROM  [dbo].M_Department where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID  and DeleteFlag=0)
FOR XML PATH('')),'&amp;','&'), 1, 1, NULL) )AS Destination,
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime 
	FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
   where a.DeleteFlag = 0 and w.Status = 14 
   and (
   (@P_Username in (select UserProfileId from [dbo].[UserProfile] where DepartmentID in (
    (select [DepartmentID] from [dbo].[CircularDestinationDepartment] where [CircularID]=a.CircularID and DeleteFlag =0 )))))
   ) as m 
   
   ;With CTE_Duplicates as
   (select   row_number() over(partition by ReferenceNumber order by ReferenceNumber ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1
   	 
	if(@P_SourceOU != '')
	 delete from @result where Source not like '%'+@P_SourceOU+'%'

	 if(@P_DestinationOU != '')
	 delete from @result where @P_DestinationOU not in (select value from string_split(Destination,','))

	 if(@P_Priority != '')
	 delete from @result where Priority not like @P_Priority

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_DateTo as date)

	 if(@P_Status != '' )
	 begin
		delete from @result where Status != @P_Status
     end

	 if(@P_SmartSearch is not null)
	 begin
		 select id,CircularID,ReferenceNumber,Title ,Source,Destination,Status,CreatedDateTime,Priority,UpdatedDateTime from (SELECT row_number() over (Order By  [CircularID] desc) as slno,
		 * from @result) as m where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(Source  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or		
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		((select count(K.DepartmentID) from CircularDestinationDepartment as K where K.CircularID=m.CircularID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		or
		(Priority  like '%'+@P_SmartSearch+'%'))  and slno between @StartNo and @EndNo 
	 end

	 if( @P_SmartSearch is  null)
	 begin
		select * from @result
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[CitizenaffairDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[CitizenaffairDashboardCount]     ******/
CREATE PROCEDURE [dbo].[CitizenaffairDashboardCount] 
	@P_UserID int =10
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	 SET @UserEmail = (Select [OfficialMailId] from [dbo].[UserProfile] where UserProfileId = @P_UserID)

		declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(255),
	FromEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(250))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Citizen Affair'  group by ReferenceNumber) 


	declare @RequestComplientList table(
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	FromEmail nvarchar(255),
	Status nvarchar(250))

	insert into @RequestComplientList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'CAComplaintSuggestions'  group by ReferenceNumber ) 

    -- Insert statements for procedure here
	declare  @New int =0, @Closed int =0, @NeedMoreInfo int =0, @CAnew int=0, @ComplientNew int =0, @CAClose int=0, @ComplientClose int =0,
			@InProgressRequest int =0, @MyPendingRequest int =0


	
				SELECT  @CAnew =count(*)
		from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and(( @UserEmail = r.ToEmail ) or
				(@UserEmail = r.FromEmail and ((r.WorkflowProcess='SubmissionWorkflow' and ((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess='SubmissionWorkflow')=1)) or r.WorkflowProcess='DraftWorkflow')))
				and (r.Status = 59 or r.Status=58)
			
			SELECT   @ComplientNew =count(*)
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and 
			@P_UserID in (select [UserProfileId] from [dbo].[UserProfile] U where U.OrgUnitID in (5,6,7,8))  and r.Status = 51 


	set @New=(@CAnew)+(@ComplientNew);


	
				SELECT @CAClose = count(*)
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and ((W.Status = 60 or w.Status = 62) or w.WorkflowProcess='EscalateWorkflow'))) 
			or(@P_UserID=m.CreatedBy)) and (r.Status=60 or r.Status= 62)

		SELECT   @ComplientClose = count(*)
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  Where  m.[DeleteFlag] !=1
			and
			((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and W.Status = 52)) OR (@P_UserID=M.CreatedBy AND R.Status=52))



	set @Closed=(@CAClose)+(@ComplientClose);


	set @NeedMoreInfo=(SELECT  count(*)
				from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (@UserEmail =r.ToEmail and r.Status = 61) or (@UserEmail IN (select r.FromEmail from Workflow as r where m.ReferenceNumber = r.ReferenceNumber and r.Status = 61)))

			
	SELECT @MyPendingRequest =  count(*)
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (@P_UserID = (select UserProfileId from [dbo].[UserProfile] U where U.OfficialMailId= r.ToEmail)  and r.Status = 59) or (( @UserEmail = r.ToEmail
	or 
	  @UserEmail = r.DelegateTOEmail)
	 and r.Status=59)

			
	set @InProgressRequest =
	(SELECT   count(*)
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and 
			((r.WorkflowProcess ='EscalateWorkflow'  and r.Status = 59 and @P_UserID=m.CreatedBy)
				or (@UserEmail = r.FromEmail and  (r.WorkflowProcess in('SubmissionWorkflow','EscalateWorkflow') and 
				((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess in('SubmissionWorkflow','EscalateWorkflow'))>1))))
				and (r.Status = 59 ))
	--		+
	--(select count(*)
	--		from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
	--		and @P_UserID = m.CreatedBy))


			 select @New as New, @NeedMoreInfo as NeedMoreInfo , @Closed as Closed, @InProgressRequest as InProgressRequest, @MyPendingRequest as MyPendingRequest

END
GO
/****** Object:  StoredProcedure [dbo].[CitizenAffairReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[CitizenAffairReport]     ******/
CREATE PROCEDURE [dbo].[CitizenAffairReport] 
	-- Add the parameters for the stored procedure here
	 @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =0,
	@P_UserID int = 0,
	@P_Status nvarchar(255) = '',
	@P_RequestType nvarchar(255) = '',
	@P_PersonalLocationName nvarchar(255) = '',
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_PhoneNumber nvarchar(255) = '',
	@P_ReferenceNumber nvarchar(255) = '',
	@P_SmartSearch nvarchar(max)= null,
	@P_SourceName nvarchar(max)= null,
	@P_Language nvarchar(max)= 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @UserEmail nvarchar(max) = null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	SET @P_SourceName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_SourceName)
	select @UserEmail = OfficialMailId from UserProfile where UserProfileId = @P_UserID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1


		declare @RequestComplientList table(
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	FromEmail nvarchar(255),
	Status nvarchar(250))

	insert into @RequestComplientList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'CAComplaintSuggestions'  group by ReferenceNumber ) 

	declare @RequestList table(
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	FromEmail nvarchar(255),
	Status nvarchar(250))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Citizen Affair'  group by ReferenceNumber ) 



    declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	CitizenAffairID int,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max),
	PersonalLocationName nvarchar(max),
	PhoneNumber nvarchar(max),
	Status nvarchar(max),
	RequestedDateTime datetime,
	AttendedBy nvarchar(250),
	AssignedTo nvarchar(255),
	SourceOU nvarchar(max),
	Creator nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	Subject nvarchar(max))


	-- New requst
	insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			null,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and(( @UserEmail = r.ToEmail and r.WorkflowProcess !='DraftWorkflow' ) or
				(@UserEmail = r.FromEmail and 
				((r.WorkflowProcess='SubmissionWorkflow' 
				and ((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess='SubmissionWorkflow')=1)) 
					or r.WorkflowProcess='DraftWorkflow')))
				and (r.Status = 59 or r.Status=58)
			
	insert into @Result		 
			SELECT   m.CAComplaintSuggestionsID,m.ReferenceNumber,(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = 2),
			null as LocationName,
			PhoneNumber as PhoneNumber,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			(select (case when a.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.ToEmail) 
					when a.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by W.WorkflowID desc) as a),null ,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,null,Subject
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and 
			@P_UserID in (select [UserProfileId] from [dbo].[UserProfile] U where U.OrgUnitID in (5,6,7,8))  and r.Status = 51 --and r.WorkflowProcess='SubmissionWorkflow'
			
--  Need more info requests


	insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]) ,
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator, null,
			(select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
		,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (@UserEmail =r.ToEmail and r.Status = 61) or (@UserEmail IN (select r.FromEmail from Workflow as r where r.ReferenceNumber = m.ReferenceNumber and r.Status = 61))
			
--closed

insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator, null,	
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
		from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and (W.Status = 60 or w.Status = 62))) or(@P_UserID=m.CreatedBy and (r.Status=60 or r.Status= 62)))

	 insert into @Result
		SELECT   m.CAComplaintSuggestionsID,m.ReferenceNumber,(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = 2),
			null as LocationName,
			PhoneNumber as PhoneNumber,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			(select (case when a.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.ToEmail) 
					when a.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by W.WorkflowID desc) as a),null ,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,null,Subject
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  Where  m.[DeleteFlag] !=1
			and
			((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and W.Status = 52)) OR (@P_UserID=M.CreatedBy AND R.Status=52))


-- My Own Personal Requests
			insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			null,	
			(select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
				and 
			--(@UserEmail in (select FromEmail from Workflow as W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess='EscalateWorkflow') or
				(r.WorkflowProcess ='EscalateWorkflow'  and r.Status = 59 and @P_UserID=m.CreatedBy)
				or (@UserEmail = r.FromEmail and  (r.WorkflowProcess='SubmissionWorkflow' and 
				((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess='SubmissionWorkflow')>1)))
				and (r.Status = 59 )

	if(@P_RequestType  !='' and @P_RequestType is not null)
	delete  from @Result where RequestType != @P_RequestType or RequestType is null

	if(@P_ReferenceNumber != '' and @P_ReferenceNumber is not null)
	 delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%' or ReferenceNumber is null

	 if(@P_PersonalLocationName != '' and @P_PersonalLocationName is not null)
	 delete from @result where PersonalLocationName not like '%'+@P_PersonalLocationName+'%' or PersonalLocationName is null
 
	  if(@P_SourceName != '' and @P_SourceName is not null)
	 delete from @result where Creator not like '%'+@P_SourceName+'%' or Creator is null

	 if(@P_PhoneNumber != '' and @P_PhoneNumber is not null)
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNumber+'%' or PhoneNumber is null

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestedDateTime as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestedDateTime as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='' and @P_Status is not null)
	 begin
		delete from @result where Status !=  @P_Status or Status is null
	 end


	 if(@P_SmartSearch is not null  )
	begin
		select * from (SELECT row_number() over (Order By [RequestedDateTime] desc) as slno, * from @result as a where 
	((ReferenceNumber  like '%'+@P_SmartSearch+'%') or(RequestType  like '%'+@P_SmartSearch+'%') or 
		 (Status  like '%'+@P_SmartSearch+'%') or (PersonalLocationName like '%'+@P_SmartSearch+'%') or
		  ((SELECT  CONVERT(nvarchar(10), cast(RequestedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')   
		or (PhoneNumber  like '%'+@P_SmartSearch+'%')or(Creator like '%'+@P_SmartSearch+'%')or(AssignedTo like '%'+@P_SmartSearch+'%')
		or(SourceOU like '%'+@P_SmartSearch+'%')or(ApproverDepartment like '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%') or((Select Subject from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		 or((Select c.Source from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')or ((Select Details from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=172))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=173))
			end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		or( (select (case when m.RequestCreatedBy=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=171))
			else (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=226) end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		 or((select case when @P_Language='EN' then L.DisplayName else L.ArDisplayName end from M_Lookups as L where L.Module='CitizenAffair' and  L.Category = (Select c.NotifyUpon from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber)) like '%'+@P_SmartSearch+'%')
		 or ((Select EmployeeName from UserProfile join CitizenAffair as c on UserProfileId=c.InternalRequestorID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
			or((Select  (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department join CitizenAffair as c on DepartmentID=c.InternalRequestorDepartmentID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or((Select  (case when c.RequestType=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=152))
			when c.RequestType=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=153))
			end )from CitizenAffair as c  where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')  or((Select c.ExternalRequestEmailID from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')
		 or((Select c.EmiratesID from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		 or((Select c.FindingNotes from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.RequetsedBy from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.Name from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.PhoneNumber from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select c.VisitObjective from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select CONVERT(nvarchar(10), cast(c.Date as date), 103) from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	  or ((select count(K.Location) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then LocationName else ArLocationName end) from M_Location as d where d.LocationID= K.Location )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.City) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.LocationID) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.LocationID )like '%'+@P_SmartSearch+'%')>0)
     --or ((select count(K.LocationName) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID   and a.RequestType='FieldVisit'and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.LocationName )like '%'+@P_SmartSearch+'%')>0)
	 or((select (case when @P_Language ='EN' then L.DisplayName else L.ArDisplayName end) from M_Lookups as L where L.Category = (Select c.ForWhom from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit')) like '%'+@P_SmartSearch+'%')		   
    or((Select c.Name from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
    or((Select c.Age from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
   or((Select c.FindingNotes from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MaritalStatus from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MonthlySalary from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.NoOfChildrens from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Recommendation from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.PhoneNumber from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Destination from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.ReportObjectives from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or ((select count(K.City) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	or ((select count(K.Emirates) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report' and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.Emirates )like '%'+@P_SmartSearch+'%')>0)
	 or ((Select c.Employer from CitizenAffairPersonalReport as c  where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%') 
	or((Select c.EmiratesID from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
		))m
	 end

	 if(@P_SmartSearch is null)
	 select * from (SELECT row_number() over (Order By [RequestedDateTime] desc) as slno, * from @result) as m
	
END
GO
/****** Object:  StoredProcedure [dbo].[ContactReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[ContactReport] --  [ContactReport]0,0,2,1


    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_Department nvarchar(250) = null ,
	@P_UserName nvarchar(250) = null,
	@P_EntityName nvarchar(250) = null,
	@P_Designation nvarchar(250)= null,
	@P_EmailId nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_SmartSearch nvarchar(max)= null
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	print @startNo
	print @endno

  	declare @result table
	(
	id int,
	ContactID int ,
	ReferenceNumber nvarchar(250),
	Department nvarchar(250),
	UserName nvarchar(255),
	EntityName nvarchar(max),
	Designation nvarchar(250),
	EmailId nvarchar(max),
	PhoneNumber nvarchar(max),
	Photo nvarchar(max)
	
	);


 Insert into @result

 	
	select
	 row_number() over (Order By  C.[ContactID]) as slno,
	
	C.ContactID,
	C.ReferenceNumber,
	C.[Department],
	C.[UserName],
	C.[EntityName],
	C.[Designation],
	C.[EmailId],
	C.[PhoneNumber],
	A.AttachmentsName from Contact C left join
	Attachments as A on A.ServiceID=[ContactID] and A.Type='Contact' and C.DeleteFlag= 0

	
 if(@P_Department != '')
	 delete from @result where Department != @P_Department
	 	
	 if(@P_UserName  != '') 
	 delete from @result where UserName not like '%'+@P_UserName+'%'

	if(@P_EntityName  != '') 
	 delete from @result where EntityName not like '%'+@P_EntityName+'%'

	if(@P_Designation  != '') 
	 delete from @result where Designation not like '%'+@P_Designation+'%'
	 	 
	if(@P_EmailId  != '') 
	 delete from @result where EmailId not like '%'+@P_EmailId+'%'
	    	 
	if(@P_PhoneNumber  != '') 
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNumber+'%'
     end



 if(@P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [ContactID]) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 )
	 select count(*) from @result


	 if(@P_Method = 2 and  @P_SmartSearch is not null)
	 begin
		select * from @result where 
		((Department  like '%'+@P_SmartSearch+'%') or (UserName  like '%'+@P_SmartSearch+'%') or
		(EntityName  like '%'+@P_SmartSearch+'%') or (Designation  like '%'+@P_SmartSearch+'%') or
		(EmailId like '%'+@P_SmartSearch+'%') or (PhoneNumber  like '%'+@P_SmartSearch+'%'))
		 and id between @StartNo and @EndNo 
	 end


	 if(@P_Method = 2 and  @P_SmartSearch is  null)
	 begin
		select * from @result
 end
 
GO
/****** Object:  StoredProcedure [dbo].[CVBankReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[CVBankReport]    ******/
CREATE procedure [dbo].[CVBankReport] --  [CVBankReport]1,10,2,3,'','','','','','',''
   @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =0,
	@P_CandidateName nvarchar(max) = null,
	@P_CountryofResidence nvarchar(max) = null,
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_EducationalQualification nvarchar(max) = null,
	@P_Specializations nvarchar(max) = null,
	@P_YearsofExperience nvarchar(max) = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10)='EN',
	@P_UserID int = null
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	print @startNo
	print @endno

  	declare @result table
	(
	id int,
	CvBankID int ,
	ReferenceNumber nvarchar(250),
	UserName nvarchar(250),
	CandidateName nvarchar(250),
	EmailId nvarchar(max),
	JobTitle nvarchar(250),
	YearsofExperience nvarchar(250),		
	Specializations nvarchar(max),
	EducationalQualification nvarchar(max),
	CityofResidence nvarchar(max),
	City nvarchar(max),
	Date Datetime
	);


 Insert into @result

 	
	select
	 row_number() over (Order By  C.[CVBankID]) as slno,
	
	C.CVBankID,
	C.ReferenceNumber,
	(Select EmployeeName from UserProfile as U where U.UserProfileId =C.CreatedBy),
	C.[CandidateName],
	C.[EmailId],
	C.[JobTitle],
	(select (case when @P_Language ='EN' then [ExperienceName] else [ArExperienceName] end) from M_Experience where ExperienceID = C.[YearsofExperience] ),
	(select (case when @P_Language ='EN' then [SpecializationName] else [ArSpecializationName] end) from M_Specialization where SpecializationID = C.[Specialization]),
	(select (case when @P_Language ='EN' then [EducationName] else [ArEducationName] end) from M_Education where EducationID = C.[EducationalQualification]),
	(select (case when @P_Language ='EN' then CountryName else ArCountryName end) from M_Country where CountryID = C.CountryofResidence )	,
	(select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City where CityID = C.CityofResidence )	
	,C.[CreatedDateTime] as Date
	from CVBank as C Where C.DeleteFlag = 0 --and C.CreatedBy= @P_UserID 

	
     if(@P_CandidateName != '' and @P_CandidateName != 'All')
	 delete from @result where CandidateName != @P_CandidateName

	 if(@P_CountryofResidence != '')
	 delete from @result where CVBankId not in (select CVBankId from CVBank where CountryofResidence = (select CountryID from [dbo].[M_Country] where CountryName = @P_CountryofResidence))

	 if(@P_YearsofExperience  != '') 
	 delete from @result where YearsofExperience not like '%'+@P_YearsofExperience+'%'

	 if(@P_Specializations  != '') 
	 delete from @result where Specializations not in (select(case when @P_Language='EN' then SpecializationName else ArSpecializationName end ) from [dbo].[M_Specialization] where SpecializationName = @P_Specializations)

	 if(@P_DateFrom is not null)
	 delete from @result where cast( Date as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(Date as date) > cast(@P_DateTo as date)


		select *,CityofResidence  as Country from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%')or(CandidateName  like '%'+@P_SmartSearch+'%') or (a.JobTitle  like '%'+@P_SmartSearch+'%')or (YearsofExperience  like '%'+@P_SmartSearch+'%') 
		or (a.Specializations like '%'+@P_SmartSearch+'%')
		or((select Address from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select AreaofExpertise from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select EmailId from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or (CityofResidence  like '%'+@P_SmartSearch+'%') or (a.EducationalQualification like '%'+@P_SmartSearch+'%')
		or( (select (case when k.Gender=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=167))
			when k.Gender=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=168))
			end) from CVBank as k where k.CVBankId=a.CVBankId   ) like  '%'+@P_SmartSearch+'%')
			 or	((SELECT  CONVERT(nvarchar(10), cast(Date as date), 103) )  like '%'+@P_SmartSearch+'%')  	or (CityofResidence like '%'+@P_SmartSearch+'%'))
 end
GO
/****** Object:  StoredProcedure [dbo].[Delete_CarCompanyByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Delete_CarCompanyByID]  ******/
Create PROCEDURE [dbo].[Delete_CarCompanyByID]
	-- Add the parameters for the stored procedure here
	@P_CarCompanyID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[CarCompany] Set DeleteFlag = 1 where CarCompanyID = @P_CarCompanyID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_CertificateByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_CertificateByID]
       @P_CertificateID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[Certificate] Set DeleteFlag = 1 where CertificateID = @P_CertificateID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_CircularByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_CircularByID] 
         @P_CircularID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[Circular] Set DeleteFlag = 1 where CircularID = @P_CircularID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_CitizenAffairByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_CitizenAffairByID]
	-- Add the parameters for the stored procedure here
	@P_CitizenAffairID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [dbo].[CitizenAffair] Set DeleteFlag = 1 where [CitizenAffairID] = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_ContactByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_ContactByID]
	-- Add the parameters for the stored procedure here
	@P_ContactID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[Contact] Set DeleteFlag = 1 where ContactID = @P_ContactID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_CVBankByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_CVBankByID]
	-- Add the parameters for the stored procedure here
	@P_CVBankId int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[CVBank] Set DeleteFlag = 1 where CVBankId = @P_CVBankId
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_DutyTask]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Delete_DutyTask]   ******/
CREATE PROCEDURE [dbo].[Delete_DutyTask]
       @P_DutyTaskID int = null,
	    @P_UserID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[DutyTask] Set DeleteFlag = 1,Status=193 where [TaskID] = @P_DutyTaskID
	insert into [dbo].[DutyTaskCommunicationHistory]([TaskID],[Message],[Action],[AttachmentGuid],
	[AttachmentName],[CreatedBy],[CreatedDateTime])
    select @P_DutyTaskID,'','Delete','','',@P_UserID,GETUTCDATE()

	select @P_DutyTaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_HRComplaintSuggestionsByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Delete_HRComplaintSuggestionsByID] 
         @P_HRComplaintSuggestionsID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[HRComplaintSuggestions]Set DeleteFlag = 1 where HRComplaintSuggestionsID = @P_HRComplaintSuggestionsID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_LetterInboundByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_LetterInboundByID]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[LettersInbound] Set DeleteFlag = 1 where LetterID = @P_LetterID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_LetterOutboundByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_LetterOutboundByID]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[LettersOutbound] Set DeleteFlag = 1 where LetterID = @P_LetterID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MaintenanceByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_MaintenanceByID]
	@P_MaintenanceID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[Maintenance] Set DeleteFlag = 1 where [MaintenanceID] = @P_MaintenanceID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MediaDesignRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_MediaDesignRequestByID]
	@P_DesignID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[MediaDesignRequest] Set DeleteFlag = 1 where DesignID = @P_DesignID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MediaNewCampaignRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_MediaNewCampaignRequestByID]
	@P_CampaignID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[MediaNewCampaignRequest] Set DeleteFlag = 1 where CampaignID = @P_CampaignID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MediaNewPhotographerRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Delete_MediaNewPhotographerRequestByID]
@P_PhotoGrapherID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[MediaNewPhotographerRequest] Set DeleteFlag = 1 where PhotoGrapherID = @P_PhotoGrapherID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MediaNewPressReleaseRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Delete_MediaNewPressReleaseRequestByID]
@P_PressReleaseID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[MediaNewPressReleaseRequest] Set DeleteFlag = 1 where PressReleaseID = @P_PressReleaseID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_MemoByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Delete_MemoByID]
	@P_MemoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	Update [dbo].[Memo] Set DeleteFlag = 1 where MemoID = @P_MemoID
END
/****** Object:  StoredProcedure [dbo].[Delete_NewsByID]    Script Date: 12-10-2019 10.29.11 AM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Delete_NewsByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_NewsByID] 
         @P_NewsID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @Result bit=1
	Update [dbo].[News] Set DeleteFlag = 1 where NewsID = @P_NewsID
	select @Result
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_PhotoRequestById]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_PhotoRequestById] 
	-- Add the parameters for the stored procedure here
	@P_PhotoID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [dbo].[MediaPhotoRequest] Set DeleteFlag = 1 where PhotoID = @P_PhotoID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_PhotosByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_PhotosByID] 
         @P_PhotoID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @Result bit=1
	Update  [dbo].[Photos]Set DeleteFlag = 1 where PhotoID = @P_PhotoID
	select @Result
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_TrainingByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_TrainingByID] 
	-- Add the parameters for the stored procedure here
	@P_TrainingID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [dbo].[Training] Set DeleteFlag = 1 where TrainingID = @P_TrainingID
END

GO
/****** Object:  StoredProcedure [dbo].[Delete_UserProfileByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Delete_UserProfileByID]
	-- Add the parameters for the stored procedure here
	@P_UserProfileId int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[UserProfile] Set DeleteFlag = 1 where UserProfileId = @P_UserProfileId
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_VehicleByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Delete_VehicleByID]  ******/
CREATE PROCEDURE [dbo].[Delete_VehicleByID]
	-- Add the parameters for the stored procedure here
	@P_VehicleID int = null
AS
BEGIN

	SET NOCOUNT ON;
	Update [dbo].[Vehicles] Set DeleteFlag = 1 where VehicleID = @P_VehicleID
END
GO
/****** Object:  StoredProcedure [dbo].[Delete_VehicleFineByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Delete_VehicleFineByID]  ******/
Create PROCEDURE [dbo].[Delete_VehicleFineByID]
	-- Add the parameters for the stored procedure here
	@P_VehicleFineID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Update [dbo].[VehicleFines] Set DeleteFlag = 1 where VehicleFineID = @P_VehicleFineID
END
GO
/****** Object:  StoredProcedure [dbo].[ExternalContactReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[ExternalContactReport]  ******/
CREATE procedure [dbo].[ExternalContactReport] --  [ExternalContactReport]1,10,2,1
    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_EntityName nvarchar(250) = null ,
	@P_ContactName nvarchar(250)=null,
	--@P_UserName nvarchar(250) = null,	
	@P_GoverenmentEntity int= 0,
	@P_EmailId nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_SmartSearch nvarchar(max)= null,
	@P_Language nvarchar(max)= 'EN'
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	print @startNo
	print @endno

  	declare @result table
	(
	id int,
	ContactID int ,
	ReferenceNumber nvarchar(250),
	EntityName nvarchar(250),
	ContactName nvarchar(250),
	IsGoverenmentEntity int,	
	GoverenmentEntity nvarchar(250),
	EmailId nvarchar(max),
	PhoneNumber nvarchar(max)	
	
	);

	--if(@P_GoverenmentEntity !=0)
	--set @P_GoverenmentEntity =(case when @P_GoverenmentEntity =1 then ( select case when @P_Language='EN' then DisplayName else ArDisplayName end from M_Lookups where LookupsID= 130)
	--else  ( select case when @P_Language='EN' then DisplayName else ArDisplayName end from M_Lookups where LookupsID= 131) end)

	--select @P_GoverenmentEntity

 Insert into @result
	select
	 row_number() over (Order By  C.[ContactID]) as slno,	
	C.ContactID,
	C.ReferenceNumber,
	C.[EntityName],
	C.[UserName],	
	--(select EmployeeName from [UserProfile] as U where U.UserProfileId = @P_UserID),
	C.OfficialEntity,
	(case when C.OfficialEntity =1 then ( select case when @P_Language='EN' then DisplayName else ArDisplayName end from M_Lookups where LookupsID= 130)
	else  ( select case when @P_Language='EN' then DisplayName else ArDisplayName end from M_Lookups where LookupsID= 131) end),
	C.[EmailId],
	C.[PhoneNumber] from Contact C where C.DeleteFlag= 0 and C.Type ='External'

	update @result set IsGoverenmentEntity= 2 where IsGoverenmentEntity=0
	
 if(@P_EntityName!= '')
	 delete from @result where EntityName != @P_EntityName
	 	
	-- if(@P_UserName  != '') 
	-- delete from @result where UserName not like '%'+@P_UserName+'%'

	if(@P_ContactName  != '') 
	 delete from @result where ContactName not like '%'+@P_ContactName+'%'

	if(@P_GoverenmentEntity >0 ) 
	 delete from @result where IsGoverenmentEntity != @P_GoverenmentEntity
	 	 
	if(@P_EmailId  != '') 
	 delete from @result where EmailId not like '%'+@P_EmailId+'%'
	    	 
	if(@P_PhoneNumber  != '') 
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNumber+'%'
     



 if(@P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [ContactID]) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 )
	 select count(*) from @result


	 if(@P_Method = 2 and  @P_SmartSearch is not null)
	 begin
		select * from @result where 
		((ContactName  like '%'+@P_SmartSearch+'%') or (EntityName  like '%'+@P_SmartSearch+'%') or
		 (@P_GoverenmentEntity  like '%'+@P_SmartSearch+'%') --or (UserName  like '%'+@P_SmartSearch+'%') 
		 or
		(EmailId like '%'+@P_SmartSearch+'%') or (PhoneNumber  like '%'+@P_SmartSearch+'%'))
		 and id between @StartNo and @EndNo 
	 end


	 if(@P_Method = 2 and  @P_SmartSearch is  null)
	 begin
		select * from @result
		end
 end
GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementByAssigneeandHRId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	HRDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and  (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow') order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow'  order by WorkflowID desc) 
	 )
	 end

	select HRDeptUsedIds from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementByID] --  [Get_AnnouncementByID] 43
	@P_AnnouncementID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [AnnouncementID],[ReferenceNumber],[SourceOU],[SourceName],[AnnouncementType],[AnnouncementDescription],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Announcement].ReferenceNumber order by WorkflowID desc) as Status

	
	  
	  
	  from [dbo].[Announcement]  WHERE AnnouncementID = @P_AnnouncementID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[AnnouncementHistory] 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementHistoryByID]-- 49
	@P_AnnouncementID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[AnnouncementID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[AnnouncementHistory] where AnnouncementID = @P_AnnouncementID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[AnnouncementHistory]  )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_AnnouncementTypeAndDescription]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_AnnouncementTypeAndDescription]
@P_AnnouncementTypeName nvarchar(250) =null,
@P_Description nvarchar(250) =null	
AS
BEGIN
	
	SET NOCOUNT ON;
	Select * from [dbo].[AnnouncementTypeAndDescription] where DeleteFlag = 0

	
END

GO
/****** Object:  StoredProcedure [dbo].[Get_AttachmentByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	
/****** Object:  StoredProcedure [dbo].[Get_AttachmentByID] ******/
CREATE PROCEDURE [dbo].[Get_AttachmentByID] --[Get_AttachmentByID] '','Holiday'
	@P_ServiceID int = null,
	@Type nvarchar(100) = null,
	@P_DocumentType nvarchar(100)=null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @referenceNumber nvarchar(255)=null
	if(@Type='UserProfile')
	begin
	select @referenceNumber = ReferenceNumber from UserProfile where [UserProfileId] = @P_ServiceID
	select *,Type as 'AttachmentType' from Attachments where DeleteFlag=0 and ReferenceNumber = @referenceNumber
	end

	else if(@Type='CitizenAffair')
	begin
	select @referenceNumber = ReferenceNumber from CitizenAffair where CitizenAffairID = @P_ServiceID
	select * from Attachments where DeleteFlag=0 and ReferenceNumber = @referenceNumber
	and Type = @P_DocumentType
	end

	else if(@Type='Gift')
	begin
	select @referenceNumber = ReferenceNumber from Gift where GiftID = @P_ServiceID
	select * from Attachments where DeleteFlag=0 and ReferenceNumber = @referenceNumber
	and Type = @P_DocumentType
	end

	else if(@Type ='Holiday')
	Select top(1)* from [dbo].Attachments where DeleteFlag =0 and Type=@Type order by CreatedDateTime desc

	else if(@Type = 'UserProfileTraining')
	begin

		declare @TrainingRequestID int = 0
		select @TrainingRequestID = [TrainingRequestID] from UserProfileTrainingCertifications where UserProfileTrainingCertificationsId=@P_ServiceID
		SELECT * from [dbo].[Attachments] where DeleteFlag=0 and ((ServiceID = @P_ServiceID and Type =  @Type)or(ServiceID = @TrainingRequestID and Type =  'Training'))

	
	end

	else if(@Type != 'UserProfile')
	SELECT * from [dbo].[Attachments] where DeleteFlag=0 and ServiceID = @P_ServiceID and Type =  @Type
END
GO
/****** Object:  StoredProcedure [dbo].[Get_BabyAdditionByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_BabyAdditionByAssigneeandHRId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	HRDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow')  order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow' order by WorkflowID desc) 
	 )
	 end

	select HRDeptUsedIds from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_BabyAdditionByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_BabyAdditionByID]
	@P_BabyAdditionID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT [BabyAdditionID],[ReferenceNumber],[SourceOU],[SourceName],[BabyName],[Gender],[Birthday],[HospitalName],[CountryofBirth],[CityofBirth],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[BabyAddition].ReferenceNumber order by WorkflowID desc) as Status


 from [dbo].[BabyAddition]  WHERE BabyAdditionID = @P_BabyAdditionID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_BabyAdditionHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_BabyAdditionHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[BabyAdditionHistory] 
END


GO
/****** Object:  StoredProcedure [dbo].[Get_BabyAdditionHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_BabyAdditionHistoryByID]-- 49
	@P_BabyAdditionID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[BabyAdditionID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[BabyAdditionHistroy] where BabyAdditionID = @P_BabyAdditionID
END


GO
/****** Object:  StoredProcedure [dbo].[Get_BabyAdditionHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_BabyAdditionHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[BabyAdditionHistory]  )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_Banner]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[Get_Banner]--[Get_PhotosByID] 8
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT * from  [dbo].[M_Banner]  where [BannerID] = (select max(BannerID) from [M_Banner])
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestions]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestions]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CAComplaintSuggestions] where DeleteFlag=0
END

GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestionsByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestionsByAssigneeandHRId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	CADeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where [OfficialMailId] = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow')
	  order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where [OfficialMailId] = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow' order by WorkflowID desc) 
	 )
	 end

	select CADeptUsedIds from @result
	

END

GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestionsByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestionsByID]
	@P_CAComplaintSuggestionsID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT [CAComplaintSuggestionsID],[ReferenceNumber],[Type],[Source],[Subject],[Details],[RequestCreatedBy],[MailID],[PhoneNumber],[ActionTaken],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[CAComplaintSuggestions].ReferenceNumber order by WorkflowID desc) as Status


 from [dbo].[CAComplaintSuggestions]  WHERE CAComplaintSuggestionsID = @P_CAComplaintSuggestionsID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestionsHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestionsHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CAComplaintSuggestionsHistory]
END


GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestionsHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestionsHistoryByID]-- [Get_CAComplaintSuggestionsHistoryByID] 3
	@P_CAComplaintSuggestionsID int = null,
	@P_Language nvarchar(10) = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @RequestorType int =0;
	select @RequestorType = RequestCreatedBy from CAComplaintSuggestions where CAComplaintSuggestionsID=@P_CAComplaintSuggestionsID
	-- select @RequestorType
	SELECT [HistoryID],[CAComplaintSuggestionsID],[Action],case when ActionBy =0 then(select case when @P_Language ='EN' then DisplayName else ArDisplayName end from M_Lookups where Category='System') else
	 (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=[ActionBy]) end as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[CAComplaintSuggestionsHistory] where CAComplaintSuggestionsID = @P_CAComplaintSuggestionsID
			--and  Action = (Case when @RequestorType = 1 and Action='Submit' then null else Action end)
END


GO
/****** Object:  StoredProcedure [dbo].[Get_CAComplaintSuggestionsHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CAComplaintSuggestionsHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[CAComplaintSuggestionsHistory]  )m where slno between @StartNo and @EndNo 

END


GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- alter date: <alter Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Get_CalendarByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = null,
	@P_UserID int=0,
	@P_ID nvarchar(max) = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	select @P_ReferenceNumber = ReferenceNumber from Calendar where CalendarID= @P_ID

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		FromEmail nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,FromEmail,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where ((Status = 120 or status=122)and ReferenceNumber=@P_ReferenceNumber )order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);


	if((select count(*) from Workflow where ReferenceNumber=@P_ReferenceNumber)>0)
	begin
		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 120 )order by WorkflowID desc)) or
	OfficialMailId=( (select top 1 W.FromEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 122 )order by WorkflowID desc))
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.ToEmail from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 120 )order by WorkflowID desc)) or
	OfficialMailId=( (select top 1 WD.FromEmail from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 122 )order by WorkflowID desc))
	end
		

	else 
	 begin
		 insert into @result
		 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
		  (select top 1 W.ToEmail from Workflow W
		 where W.ReferenceNumber = (select ParentReferenceNumber from Calendar where ReferenceNumber = @P_ReferenceNumber) and (W.WorkflowProcess = 'SubmissionWorkflow')order by WorkflowID desc)  
		 ) 
	 
		 insert into @result
		 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
		  (select top 1 WD.DelegateToEmail from Workflow WD
		 where WD.ReferenceNumber =(select ParentReferenceNumber from Calendar where ReferenceNumber = @P_ReferenceNumber) and (WD.WorkflowProcess = 'SubmissionWorkflow') order by WorkflowID desc)  
		 )
	 end


	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarByBulkId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CalendarByBulkId]  ******/
CREATE PROCEDURE [dbo].[Get_CalendarByBulkId]
	@P_CalendarID int = 0,
	@P_UserID int= 0,
	@P_ReferenceNumber nvarchar(max) =null,
	@P_Language nvarchar(10) = null
AS
BEGIN
	
	SET NOCOUNT ON;

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null
	
	--select * from @RequestList1

	select C.CalendarID,(case when (C.ParentReferenceNumber is null or C.ParentReferenceNumber='' ) then c.ReferenceNumber 
						when (C.ParentReferenceNumber !=null or C.ParentReferenceNumber!='') then C.ParentReferenceNumber end) as ReferenceNumber,
	C.EventRequestor,(select case when @P_Language='EN' then[EventTypeName]else ArEventTypeName end as EventTypeName from M_EVentType where [EventTypeID]=c.EventType)as EventType,C.[EventDetails],C.[DateFrom],
	C.[DateTo],C.[AllDayEvents],(select case when @P_Language='EN' then LocationName else ArLocationName end as LocationName from M_Location where LocationID=C.Location)as[Location]
	,(select CityName from M_City where CityID=C.City)as[City],C.[DeleteFlag],C.[CreatedBy],C.[UpdatedBy],C.[CreatedDateTime],C.[UpdatedDateTime],
	(R.Status) as Status,
		(case when (select count(*) from Workflow as Wo where Wo.ReferenceNumber = C.ReferenceNumber and Wo.Status=120)>0
			then (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = 
				 (select top 1 ToEmail from Workflow as W where Status = 120 and W.ReferenceNumber =C.ReferenceNumber order by W.WorkflowID desc ))
			else (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = 
				(select top 1 ToEmail from Workflow as W where WorkflowProcess = 'SubmissionWorkflow' and W.ReferenceNumber =C.ParentReferenceNumber order by W.WorkflowID desc ))
			end)   as ApproverID, 
	ParentReferenceNumber
	  from @RequestList1 as R inner join Calendar as C on C.ReferenceNumber=R.ReferenceNumber
	WHERE C.ParentReferenceNumber=@P_ReferenceNumber or C.ReferenceNumber=@P_ReferenceNumber
	 --and @P_UserID=C.CreatedBy

END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarByBulkIdStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Get_CalendarByBulkIdStatus]
	@P_CalendarID int = 0,
	@P_UserID int= 0,
	@P_ReferenceNumber nvarchar(max) =''
AS
BEGIN
	
	SET NOCOUNT ON;

				declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null
	
	--select * from @RequestList1 where
	--(ReferenceNumber= @P_ReferenceNumber or ParentReferenceNumber1= @P_ReferenceNumber)
	--and (Status = 120 or Status=122)

	if((select count(*) from @RequestList1 where (ReferenceNumber= @P_ReferenceNumber or ParentReferenceNumber1= @P_ReferenceNumber)
	and (Status = 120 or Status=122)) >0)
	select 120
	else
	select 124

	--if((select count(*) from @result where Status =  120)>0)
	--select 120
	--else if((select count(*) from @result where Status =  121)>0)
	--select 121
	
	--else if((select count(*) from @result where Status =  122)>0)
	--select 122
	
	--else if((select count(*) from @result where Status =  123)>0)
	--select 123
	
	--else if((select count(*) from @result where Status =  124)>0)
	--select 124
	
	END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarById]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CalendarById]    ******/
CREATE PROCEDURE [dbo].[Get_CalendarById]-- [Get_CalendarById] 30
    @P_CalendarID int = 4,
    @P_UserID int=1
AS
BEGIN
    
    SET NOCOUNT ON;

--        declare @RequestList table(    
--    ReferenceNumber nvarchar(max),
--    --id int, select * from calendar
--    --Creator nvarchar(max),
--    WorkflowProcess nvarchar(max),
--    FromName nvarchar(250),
--    ToName nvarchar(250),
--    Status nvarchar(250),
--    FromEmail nvarchar(255),
--    ToEmail nvarchar(255))

--insert into @RequestList
--	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
--	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
--	from [dbo].[Workflow]  group by ReferenceNumber) 

--	 select * from @RequestList
	SELECT CalendarID, (case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)as [ReferenceNumber],[EventRequestor],[EventType],[EventDetails],[DateFrom],
	[DateTo],[AllDayEvents],[Location],[City],[DeleteFlag],CreatedBy,[CreatedDateTime],[UpdatedBy],[UpdatedDateTime],
	case when (select top 1 W.Status from Workflow  W
	 where W.ReferenceNumber =C.ReferenceNumber  order by WorkflowID desc) >0 then (select top 1 W.Status from Workflow  W
	 where W.ReferenceNumber =C.ReferenceNumber  order by WorkflowID desc) else 120  end as Status,
	   (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 ))
	  as ApproverID,
	 ParentReferenceNumber,
	 (case when ParentReferenceNumber is not null then 'true' when  ((select count(*) from Calendar as T where T.ParentReferenceNumber=c.ReferenceNumber)=0) then 'false' else 'true' end) as IsBulkEvent,
	 (case when ParentReferenceNumber is not null then (select CalendarID from Calendar where ReferenceNumber = C.ParentReferenceNumber)
	    else null end) as  ParentID
	  from [dbo].Calendar  as C  WHERE CalendarID = @P_CalendarID 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_CalendarCount] 
    @P_UserID int = 1
    -- Add the parameters for the stored procedure here
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
    declare @UserName nvarchar(250), @UserEmail nvarchar(250)
     SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
     SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

 declare @result table( 
    CalendarID int,
    ReferenceNumber nvarchar(255),
    EventType int ,
    EventRequestor nvarchar(255),
    DateFrom datetime,
    DateTo datetime,
    CreatedBy int ,
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    ToEmail nvarchar(250),
    Status nvarchar(250),
    isbulkevent int
    );

	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null

	
	declare @MyEvents int=0,@Approved int=0,@All int =0,  @MyPendingRequest int =0;
	declare @Count table(
	ReferenceNumber nvarchar(255)
	);

	insert into @Count
	SELECT  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) 
							then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') 
								then ParentReferenceNumber end)
			 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
			where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and (c.CreatedBy=@P_UserID and (w.Status=120 or w.Status=123 or w.Status=124 ) )

	set @MyEvents=(select count(Distinct ReferenceNumber) from @Count);
	delete from @Count

	insert into @Count
	select  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber
			 when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) 		
			 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
			where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and  (c.CreatedBy=@P_UserID and (w.Status=121 ) )
			
	 set @Approved=(select count(Distinct ReferenceNumber) from @Count);
	delete from @Count


	insert into @Count
	select (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber 
				when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end)
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and( (w.Status =120  and @UserEmail=w.ToEmail) 
            or(w.Status=122  and c.CreatedBy = @P_UserID) 
		   or(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=120))

	set @MyPendingRequest=(select count(Distinct ReferenceNumber) from @Count);
	delete from @Count
			
			-- all
	insert into @Count
	SELECT  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) 
							then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') 
								then ParentReferenceNumber end)
			 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
			where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and (c.CreatedBy=@P_UserID and (w.Status=120 or w.Status=123 or w.Status=124 ) )

	insert into @Count
	select  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber
			 when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) 		
			 from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
			where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and  (c.CreatedBy=@P_UserID and (w.Status=121 ) )

	insert into @Count
	select (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber 
				when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end)
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and( (w.Status =120  and @UserEmail=w.ToEmail) 
            or(w.Status=122  and c.CreatedBy = @P_UserID) 
		   or(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=120))

	set @All=(select count(Distinct ReferenceNumber) from @Count);
	delete from @Count
            
            
select @MyEvents as MyEvents, @Approved as Approved,@MyPendingRequest as MyPendingRequest, @All as AllEvents;
	
	END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
    Create PROCEDURE [dbo].[Get_CalendarHistoryByID]
    -- Add the parameters for the stored procedure here
    @P_CalendarID int = null
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
        SELECT CalendarID,[Action],[CommunicationId],[ParentCommunicationID],
    case when (Action != 'Reject' or Action is null)
        then (case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
             else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
             (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end)
    when (Action = 'Reject' and (select [IsApologiesSent] from Calendar where CalendarID = a.CalendarID ) = 1 )
        then concat((case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
             else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
            (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end),' With Apologies Letter')
    when (Action = 'Reject' and ((select [IsApologiesSent] from Calendar where CalendarID = a.CalendarID ) is null) or ((select [IsApologiesSent] from Calendar where CalendarID = a.CalendarID )= 0) )
        then concat((case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
             else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
            (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end),' Without Apologies Letter') end   
    as
     CreatedBy,
        [CreatedDateTime],Comment from [dbo].CalendarCommunicationHistory as a where a.CalendarID = @P_CalendarID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalendarList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CalendarList] ******/
CREATE PROCEDURE [dbo].[Get_CalendarList]--[dbo].[Get_CalendarList]1,10,null,15,'','','',null,null,''--[dbo].[Get_CalendarByID] 1
    @P_PageNumber int=1,
    @P_PageSize int =10,
    @P_CalendarID int = null,
    @P_UserID int= 0,
    @P_ReferenceNumber nvarchar(max) =null,
    @P_EventType nvarchar(50)='',
    @P_EventRequestor nvarchar(255)=null,
    @P_DateFrom datetime = null,
    @P_DateTo datetime = null,
    @P_Status nvarchar(max) =null,
    @P_SmartSearch nvarchar(max) =null,
    @P_Method int = 0,
    @P_Type int =1,
    @P_Language nvarchar(10)= 'EN'
    /*
    1-MyEvents,2-MyPendingAction,3-Approved,4-All
    */


AS
BEGIN
    
    SET NOCOUNT ON;

    declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

    select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;

    declare @UserName nvarchar(250), @UserEmail nvarchar(250)
     SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
     SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)



    declare @result table( 
    CalendarID int,
    ReferenceNumber nvarchar(255),
    EventType int ,
    EventRequestor nvarchar(255),
    DateFrom datetime,
    DateTo datetime,
    CreatedBy int ,
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    ToEmail nvarchar(250),
    Status nvarchar(250),
    isbulkevent int,
	EventDetails nvarchar(max),
	ApproverName  nvarchar(max),
	Location  nvarchar(max),
	City  nvarchar(max)
    );

	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null

	--select * from @RequestList1

    if(@P_Type=1 or @P_Type = 4)
    begin
    insert into @result
    select c.CalendarID,(case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber
	when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,
	 c.EventType,
	c.EventRequestor,(select min(DateFrom) from Calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber)  as DateFrom,
	(select MAX(DateTo) from calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber )
 	as DateTo,c.CreatedBy,
    w.WorkflowProcess as WorkflowProcess,
            w.FromName as FromName,
            w.ToName as ToName,
            w.ToEmail,
             (select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			( case when (((select count(S.CalendarID) from Calendar as S where s.ParentReferenceNumber = c.ReferenceNumber)>0) or w.ParentReferenceNumber1 is not null) then 1 else 0 end )  as isbulkevent,
			c.EventDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(  Select(case when @P_Language='EN' then LocationName else ArLocationName end)  from M_Location where LocationID=c.Location) as Location,
	(  Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   
			where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and (c.CreatedBy=@P_UserID and (w.Status=120 or w.Status=123 or w.Status=124 ) ) 
            
    end
    if(@P_Type=2 or @P_Type = 4)
    begin
    insert into @result
    select c.CalendarID,  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end)as ReferenceNumber,c.EventType,c.EventRequestor,
	(select min(DateFrom) from Calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber)  as DateFrom,
	(select MAX(DateTo) from calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber )
	 as DateTo,c.CreatedBy,
    w.WorkflowProcess as WorkflowProcess,
            w.FromName as FromName,
            w.ToName as ToName,
            w.ToEmail,
            (select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			( case when (((select count(S.CalendarID) from Calendar as S where s.ParentReferenceNumber = c.ReferenceNumber)>0) or w.ParentReferenceNumber1 is not null) then 1 else 0 end )  as isbulkevent,
			c.EventDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(  Select(case when @P_Language='EN' then LocationName else ArLocationName end)  from M_Location where LocationID=c.Location) as Location,
	(  Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and
            (    (w.Status =120  and @UserEmail=w.ToEmail) 
            or
            (w.Status=122  and c.CreatedBy = @P_UserID) 
		   or(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=120))
    end
    if (@P_Type=3 or @P_Type = 4)
    begin
    insert into @result
    select c.CalendarID,  (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,c.EventType,c.EventRequestor,
	(select min(DateFrom) from Calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber)  as DateFrom,
	(select MAX(DateTo) from calendar as cs where c.ReferenceNumber = cs.ReferenceNumber or c.ReferenceNumber=cs.ParentReferenceNumber )
 	as DateTo,c.CreatedBy,
    w.WorkflowProcess as WorkflowProcess,
            w.FromName as FromName,
            w.ToName as ToName,
            w.ToEmail,
             (select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			( case when (((select count(S.CalendarID) from Calendar as S where s.ParentReferenceNumber = c.ReferenceNumber)>0) or w.ParentReferenceNumber1 is not null) then 1 else 0 end )  as isbulkevent,
			c.EventDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =(case when( ParentReferenceNumber is null or ParentReferenceNumber='') then C.ReferenceNumber 
	 when (ParentReferenceNumber !=''or ParentReferenceNumber!=null) then ParentReferenceNumber end)and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=C.CreatedBy)

	 and (Status = 120 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(  Select(case when @P_Language='EN' then LocationName else ArLocationName end)  from M_Location where LocationID=c.Location) as Location,
	(  Select(case when @P_Language='EN' then CityName else ArCityName end)  from M_City where CityID=c.city) as City
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and
            
             (c.CreatedBy=@P_UserID and (w.Status=121 ) )
            
    end

	;with todelete as (
      select p.*,
             row_number() over (partition by ReferenceNumber
                                order by CalendarID asc
                               ) as seqnum
      from @result p
     )
	delete from todelete
    where seqnum > 1;

	update a set a.EventRequestor = (select( case when ((select count(S.CalendarID) from Calendar as S where s.ParentReferenceNumber = c.ReferenceNumber)>0) then(select Displayname from M_Lookups where LookupsID=208 and Module ='EventType')  else c.EventRequestor end)  as EventRequestor from Calendar as c where ReferenceNumber=a.ReferenceNumber )
	, a.EventType = (select (select case when ((select count(S.CalendarID) from Calendar as S where s.ParentReferenceNumber = c.ReferenceNumber)>0) then 0 else c.EventType end) as EventType from Calendar as c where ReferenceNumber=a.ReferenceNumber )		
	from @result as a

    if(@P_DateFrom is not null and @P_DateFrom!='' )
     delete from @result where cast( DateFrom as date) < cast(@P_DateFrom as date)

    if(@P_DateTo is not null and @P_DateTo!='')
     delete from @result where cast(DateTo as date) > cast(@P_DateTo as date)

     if(@P_ReferenceNumber != '')
     delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'

     if(@P_Status !='')
	 delete from @result where Status!=@P_Status     

     if(@P_EventRequestor != '')
     delete from @result where EventRequestor not like '%'+@P_EventRequestor+'%'

     if(@P_EventType!='' and @P_EventType is not null)
     delete from @result where EventType !=@P_EventType

    if(@P_SmartSearch is not null and @P_Method = 0 )
     begin
     select CalendarID , ReferenceNumber ,m.EventType as EventType , 
	m.EventRequestor as EventRequestor ,DateFrom ,DateTo ,
    CreatedBy  , WorkflowProcess, FromName,ToName,ToEmail ,Status,
    isbulkevent  from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result as a  where
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (EventRequestor  like '%'+@P_SmartSearch+'%') or
        ((select EventTypeName from M_EventType where EventTypeID =EventType ) like '%'+@P_SmartSearch+'%') or
        ((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), DateFrom) ) as date), 103) )  like '%'+@P_SmartSearch+'%')  or
        ((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), DateTo) ) as date), 103) )  like '%'+@P_SmartSearch+'%') or (EventDetails like '%'+@P_SmartSearch+'%' ) 
		or(ApproverName like '%'+@P_SmartSearch+'%')
		or ((select count(K.Location) from Calendar as K where K.CalendarID=a.CalendarID and (select (case when @P_Language ='EN' then LocationName else ArLocationName  end) from M_Location as d where d.LocationID= K.Location )like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.City) from Calendar as K where K.CalendarID=a.CalendarID and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
		or (Location like '%'+@P_SmartSearch+'%')or (City like '%'+@P_SmartSearch+'%')
		or (( a.Status)like '%'+@P_SmartSearch+'%')))as m where   m.slno between @StartNo and @EndNo 
        
     end

      if(@P_SmartSearch is not null and @P_Method = 1 )
     begin
        select count(*) from @result as a where 
        
         ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (EventRequestor  like '%'+@P_SmartSearch+'%') or
        ((select EventTypeName from M_EventType where EventTypeID =EventType ) like '%'+@P_SmartSearch+'%') or
          ((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), DateFrom) ) as date), 103) )  like '%'+@P_SmartSearch+'%')  or
        ((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), DateTo) ) as date), 103) )  like '%'+@P_SmartSearch+'%') or (EventDetails like '%'+@P_SmartSearch+'%' ) 
		or(ApproverName like '%'+@P_SmartSearch+'%') 
		or ((select count(K.Location) from Calendar as K where K.CalendarID=a.CalendarID and (select (case when @P_Language ='EN' then LocationName else ArLocationName  end) from M_Location as d where d.LocationID= K.Location )like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.City) from Calendar as K where K.CalendarID=a.CalendarID and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
		or (Location like '%'+@P_SmartSearch+'%')or (City like '%'+@P_SmartSearch+'%')or 
		((a.Status)like '%'+@P_SmartSearch+'%'))
     end

     if(@P_Method = 0 and @P_SmartSearch is null)
     begin
     select CalendarID , ReferenceNumber , M.EventType  ,
	M.EventRequestor ,DateFrom ,DateTo ,
    CreatedBy  , WorkflowProcess, FromName,ToName,ToEmail ,Status,
    isbulkevent  from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result ) as m where slno between @StartNo and @EndNo 
     end

     if(@P_Method = 1 and @P_SmartSearch is null)
     select count(*) from @result 
  
     END
GO
/****** Object:  StoredProcedure [dbo].[Get_CalenderViewList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	
	CREATE PROCEDURE [dbo].[Get_CalenderViewList] --[Get_CalenderViewList] 10,2019,15
    -- Add the parameters for the stored procedure here
    @P_Month int =0,
    @P_Year int =0,
    @P_UserID int =0,
    @P_EventType int=null,
    @P_EventRequestor nvarchar(255)=null,
    @P_DateFrom datetime = null,
    @P_DateTo datetime = null,
    @P_ReferenceNumber nvarchar(250)=null,
	@P_SmartSearch nvarchar(250) = null

 

AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

 

    -- Insert statements for procedure here
    
    declare @UserName nvarchar(250), @UserEmail nvarchar(250)
     SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
     SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

 

             declare @RequestList table(    
    ReferenceNumber nvarchar(max),
    --id int,
    --Creator nvarchar(max),
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    Status nvarchar(250),
    FromEmail nvarchar(255),
    ToEmail nvarchar(255),
    DelegateTOEmail nvarchar(max))

 

    declare @RequestList1 table(    
    ReferenceNumber nvarchar(max),
    --id int,
    --Creator nvarchar(max),
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    Status nvarchar(250),
    FromEmail nvarchar(255),
    ToEmail nvarchar(255),
    DelegateTOEmail nvarchar(max),
    ParentReferenceNumber1 nvarchar(max))

 

    insert into @RequestList
    select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
    from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
    from [dbo].[Workflow] group by ReferenceNumber) 

 


    insert into @RequestList1  
    select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
     from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber

 

     --select * from @RequestList1

 


     update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
     ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
     inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
    from [dbo].[Workflow] where  CreatedDateTime in  (select max(CreatedDateTime)
    from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null

 

    
    declare @result table(
    
    CalendarID int,
    ReferenceNumber nvarchar(255),
    EventType int ,
    EventRequestor nvarchar(255),
    DateFrom datetime,
    DateTo datetime,
    CreatedBy int ,
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    ToEmail nvarchar(250),
    Status int,
    Holiday datetime,
    HolidayMessage nvarchar(max),
    AllDayEvents bit 
    );

 

    insert into @result(CalendarID,ReferenceNumber,EventType,EventRequestor,DateFrom,DateTo,CreatedBy,WorkflowProcess,FromName,ToName,ToEmail,Status,AllDayEvents)
    select c.CalendarID, (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end) as ReferenceNumber,
    c.EventType,c.EventRequestor,c.DateFrom,c.DateTo,c.CreatedBy,
    w.WorkflowProcess as WorkflowProcess,
            w.FromName as FromName,
            w.ToName as ToName,
            w.ToEmail,
            w.Status as StatusCode,AllDayEvents
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and (c.CreatedBy=@P_UserID or @P_UserID in(select UserProfileId from UserProfile where OrgUnitID=4))
            and (Select Month(DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),C.DateFrom)))=@P_Month
            and (Select Year(DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),C.DateFrom)))=@P_Year
            --and MONTH(c.DateFrom)=@P_Month and Year(c.DateFrom)= @P_Year

 

            --select * from @result

 

    if(@P_DateFrom is not null)
     delete from @result where cast( DateFrom as date) < cast(@P_DateFrom as date)

 

    if(@P_DateTo is not null)
     delete from @result where cast(DateTo as date) > cast(@P_DateTo as date)

 

     if(@P_ReferenceNumber != '')
     delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'
     

 

     if(@P_EventRequestor != '')
     delete from @result where EventRequestor not like '%'+@P_EventRequestor+'%'

 

     if(@P_EventType is not null)
     delete from @result where EventType !=@P_EventType

 

     insert into @result(Holiday,HolidayMessage)
     select [Holiday],[Message] from [dbo].[M_Holidays] where ([DeleteFlag] =0 or [DeleteFlag] is null) and 
     MONTH([Holiday])=@P_Month and Year([Holiday])= @P_Year
             
     if(@P_SmartSearch is not null )
     begin
     select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result as R where
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (EventRequestor  like '%'+@P_SmartSearch+'%') or
        (EventType  like '%'+@P_SmartSearch+'%') or 
        
        ((SELECT  CONVERT(nvarchar(10), cast(DateFrom as date), 103))  like '%'+@P_SmartSearch+'%') 
		or
        ((SELECT  CONVERT(nvarchar(10), cast(DateTo as date), 103))  like '%'+@P_SmartSearch+'%')
 
		
		))as m 
        
     end
	  if( @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
		 * from @result) as m
	 end
End
/****** Object:  StoredProcedure [dbo].[Get_Campaign]    Script Date: 23-07-2019 07:50:09 ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_Campaign]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Campaign]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Campaign] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CampaignByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CampaignByID]
	@P_CampaignID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Campaign] where DeleteFlag=0 and CampaignID = @P_CampaignID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CampaignList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CampaignList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [CampaignID]) as 
	slno, *
	from [dbo].[Campaign] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_CanApproverRemoved]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CanApproverRemoved]   ******/
CREATE PROCEDURE [dbo].[Get_CanApproverRemoved]  --[Get_CanApproverRemoved] '1;2;3;4;22'
	-- Add the parameters for the stored procedure here
	
	@P_ApproverID nvarchar(250) =null


AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	Declare @Result bit = 1,@UserEmail nvarchar(max) = null
 declare @temp table
 (ApproverID int,
 UserEmail nvarchar(max)
 )
  insert into @temp (ApproverID)
SELECT value FROM STRING_SPLIT ( @P_ApproverID , ';' )
--select * from @temp
Update @temp set UserEmail =(select OfficialMailId from UserProfile where UserProfileId = ApproverID)
Select @UserEmail=COALESCE(@UserEmail + ';', '') + UserEmail from @temp 
--Select * from @temp
	--select @UserEmail = OfficialMailId from UserProfile where UserProfileId = @P_ApproverID
	
declare @RequestList table(

     ReferenceNumber nvarchar(max),
     WorkflowID int,
     Service nvarchar(max),
     WorkflowProcess nvarchar(max),
	 FromEmail nvarchar(250),
	 ToEmail nvarchar(250),
     Status nvarchar(250)
	 )

  ;With CTE_Duplicates as
   (select [ReferenceNumber],[WorkflowID],[Service],[WorkflowProcess],[FromEmail],[ToEmail],[Status] , 
			row_number() over(partition by [ReferenceNumber] order by WorkflowID desc ) rownumber 
   from [Workflow]  )
   insert into @RequestList
   select  [ReferenceNumber],[WorkflowID],[Service],[WorkflowProcess],[FromEmail],[ToEmail],[Status] from CTE_Duplicates where rownumber=1
  -- select * from @RequestList
	--HRModules	
	
	if(((select count(*) from @RequestList where WorkflowProcess='SubmissionWorkflow' and Service = 'OfficialTask'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)

	 or 
	 ((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Compensation'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)
			
	 or		 
	  ((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Memo'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 		
			  
	 or
	 ((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Outbound Letter'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Inbound Letter'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 		   		  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Circular'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	      
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow') and Service = 'Announcement'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow') and Service = 'BabyAddition'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	   
	or 
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow') and Service = 'Certificate'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow') and Service = 'HRComplaintSuggestions'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)   	         
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Leave'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	         		  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Training'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 		    			  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Legal'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	        
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Maintenance'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	      
	or
		((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'MediaNewCampaignRequest'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	  	         
   	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'MediaDesignRequest'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 		         		  
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'DiwanIdentity'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 		       
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'MediaPhotoRequest'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0) 	
	         
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'MediaNewPhotoGrapherRequest'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)
	 	       
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'MediaNewPressReleaseRequest'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)
	     
	or
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'Citizen Affair'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)	       		  
	or 
	((select count(*) from @RequestList where WorkflowProcess in ('SubmissionWorkflow','ReturnWorkflow') and Service = 'CAComplaintSuggestions'	
     and CHARINDEX(ToEmail,@UserEmail) > 0)>0)		       		  		  		  		  		  	  		  	 
			  ) 
			  set @Result =0   
			      
select @Result																																		   
end	
GO
/****** Object:  StoredProcedure [dbo].[Get_CarCompanyByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	 
/****** Object:  StoredProcedure [dbo].[Get_CarCompanyByID] ******/
CREATE PROCEDURE [dbo].[Get_CarCompanyByID]
	@P_CarCompanyID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [CarCompanyID],[CompanyName],[ContactName],[ContactNumber],[DeleteFlag],
	[CreatedBy],[UpdatedBy],[CreatedDateTime] ,[UpdatedDateTime]

	 from [dbo].[CarCompany]  WHERE CarCompanyID = @P_CarCompanyID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CarCompanyList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CarCompanyList]   ******/
CREATE PROCEDURE [dbo].[Get_CarCompanyList] --[Get_CarCompanyList]
	@P_PageNumber int =0,
	@P_PageSize int =0,	
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_CreatedDateFrom datetime = null,
	@P_CreatedDateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @RefCout int =0,@StartNo int =0 , @EndNo int =0 
	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;

	declare @result table
	(
	 CarCompanyID int,
	 CompanyName nvarchar(250),
	 ContactName nvarchar(250),
	 ContactNumber nvarchar(50),
	 CreatedDateTime datetime,
	 UpdatedBy int,
	 CreatedBy int,
	 UpdatedDateTime datetime
	)

	insert into @result

	select CarCompanyID,CompanyName,ContactName,ContactNumber,CreatedDateTime,UpdatedBy,CreatedBy,UpdatedDateTime from CarCompany where DeleteFlag = 0 

	
	 if(@P_CreatedDateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_CreatedDateFrom as date) or CreatedDateTime is null

	 if(@P_CreatedDateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_CreatedDateTo as date) or CreatedDateTime is null
	

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [CarCompanyID] desc) as slno,
		 * from @result where ( (CompanyName  like '%'+@P_SmartSearch+'%') or (ContactNumber  like '%'+@P_SmartSearch+'%') or
		(ContactName  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  )
		 ) as m  where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where ( (CompanyName  like '%'+@P_SmartSearch+'%') or
		(ContactName  like '%'+@P_SmartSearch+'%') or(ContactNumber  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  
		) 
		
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null and @P_PageNumber!= 0)
	 begin
	 select * from (SELECT row_number() over (Order By  [CarCompanyID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null and @P_PageNumber!= 0)
	 select count(*) from @result 

	 if(@P_PageNumber= 0)
	 begin
	 SELECT row_number() over (Order By  [CarCompanyID] desc) as slno,
		 * from @result  
	 end
	 END
GO
/****** Object:  StoredProcedure [dbo].[Get_CarCompanyReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CarCompanyReport]   ******/
Create PROCEDURE [dbo].[Get_CarCompanyReport] --[Get_CarCompanyReport]1,'Qantler',TestUser18
	@P_UserID int = 0,
	@P_CreatedDateFrom datetime = null,
	@P_CreatedDateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	

	declare @result table
	(
	 CarCompanyID int,
	 CompanyName nvarchar(250),
	 ContactName nvarchar(250),
	 ContactNumber nvarchar(50),
	 CreatedDateTime datetime,
	 UpdatedBy int,
	 CreatedBy int,
	 UpdatedDateTime datetime
	)

	insert into @result

	select CarCompanyID,CompanyName,ContactName,ContactNumber,CreatedDateTime,UpdatedBy,CreatedBy,UpdatedDateTime from CarCompany where DeleteFlag = 0 

	if(@P_CreatedDateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_CreatedDateFrom as date) or CreatedDateTime is null

	 if(@P_CreatedDateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_CreatedDateTo as date) or CreatedDateTime is null
	
	 if(@P_SmartSearch is not null )
	 begin
	 select * from (SELECT row_number() over (Order By  [CarCompanyID] desc) as slno,
		 * from @result) as m where 
		( (CompanyName  like '%'+@P_SmartSearch+'%') or (ContactNumber  like '%'+@P_SmartSearch+'%') or
		(ContactName  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  )
	 end

	  if(@P_SmartSearch is null  )
	 begin
		select * from @result		
	 end
End
GO
/****** Object:  StoredProcedure [dbo].[Get_CertificateByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CertificateByAssigneeandHRId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	HRDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select [UserProfileId] from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow')
	   order by WorkflowID desc)  
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select [UserProfileId] from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow'  order by WorkflowID desc) 
	 )
	 end

	select HRDeptUsedIds from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_CertificateByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CertificateByID]
	@P_CertificateID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT [CertificateID],[ReferenceNumber],[SourceOU],[SourceName],[Attention],[To],[SalaryCertificateClassification],[Reason],[CertificateType],[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Certificate].ReferenceNumber order by WorkflowID desc) as Status
	  from [dbo].[Certificate]  WHERE CertificateID = @P_CertificateID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CertificateHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CertificateHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_CertificateID int = null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
			SELECT [HistoryID],[CertificateID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[CertificateHistory] where CertificateID = @P_CertificateID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CertificateList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CertificateList]
	-- Add the parameters for the stored procedure here
	--@P_PageNumber int =0,
	--@P_PageSize int =0,
	@P_Type nvarchar (250) = null,
	@P_Username nvarchar(250) = null
	--@P_Method int =0,
	--@P_Status nvarchar(255) = '',
	--@P_DateFrom datetime = null,
	--@P_DateTo datetime = null,
	--@P_SmartSearch nvarchar(Max) = null	
AS
BEGIN
	SET NOCOUNT ON;

	declare @result table(
	id int,
	CertificateID int,
	ReferenceNumber nvarchar(255),
    CreatedBy nvarchar(255),
	Status nvarchar(255),
	CreatedDateTime datetime
	);
	-- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	--select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	--select @StartNo =(@RefCout + 1);
	--select @EndNo=@RefCout + @P_PageSize;
	SET @P_UserEmail = (Select OfficialEmailID from [dbo].[User] where LoginUser = @P_Username)
	SET @P_Username = (Select UserProfileId from [dbo].[User] where LoginUser = @P_Username)

	--create a workflow temp table and inserted latest row depending group by reference number
	declare @Workflow table(
	WorkflowID int,
	ReferenceNumber nvarchar(max),
	ToEmail nvarchar(max),
	FromEmail nvarchar(max),
	Status int
	);
	insert into @Workflow
	select WorkflowID,ReferenceNumber,ToEmail,FromEmail,Status from [dbo].[Workflow] 
	;WITH CTE AS 
	(
	SELECT ReferenceNumber, ROW_NUMBER() OVER 
	(
		PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
	) RowNumber
	FROM  @Workflow
	)
	DELETE FROM CTE WHERE RowNumber > 1

	--My Pending Actions
	if (@P_Type = '1')
	begin
	insert into @result 
    Select  * from (SELECT row_number() over (Order By  [CertificateID]) as slno, 
    a.CertificateID,
    a.ReferenceNumber,
	(select EmployeeName from [dbo].[UserProfile] where UserProfileId = a.CreatedBy) as CreatedBy,
	(select DisplayName from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Certificate' AND Category = 'Status') as Status,
    a.CreatedDateTime 
    FROM dbo.Certificate a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0 and (status = 33 or (status = 34 and w.ToEmail = @P_UserEmail)) and (
    (@P_Username in (select UserProfileId from [dbo].[UserProfile] where OrgUnitID = 9))))
    as m 
   	end

	--My Open Requests
	if (@P_Type = '2')
	begin
	insert into @result 
    Select  * from (SELECT row_number() over (Order By  [CertificateID]) as slno, 
    a.CertificateID,
    a.ReferenceNumber,
	(select EmployeeName from [dbo].[UserProfile] where UserProfileId = a.CreatedBy) as CreatedBy,
	(select DisplayName from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Certificate' AND Category = 'Status') as Status,
    a.CreatedDateTime 
    FROM dbo.Certificate a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
	where a.DeleteFlag = 0 AND a.CreatedBy = @P_Username) as m 
	end

	 select * from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Circular]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_Circular]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Circular] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CircularByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 12 or Status = 13) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 12 or WD.Status = 13)order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

	/****** Object:  StoredProcedure [dbo].[Get_CircularByID]   ******/
CREATE PROCEDURE [dbo].[Get_CircularByID]
	@P_CircularID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [CircularID],[ReferenceNumber],[Title],[SourceOU],[SourceName],[Details],[Priority],[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Circular].ReferenceNumber order by WorkflowID desc) as Status,
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Circular].ReferenceNumber order by WorkflowID desc) as StatusCode,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =[Circular].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Circular.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 ))
	  as ApproverNameID,
	  
	 -- (select DepartmentID from [dbo].[UserProfile] where OfficialMailId = (
	 -- (select top 1 ToEmail from [Workflow]
	 --where ReferenceNumber =[Circular].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Circular.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 --))
	  InitalApproverDepartment as ApproverDepartmentID
	  from [dbo].[Circular]  WHERE CircularID = @P_CircularID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CircularDestinationDepartment] 
	-- Add the parameters for the stored procedure here
	@P_CircularID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
SELECT A.[DepartmentID],(select M.DepartmentName from M_Department as M where M.DepartmentID= A.DepartmentID) as CircularDestinationDepartmentName 
from [dbo].[CircularDestinationDepartment] as A where  A.CircularID = @P_CircularID and A.DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CircularHistory]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT * from [dbo].[CircularHistory]
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CircularHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_CircularID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [HistoryID],[CircularID],[Action], 
		case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.ActionBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.ActionBy  )) end as 
	 ActionBy,	[ActionDateTime],[Comments] from [dbo].[CircularHistory] as a where CircularID = @P_CircularID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CircularHistoryList]
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[CircularHistory]  )m where slno between @StartNo and @EndNo
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CircularList]   ******/
CREATE PROCEDURE [dbo].[Get_CircularList] --[Get_CircularList]1,10,1,TestUser18
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type nvarchar (250) = null,
	@P_Username nvarchar(250) = null,
	@P_Method int =0,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_DestinationOU nvarchar(255) = '',
	@P_Priority nvarchar(255) = '',
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	CircularID int,
	ReferenceNumber nvarchar(255),
	Title nvarchar(255),
	SourceOU nvarchar(max),
	Destination nvarchar(max),
	Status nvarchar(255),
    StatusCode int,
	CreatedDateTime datetime,
	Priority nvarchar(255),
	UpdatedDateTime datetime,
	Details nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	SourceName nvarchar(max));

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where EmployeeName = @P_Username)
	 SET @P_Username = (Select UserProfileId from [dbo].[UserProfile] where EmployeeName = @P_Username)
	
	 

	 --create a workflow temp table and inserted latest row depending group by reference number
		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max),
		FromMail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateTOEmail,FromEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		--select * from @Workflow

	
	--My Pending Actions
	if (@P_Type = '1')
	begin
	
	--SET @P_Status = (Select LookupsID from [dbo].[M_Lookups] where DisplayName = 'Waiting for Approval' AND Module = 'Memo' AND Category = 'Status')	  
     
	 insert into @result 
    Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
    a.CircularID,
    a.ReferenceNumber,
    a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
     (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
(select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
    a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	a.Details,
	 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	  	(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from [M_Department] where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,
		  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName
    FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0  
	and( @P_UserEmail = w.ToEmail
	or 
	  @P_UserEmail = W.DelegateTOEmail)
	 and( w.Status=13 or w.Status=16))
    as m 
   	 end
	

	--Outgoing Circular
	if (@P_Type = '2')
	begin
	 insert into @result
	 Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
	 a.CircularID,
	 a.ReferenceNumber,
	 a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
	     (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
(select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
	 a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	 (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	a.Details,
	 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,
		 (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName
	FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
	where a.DeleteFlag = 0 AND (((a.CreatedBy = @P_Username and w.Status<>12 and w.Status!=16) or (w.FromMail=@P_UserEmail and w.Status<>12) or 
	@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.ReferenceNumber)) ) and  (@P_UserEmail != w.ToEmail or @P_Username = a.CreatedBy)) as m 
	end
	
	--Incoming Circular
	if (@P_Type = '3')
	begin
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno, 
	a.CircularID,
	a.ReferenceNumber,
	a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
	  (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
(select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
   a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	a.Details,
	 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,
			  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName
    
   FROM dbo.Circular a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
   where a.DeleteFlag = 0 and w.Status = 14 
   and (
   (@P_Username in (select UserProfileId from UserProfile where DepartmentID in 
	(select [DepartmentID] from [dbo].[CircularDestinationDepartment] where [CircularID]=a.CircularID and DeleteFlag =0))))
   ) as m 
   end
		

	--Draft Circular
	if (@P_Type = '4')
	begin
	--SET @P_Status=(Select LookupsID from [dbo].[M_Lookups] where DisplayName = 'Draft' AND Module = 'Memo' AND Category = 'Status')
	 
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [CircularID]) as slno,
	 a.CircularID,
	 a.ReferenceNumber,
	 a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
	  (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].CircularDestinationDepartment where CircularID = a.CircularID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Circular' AND Category = 'Status') as Status,
 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
   a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	a.Details,
	 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 12 or Status = 13) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,
		  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName
    
   FROM [dbo].[Circular] a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0 AND a.CreatedBy = @P_Username and w.Status=12
	) as m 
	 end


	 if(@P_SourceOU != '')
	 delete from @result where SourceOU not like '%'+@P_SourceOU+'%'

	 if(@P_DestinationOU != '')
	 delete from @result where @P_DestinationOU not in (select value from string_split(Destination,','))

	 if(@P_Priority != '')
	 delete from @result where Priority not like @P_Priority

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_DateTo as date)

	 if(@P_Status !='' )
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [CircularID] desc) as slno,
		 * from @result) as m where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		(Details  like '%'+@P_SmartSearch+'%') or(SourceName  like '%'+@P_SmartSearch+'%') or
			(ApproverName  like '%'+@P_SmartSearch+'%') or(ApproverDepartment  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		((select count(K.DepartmentID) from CircularDestinationDepartment as K where K.CircularID=m.CircularID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		or
		(Priority  like '%'+@P_SmartSearch+'%'))  and slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		(Details  like '%'+@P_SmartSearch+'%') or(SourceName  like '%'+@P_SmartSearch+'%') or
			(ApproverName  like '%'+@P_SmartSearch+'%') or(ApproverDepartment  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		((select count(K.DepartmentID) from CircularDestinationDepartment as K where K.CircularID=a.CircularID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		or
		(Priority  like '%'+@P_SmartSearch+'%')) 
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  [CircularID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result 

	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_CircularPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_CircularPreview]
	@P_CircularID int = 1
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [CircularID],[ReferenceNumber],[Title],[SourceOU],[SourceName],[Details],[Priority],[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Circular].ReferenceNumber order by WorkflowID desc) as Status,
	  (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	 (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and  (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow' )) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = [Circular].ReferenceNumber  and (Status = 12 or Status = 13 ) order by [WorkflowID] desc) 
	 when ( (select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = [Circular].ReferenceNumber and ( Status = 14 or Status = 17) order by [WorkflowID] desc) 
	 end
	 )))

	  as ApproverNameID,

	  	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	 (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and  (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow' )) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = [Circular].ReferenceNumber  and (Status = 12 or Status = 13 ) order by [WorkflowID] desc) 
	 when ( (select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = [Circular].ReferenceNumber and ( Status = 14 or Status = 17) order by [WorkflowID] desc) 
	 end
	 )))

	  as ApproverID,

	   (select EmployeePosition from [dbo].[UserProfile] where OfficialMailId = (
	 (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and  (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow' )) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = [Circular].ReferenceNumber  and (Status = 12 or Status = 13 ) order by [WorkflowID] desc) 
	 when ( (select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = [Circular].ReferenceNumber and ( Status = 14 or Status = 17) order by [WorkflowID] desc) 
	 end
	 )))

	  as ApproverDesignation,
	  
	  [Circular].[InitalApproverDepartment]
	   as ApproverDepartmentID,
	   
(select SignaturePhoto from UserProfile where OfficialMailId = (
	  (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and  (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow' )) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = [Circular].ReferenceNumber  and (Status = 12 or Status = 13 ) order by [WorkflowID] desc) 
	 when ( (select top 1 DelegateFromEmail from Workflow where ReferenceNumber=[Circular].ReferenceNumber and (status=14 or status= 17) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = [Circular].ReferenceNumber and ( Status = 14 or Status = 17) order by [WorkflowID] desc) 
	 end
	 ))) as SignaturePhotoApprover
	  from [dbo].[Circular]  WHERE CircularID = @P_CircularID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffair]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_CitizenAffair]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CitizenAffair] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CitizenAffairByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int=0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 58 or Status = 59) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 58 or Status =59) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 58 or WD.Status = 59)order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result


END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairByID]     ******/
CREATE PROCEDURE [dbo].[Get_CitizenAffairByID] --[Get_CitizenAffairByID] 2,1
	-- Add the parameters for the stored procedure here
	@P_CitizenAffairID int = null,
	@P_UserID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [CitizenAffairID],[SourceOU],[SourceName],[ReferenceNumber],[RequestType],[InitalApproverDepartmentID],[NotifyUpon],[InternalRequestorID],[InternalRequestorDepartmentID],
	[ExternalRequestEmailID],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	(select top 1 Status from [Workflow] 
	 where [ReferenceNumber] = [CitizenAffair].[ReferenceNumber] order by [WorkflowID] desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] = [CitizenAffair].[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[CitizenAffair].CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
	 ))
	  as ApproverNameID,

	  (select [Name] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportName,
	  (select [Employer] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmployer,
	  (select [Destination] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportDestination,
	  (select [MonthlySalary] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportMonthlySalary,
	  (select [EmiratesID] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmirateID,
	  (select [MaritalStatus] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportMaritalStatus,
	  (select [NoOfChildrens] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportNoOfChildrens,
	  (select [PhoneNumber] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportPhoneNumber,
	  (select [Emirates] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmirates,
	  (select PersonalProfileName from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalProfileName,
	  (select PersonalProfilePhotoID from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalProfilePhotoID,
	  (select [City] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportCity,
	  (select [Age] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportAge,
	  (select [ReportObjectives] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportReportObjectives,
	  (select [FindingNotes] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportFindingNotes,
	  (select [Recommendation] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportRecommendation,
	  (select [PersonalProfilePhotoID] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportPhotoID,
	  (select [PersonalProfileName] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportProfileName,
	  (select [Date] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitDate,
	  (select [Location] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitLocation,
	  (select [RequetsedBy] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitRequestedBy,
	  (select [VisitObjective] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitObjective,
	  (select [FindingNotes] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitFindingNotes,
	  (select [ForWhom] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitForWhom,
	  (select [EmiratesID] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitEmiratesID,
	  (select [Name] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitName,
	  (select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitPhoneNumber,
	  (select [City] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitCity,
	  (select [LocationName] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitLocationName,
	  (select [LocationID] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitLocationID,
	   (select Emirates from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as Emirates,
	    (select CityID from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as CityID,
		 (select LocationName from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as LocationName

	  from [dbo].[CitizenAffair] where [CitizenAffairID] = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairList] ******/
CREATE PROCEDURE [dbo].[Get_CitizenAffairList] --   [Get_CitizenAffairList] 1,100,9,1,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int =0,
	@P_Type nvarchar(250) = 0,
	@P_Method int =0,
	@P_RefNo nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_PersonalLocationName nvarchar(250) = null,
	@P_PhoneNo nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) =null,
	@P_RequestType nvarchar(max)= null,
	@P_SourceName nvarchar(max)= null,
	@P_Language nvarchar(10)= 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	-- SET @P_SourceName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_SourceName)
	 SET @UserEmail = (Select [OfficialMailId] from [dbo].[UserProfile] where UserProfileId = @P_UserID)


	

	declare @RequestList table(
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	FromEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @RequestComplientList table(
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	FromEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	insert into @RequestComplientList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'CAComplaintSuggestions'  group by ReferenceNumber ) 

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	CitizenAffairID int,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max),
	LocationName nvarchar(max),
	PhoneNumber nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	AttendedBy nvarchar(250),
	AssignedTo nvarchar(255),
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	Reporter nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],ToEmail,FromEmail,[Status],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Citizen Affair'  group by ReferenceNumber ) 

	--select * from @RequestComplientList

	
	if(@P_Type = 1) -- new requests
	begin

	
	insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			null,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and(( @UserEmail = r.ToEmail and r.WorkflowProcess !='DraftWorkflow' ) or
				(@UserEmail = r.FromEmail and 
				((r.WorkflowProcess='SubmissionWorkflow' 
				and ((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess='SubmissionWorkflow')=1)) 
					or r.WorkflowProcess='DraftWorkflow')))
				and (r.Status = 59 or r.Status=58)
			
	insert into @Result		 
			SELECT   m.CAComplaintSuggestionsID,m.ReferenceNumber,(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = 2),
			null as LocationName,
			PhoneNumber as PhoneNumber,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			case when m.CreatedBy =0 then (select case when @P_Language ='EN' then DisplayName else ArDisplayName end from M_Lookups where Category='System') else (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) end as Creator,
			(select (case when a.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.ToEmail) 
					when a.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by W.WorkflowID desc) as a),null ,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,null,Source
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and 
			@P_UserID in (select [UserProfileId] from [dbo].[UserProfile] U where U.OrgUnitID in (5,6,7,8))  and r.Status = 51 --and r.WorkflowProcess='SubmissionWorkflow'
			
	end
	else if(@P_Type = 2) -- Need more info requests
	begin

	insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]) ,
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator, null,
			(select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
		,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (@UserEmail =r.ToEmail and r.Status = 61) or (@UserEmail IN (select r.FromEmail from Workflow as r where r.ReferenceNumber = m.ReferenceNumber and r.Status = 61))
			
	end
	else if(@P_Type = 3) --Closed requests
	begin

		insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator, null,	
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and ((W.Status = 60 or w.Status = 62) or w.WorkflowProcess='EscalateWorkflow'))) 
			or(@P_UserID=m.CreatedBy)) and (r.Status=60 or r.Status= 62)

	 insert into @Result
		SELECT   m.CAComplaintSuggestionsID,m.ReferenceNumber,(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = 2),
			null as LocationName,
			PhoneNumber as PhoneNumber,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			case when m.CreatedBy =0 then (select case when @P_Language ='EN' then DisplayName else ArDisplayName end from M_Lookups where Category='System') else (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) end as Creator,
			(select (case when a.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.ToEmail) 
					when a.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = a.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by W.WorkflowID desc) as a),null ,
			 (select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,null,Source
			from [dbo].[CAComplaintSuggestions] m join @RequestComplientList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  Where  m.[DeleteFlag] !=1
			and
			((@UserEmail IN (select W.FromEmail from Workflow as W where W.ReferenceNumber = r.ReferenceNumber and W.Status = 52)) OR (@P_UserID=M.CreatedBy AND R.Status=52))

			
	end
	
	else if(@P_Type = 5) --My Own Personal Requests
	begin	

	

	insert into @Result
			SELECT   m.CitizenAffairID,m.[ReferenceNumber], (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) 
			from M_Lookups where Category='CARequestType' and Module = m.[RequestType]),
			(select case when RequestType=0 then 
			(select (case when @P_Language='AR' then ArLocationName else [LocationName] end) from [dbo].[M_Location] where [LocationID]= (select F.Location from [CitizenAffarFieldVisit] as F where F.CitizenAffairID=m.CitizenAffairID )) 
			when RequestType=1 then
			(select P.Name from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end ),
			(select case when RequestType=0 then 
			(Select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = m.[CitizenAffairID])
			when RequestType=1 then
			(select P.PhoneNumber from [CitizenAffairPersonalReport] as P where P.CitizenAffairID=m.CitizenAffairID)
			end),
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			null,	
			(select (case when @P_Language ='EN' then OrganizationUnits else ArOrganizationUnits end) from Organization as Org where Org.OrganizationID= (select UP.OrgUnitID from UserProfile UP where UserProfileId = m.CreatedBy) )  as SourceOU ,
			 (select UP.EmployeeName from UserProfile UP where UserProfileId = m.CreatedBy) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			  (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and (Status = 58 or Status = 59) order by [WorkflowID] desc) 
			))
			as ApproverName,(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= m.InitalApproverDepartmentID) as ApproverDepartment
			,null
			from [dbo].[CitizenAffair] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
				and 
			--(@UserEmail in (select FromEmail from Workflow as W where W.ReferenceNumber=m.ReferenceNumber and W.WorkflowProcess='EscalateWorkflow') or
				((r.WorkflowProcess ='EscalateWorkflow'  and r.Status = 59 and @P_UserID=m.CreatedBy)
				or (@UserEmail = r.FromEmail and  (r.WorkflowProcess in('SubmissionWorkflow','EscalateWorkflow') and 
				((select count(*) from Workflow a where a.ReferenceNumber=m.ReferenceNumber and a.WorkflowProcess in('SubmissionWorkflow','EscalateWorkflow'))>1))))
				and (r.Status = 59 )

	end

	

	if(@P_RequestType is not null and @P_RequestType != 'All')
	delete  from @Result where RequestType != @P_RequestType or RequestType is null

	if(@P_RefNo != '')
	 delete from @result where ReferenceNumber not like '%'+@P_RefNo+'%' or ReferenceNumber is null

	 if(@P_PersonalLocationName != '')
	 delete from @result where LocationName not like '%'+@P_PersonalLocationName+'%' or LocationName is null

	 if(@P_PhoneNo != '')
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNo+'%' or PhoneNumber is null

	  if(@P_SourceName != '' and @P_SourceName is not null)
	 delete from @result where SourceName not like '%'+@P_SourceName+'%' or SourceName is null

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='' and @P_Status != 'All')
	 begin
		delete from @result where Status !=  @P_Status or Status is null
	 end

	 --select * from @Result

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	begin
		select  row_number() over (Order By RequestDate desc) as slno,* from (SELECT row_number() over (Order By RequestDate desc) as slno, * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or(RequestType  like '%'+@P_SmartSearch+'%') or 
		 (Status  like '%'+@P_SmartSearch+'%') or (LocationName like '%'+@P_SmartSearch+'%') or
		  ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   
		or (PhoneNumber  like '%'+@P_SmartSearch+'%')or(SourceName like '%'+@P_SmartSearch+'%')or(AssignedTo like '%'+@P_SmartSearch+'%')
		or(SourceOU like '%'+@P_SmartSearch+'%')or(ApproverDepartment like '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%') or((Select Subject from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		 or((Select c.Source from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')or ((Select Details from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=172))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=173))
			end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		or( (select (case when m.RequestCreatedBy=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=171))
			else (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=226) end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		 or((select case when @P_Language='EN' then L.DisplayName else L.ArDisplayName end from M_Lookups as L where L.Module='CitizenAffair' and  L.Category = (Select c.NotifyUpon from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber)) like '%'+@P_SmartSearch+'%')
		 or ((Select EmployeeName from UserProfile join CitizenAffair as c on UserProfileId=c.InternalRequestorID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
			or((Select  (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department join CitizenAffair as c on DepartmentID=c.InternalRequestorDepartmentID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or((Select  (case when c.RequestType=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=152))
			when c.RequestType=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=153))
			end )from CitizenAffair as c  where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')  or((Select c.ExternalRequestEmailID from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')
		 or((Select c.EmiratesID from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		 or((Select c.FindingNotes from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.RequetsedBy from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.Name from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.PhoneNumber from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select c.VisitObjective from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select CONVERT(nvarchar(10), cast(c.Date as date), 103) from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	  or ((select count(K.Location) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then LocationName else ArLocationName end) from M_Location as d where d.LocationID= K.Location )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.City) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.LocationID) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.LocationID )like '%'+@P_SmartSearch+'%')>0)
     or ((select count(K.LocationName) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID   and a.RequestType='FieldVisit'and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.LocationName )like '%'+@P_SmartSearch+'%')>0)
	 or((select (case when @P_Language ='EN' then L.DisplayName else L.ArDisplayName end) from M_Lookups as L where L.Category = (Select c.ForWhom from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit')) like '%'+@P_SmartSearch+'%')		   
    or((Select c.Name from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
    or((Select c.Age from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
   or((Select c.FindingNotes from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MaritalStatus from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MonthlySalary from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.NoOfChildrens from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Recommendation from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.PhoneNumber from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Destination from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.ReportObjectives from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or ((select count(K.City) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	or ((select count(K.Emirates) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report' and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.Emirates )like '%'+@P_SmartSearch+'%')>0)
	 or ((Select c.Employer from CitizenAffairPersonalReport as c  where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%') 
	or((Select c.EmiratesID from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
		))as m where  m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or(RequestType  like '%'+@P_SmartSearch+'%') or 
		 (Status  like '%'+@P_SmartSearch+'%') or (LocationName like '%'+@P_SmartSearch+'%') or
		  ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   
		or (PhoneNumber  like '%'+@P_SmartSearch+'%')or(SourceName like '%'+@P_SmartSearch+'%')or(AssignedTo like '%'+@P_SmartSearch+'%')
		or(SourceOU like '%'+@P_SmartSearch+'%')or(ApproverDepartment like '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%') or((Select Subject from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		 or((Select c.Source from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')or ((Select Details from CAComplaintSuggestions as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=172))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=173))
			end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		or( (select (case when m.RequestCreatedBy=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=171))
			else (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=226) end) from CAComplaintSuggestions as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
		or((select case when @P_Language='EN' then L.DisplayName else L.ArDisplayName end from M_Lookups as L where L.Module='CitizenAffair' and  L.Category = (Select c.NotifyUpon from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber)) like '%'+@P_SmartSearch+'%')
		or ((Select EmployeeName from UserProfile join CitizenAffair as c on UserProfileId=c.InternalRequestorID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
			or((Select  (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department join CitizenAffair as c on DepartmentID=c.InternalRequestorDepartmentID where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%') 
		or((Select  (case when c.RequestType=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=152))
			when c.RequestType=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=153))
			end )from CitizenAffair as c  where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')  or((Select c.ExternalRequestEmailID from CitizenAffair as c where c.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')
		 or((Select c.EmiratesID from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		 or((Select c.FindingNotes from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.RequetsedBy from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.Name from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
		or((Select c.PhoneNumber from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select c.VisitObjective from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	   or((Select CONVERT(nvarchar(10), cast(c.Date as date), 103) from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		
	  or ((select count(K.Location) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then LocationName else ArLocationName end) from M_Location as d where d.LocationID= K.Location )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.City) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit' and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	  or ((select count(K.LocationID) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.LocationID )like '%'+@P_SmartSearch+'%')>0)
     or ((select count(K.LocationName) from CitizenAffarFieldVisit as K where K.CitizenAffairID=a.CitizenAffairID   and a.RequestType='FieldVisit'and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.LocationName )like '%'+@P_SmartSearch+'%')>0)
	 or((Select c.ForWhom from CitizenAffarFieldVisit as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='FieldVisit') like '%'+@P_SmartSearch+'%')		   
    or((Select c.Name from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
    or((Select c.Age from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
   or((Select c.FindingNotes from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MaritalStatus from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.MonthlySalary from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	 or((Select c.NoOfChildrens from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Recommendation from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.PhoneNumber from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.Destination from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or((Select c.ReportObjectives from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
	or ((select count(K.City) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report'  and (select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City as d where d.CityID= K.City )like '%'+@P_SmartSearch+'%')>0)
	or ((select count(K.Emirates) from CitizenAffairPersonalReport as K where K.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report' and (select (case when @P_Language ='EN' then EmiratesName else ArEmiratesName end) from M_Emirates as e where e.EmiratesID= K.Emirates )like '%'+@P_SmartSearch+'%')>0)
	 or ((Select c.Employer from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%') 
	or((Select c.EmiratesID from CitizenAffairPersonalReport as c where c.CitizenAffairID=a.CitizenAffairID and a.RequestType='Personal Report') like '%'+@P_SmartSearch+'%')		
		)
	 end

	if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (SELECT row_number() over (Order By RequestDate desc) as slno, * from @result) as m
	  where slno between @StartNo and @EndNo 


	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairPersonalReportByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CitizenAffairPersonalReportByID]
	@P_CitizenAffairID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CitizenAffairPersonalReport] where  CitizenAffairID = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairPersonalReportPreviewByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairPersonalReportPreviewByID]  ******/
CREATE PROCEDURE [dbo].[Get_CitizenAffairPersonalReportPreviewByID]
	@P_CitizenAffairID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [PersonalReportID],[CitizenAffairID], [Name],c.Employer as Employer, 
[Destination],[MonthlySalary],[EmiratesID],[MaritalStatus],[NoOfChildrens],[PhoneNumber],(select EmiratesName from  M_Emirates as b where c.Emirates=b.EmiratesID) as Emirates,
(select CityName from  M_City as b where c.City=b.CityID)as City,[Age],[ReportObjectives],
[FindingNotes],[Recommendation],[PersonalProfilePhotoID],[PersonalProfileName]from [dbo].[CitizenAffairPersonalReport] as c where  CitizenAffairID = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CitizenAffairPreview] ******/
CREATE PROCEDURE [dbo].[Get_CitizenAffairPreview] --[Get_CitizenAffairPreview] 2
	-- Add the parameters for the stored procedure here
	@P_CitizenAffairID int =5,
	@P_UserID int = 1
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [CitizenAffairID],[SourceOU],[SourceName],[ReferenceNumber],[RequestType],[InitalApproverDepartmentID],[NotifyUpon],[InternalRequestorID],[InternalRequestorDepartmentID],
	[ExternalRequestEmailID],(select  EmployeeName from [dbo].UserProfile where UserProfileId=a.CreatedBy) as Creator,[CreatedBy],(select EmployeeName from [dbo].UserProfile where UserProfileId=a.UpdatedBy)as UpdatedBy,[CreatedDateTime],[UpdatedDateTime],
	(select top 1 Status from [Workflow] 
	 where [ReferenceNumber] =a.ReferenceNumber order by [WorkflowID] desc) as Status,

	 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	 (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and  (status=60 or status= 63)) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = a.ReferenceNumber  and (Status = 58 or Status = 59 ) order by [WorkflowID] desc) 
	 when ( (select DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and (status=60 or status= 63) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = a.ReferenceNumber and ( Status = 60 or Status = 63) order by [WorkflowID] desc) 
	 end
	 )))
	  as ApproverNameID,

	   (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	 (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and  (status=60 or status= 63)) is null) then
	  (select top 1 ToEmail from [Workflow] 
	 where [ReferenceNumber] = a.ReferenceNumber  and (Status = 58 or Status = 59 ) order by [WorkflowID] desc) 
	 when ( (select  top 1 DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and (status=60 or status= 63) and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow')) != '') then
	  (select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = a.ReferenceNumber and ( Status = 60 or Status = 63) order by [WorkflowID] desc) 
	 end
	 )))
	  as ApproverID,

	  (select [Name] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportName,
	  (select PersonalProfileName from [dbo].[CitizenAffairPersonalReport] as c where c.CitizenAffairID=a.CitizenAffairID) as PersonalReportPhotoName,
	  (select  c.Employer  from [dbo].[CitizenAffairPersonalReport] as c  where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmployer,
	  (select [Destination] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportDestination,
	  (select [MonthlySalary] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportMonthlySalary,
	  (select [EmiratesID] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmirateID,
	  (select [MaritalStatus] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportMaritalStatus,
	  (select [NoOfChildrens] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportNoOfChildrens,
	  (select [PhoneNumber] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportPhoneNumber,
	  (select emiratesName from [dbo].[CitizenAffairPersonalReport] as c inner join M_Emirates as m on c.Emirates=m.EmiratesID  where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportEmirates,
	( select CityName from CitizenAffairPersonalReport as c inner join M_City AS M ON C.City=M.CityID WHERE C.CitizenAffairID=@P_CitizenAffairID) as PersonalReportCity,
	(select [Age] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportAge,
	  (select [ReportObjectives] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportReportObjectives,
	  (select [FindingNotes] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportFindingNotes,
	  (select [Recommendation] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportRecommendation,
	  (select [PersonalProfilePhotoID] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportPhotoID,
	  (select [PersonalProfileName] from [dbo].[CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID) as PersonalReportProfileName,
	  (select [Date] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitDate,
	 ( select Location from CitizenAffarFieldVisit  WHERE CitizenAffairID=@P_CitizenAffairID) as FieldVisitLocation,
	(select [RequetsedBy] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitRequestedBy,
	  (select [VisitObjective] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitObjective,
	  (select [FindingNotes] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitFindingNotes,
	  (select [ForWhom] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitForWhom,
	  (select [EmiratesID] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitEmiratesID,
	  (select [Name] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitName,
	  (select [PhoneNumber] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitPhoneNumber,
	  (select cityName from [dbo].[CitizenAffarFieldVisit] as c inner join M_City as m on c.City=m.CityID where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitCity,
	  (select m.LocationName from [dbo].[CitizenAffarFieldVisit] as c inner join M_Location AS M ON C.LocationID=M.LocationID where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitLocationName,
	 (select [LocationID] from [dbo].[CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID) as FieldVisitLocationName,
	 (select SignaturePhoto from UserProfile where UserProfileId= a.CreatedBy) as SignaturePhotoCreator,
	(select SignaturePhoto from UserProfile where OfficialMailId = (
	  (case when ((select top 1 DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and (Status = 60  or Status = 63)) is null) then
	  (select top 1 FromEmail from [Workflow]
	 where [ReferenceNumber] = a.ReferenceNumber and   (Status = 60  or Status = 63) order by [WorkflowID] desc) 
	when ((select  top 1 DelegateFromEmail from Workflow where ReferenceNumber=a.ReferenceNumber and (Status = 60  or Status = 63)) != '' )then 
	(select top 1 DelegateFromEmail from [Workflow]
	 where [ReferenceNumber] = a.[ReferenceNumber]and (WorkflowProcess='ApprovalWorkflow' or WorkflowProcess='CloseWorkflow') and (Status = 60 or Status = 63) order by [WorkflowID] desc) end
	))) as SignaturePhotoApprover
	  from [dbo].[CitizenAffair] as a where [CitizenAffairID] = @P_CitizenAffairID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffarFieldVisitByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CitizenAffarFieldVisitByID]
	@P_CitizenAffairID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CitizenAffarFieldVisit] where  CitizenAffairID = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffarFieldVisitPreviewByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CitizenAffarFieldVisitPreviewByID] ******/
CREATE PROCEDURE [dbo].[Get_CitizenAffarFieldVisitPreviewByID] 
	@P_CitizenAffairID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [CreationFieldID],[CitizenAffairID],[Date],(select m.LocationName from  M_Location as m where m.LocationID=  c.Location )as Location,[RequetsedBy],[VisitObjective],
	[FindingNotes],[ForWhom],[EmiratesID],[Name],[PhoneNumber], [LocationName],[LocationID],
	(case when [ForWhom] ='forPersonal' then (select [ArCityName] from [dbo].[M_City] CM where CM.[CityID]=c.City)
	else (select m.LocationName from  M_Location as m where m.LocationID=  c.Location ) end) as LocationEmirites from [dbo].[CitizenAffarFieldVisit] as c where  CitizenAffairID = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CitizenAffarHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CitizenAffarHistoryByID]
	@P_CitizenAffairID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT [HistoryID],CitizenAffairID,[Action],case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.ActionBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.ActionBy  )) end as 
	 ActionBy,[ActionDateTime],[Comments] from [dbo].[CitizenAffairHistory] as a where CitizenAffairID = @P_CitizenAffairID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationAssigneeID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CompensationAssigneeID] -- [Get_CompensationAssigneeID] 003-2019-O
	-- Add the parameters for the stored procedure here 
@P_ReferenceNumber nvarchar(max) = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @UserID int = 0;
	set @UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and Status = 109 and ([WorkflowProcess] = 'AssignToMeWorkflow' or [WorkflowProcess] = 'AssignWorkflow') 
	  order by WorkflowID desc) 
	 ))
	 if(@UserID is null)
	 begin
	 set @UserID = 0;
	 select @UserID as UserID
	 end
	 else
	 begin
	 select @UserID as UserID
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CompensationByApproverId] --  Get_CompensationByApproverId '003-2019-O'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 108 ) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 108 ) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 108 )order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_CompensationByID] --  [Get_CompensationByID] 16
	@P_CompensationID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [CompensationID],[ReferenceNumber],[OfficialTaskID],[SourceOU],[SourceName],[OfficialTaskType],
	[StartDate],[EndDate],[NumberofDays],[CompensationDescription],[NeedCompensation],[Comments],[DeleteFlag],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Compensation].ReferenceNumber order by WorkflowID desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =[Compensation].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Compensation.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverNameID,
	  
	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =[Compensation].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Compensation.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverDepartmentID,

	  case when (select count(*) from [dbo].[Workflow] where Status = 108 and(
	[WorkflowID] = (select max([WorkflowID]) from [dbo].[Workflow] where [ReferenceNumber] = [Compensation].[ReferenceNumber] ) or
	([WorkflowID] = (select max([WorkflowID])-1 from [dbo].[Workflow] where [ReferenceNumber] = [Compensation].[ReferenceNumber] )) or
	([WorkflowID] = (select max([WorkflowID])-2 from [dbo].[Workflow] where [ReferenceNumber] = [Compensation].[ReferenceNumber] ))))=3 
	then (select top 1 UserProfileId from [dbo].[UserProfile] where OfficialMailId =(select top 1 ToEmail from [Workflow] 
	where [ReferenceNumber] = [Compensation].[ReferenceNumber]  order by [WorkflowID] desc))
	else null end  as AssigneeID,

	 (select UserProfileId from [dbo].[UserProfile] where [OfficialMailId] = (select top 1 FromEmail from [dbo].[Workflow] where [ReferenceNumber] =
	   (select ReferenceNumber from  [dbo].[Compensation]  WHERE CompensationID = @P_CompensationID and [IsHrHeadApproved]=1) 
	   and status = 109 and [WorkflowProcess]= 'ApprovalWorkflow' order by [WorkflowID] desc)) as 'HRManagerUserID'
	  
	  
	  from [dbo].[Compensation]  WHERE CompensationID = @P_CompensationID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CompensationCommunicationHistory]   ******/
CREATE PROCEDURE [dbo].[Get_CompensationCommunicationHistory]
    @P_CompensationID int =0
	

	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
			select [CommunicationID],[CompensationID],[Message],[ParentCommunicationID],[Action],
			case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
		[CreatedDateTime],
		case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName   from [dbo].[CompensationCommunicationHistory]  as a
		where CompensationID=@P_CompensationID --order by [CreatedDateTime] desc
	 

    -- Insert statements for procedure here
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationEmployeeDetails]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[Get_CompensationEmployeeDetails] --[Get_CompensationEmployeeDetails] 15
@P_CompensationID int null

As
begin
declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	EmployeeID int,
	EmployeeName nvarchar(max),
	EmployeeCode nvarchar(max),
	Grade nvarchar(max),
	EmployeePosition nvarchar(max),
	EmployeeDepartment nvarchar(max))

	insert into @Result
			SELECT 
			U.UserProfileId,
			U.EmployeeName,
			UP.[EmployeeCode],
			UP.[Grade],
			UP.[EmployeePosition],
			(select o.DepartmentName from M_Department as O where U.OrgUnitID = O.DepartmentID)as EmployeeDepartment
	 from UserProfile as UP join [dbo].[UserProfile]  as U on U.UserProfileId = UP.UserProfileId  join Compensation as C on C.CreatedBy = U.UserProfileId where C.CompensationID = @P_CompensationID
	 

	 select * from @result
	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_CompensationPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[Get_CompensationPreview]  --   Get_CompensationPreview 69
	-- Add the parameters for the stored procedure here
	@P_CompensationID int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   declare @result table(
id int identity(1,1),
OfficialTaskReferenceNo nvarchar(255),
CompensationReferenceNo nvarchar(255),
OfficialTaskDescription nvarchar(max),
StartDate datetime,
OfficialTaskCreatorName nvarchar(255),
OfficialTaskCreatorDesignation nvarchar(255),
AssigneeName nvarchar(255),
AssigneeEmployeeID nvarchar(255),
NoOfDays int
)

declare @Assignee int = null;

select @Assignee = (case when q.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.ToEmail) 
					when q.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b 
					where b.ReferenceNumber=(select ReferenceNumber from Compensation where CompensationID=@P_CompensationID) and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as q

insert into @result
select O.ReferenceNumber,C.ReferenceNumber,O.OfficialTaskDescription,C.StartDate,(select Up.EmployeeName from UserProfile as UP where UP.UserProfileID = O.CreatedBy)
,(select Up.EmployeePosition from UserProfile as UP where UP.UserProfileID = O.CreatedBy) ,(select Up.EmployeeName from UserProfile as UP where UP.UserProfileID = @Assignee)
,(select Up.EmployeePosition from UserProfile as UP where UP.UserProfileID = @Assignee),C.NumberofDays from Compensation as C inner join OfficialTask as O on C.OfficialTaskID=O.OfficialTaskID 
 where C.CompensationID = @P_CompensationID

select * from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_Contact]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_Contact]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Contact] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_ContactByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_ContactByID]
	@P_ContactID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Contact] where DeleteFlag=0 and ContactID = @P_ContactID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_ContactHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_ContactHistoryByID]-- 49
	@P_ContactID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[ContactID],[Action],[ActionBy],
			[ActionDateTime],[Comments] from [dbo].[ContactHistory] where ContactID = @P_ContactID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_ContactList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_ContactList]    Script Date: 12-11-2019 09:00:41 ******/
CREATE PROCEDURE [dbo].[Get_ContactList] --[Get_ContactList] 1,4,0,1
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =0,
	@P_Type int = 0,
	@P_Department nvarchar(250) = null ,
	@P_UserName nvarchar(250) = null,
	@P_EntityName nvarchar(250) = null,
	@P_Designation nvarchar(250)= null,
	@P_EmailId nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_GovernmentEntity int  = 0



AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table
	(
	ContactID int ,
	Department nvarchar(250),
	UserName nvarchar(255),
	EntityName nvarchar(max),
	Designation nvarchar(250),
	EmailId nvarchar(max),
	PhoneNumber nvarchar(max),
	Photo nvarchar(max),
	ProfilePhotoID nvarchar(max),
	ProfilePhotoName nvarchar(max)
	
	);


    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
if (@P_Type = 1) --GetInternalContact
begin
		insert into @result  
	select
	--SELECT row_number() over (Order By  C.[ContactID]) as slno,
	C.ContactID,
	C.[Department],
	C.[UserName],
	C.[EntityName],
	C.[Designation],
	C.[EmailId],
	C.[PhoneNumber],
	'https://image.shutterstock.com/image-vector/man-avatar-profile-picture-vector-260nw-229692004.jpg',
	c.ProfilePhotoID,c.ProfilePhotoName from 
	[dbo].[Contact] as C  where C.DeleteFlag= 0 and C.Type ='internal';
	 --where ServiceID=C.[ContactID]and Type = 'Contact') as Photo
end

if (@P_Type = 2) --GetExternalContact
begin
insert into @result  select
    C.ContactID,
	C.[Department],
	C.[UserName],
	C.[EntityName],
	C.[Designation],
	C.[EmailId],
	C.[PhoneNumber],
	'https://image.shutterstock.com/image-vector/man-avatar-profile-picture-vector-260nw-229692004.jpg',
	c.ProfilePhotoID,c.ProfilePhotoName from 
	[dbo].[Contact] as C  where C.DeleteFlag= 0 and C.Type ='external'
	and (case when @P_GovernmentEntity =0 then 1 else OfficialEntity end)  = (case when @P_GovernmentEntity= 1 then 1 
	when @P_GovernmentEntity = 2 then 0 else 1 end);

	
end
	--select * from @result

	 if(@P_Department != '')
	 delete from @result where Department != @P_Department
	 	
	 if(@P_UserName  != '') 
	 delete from @result where UserName not like '%'+@P_UserName+'%'

	if(@P_EntityName  != '') 
	 delete from @result where EntityName not like '%'+@P_EntityName+'%'

	if(@P_Designation  != '') 
	 delete from @result where Designation not like '%'+@P_Designation+'%'
	 	 
	if(@P_EmailId  != '') 
	 delete from @result where EmailId not like '%'+@P_EmailId+'%'
	    	 
	if(@P_PhoneNumber  != '') 
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNumber+'%'
	
	 if(@P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [ContactID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 )
	 select count(*) from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_CVBankByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CVBankByID]
	@P_CVBankId int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[CVBank] where CVBankId = @P_CVBankId and DeleteFlag= 0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CVBankCandidateNameList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_CVBankCandidateNameList]
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	 select distinct CandidateName from CVBank
END
GO
/****** Object:  StoredProcedure [dbo].[Get_CVBankList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_CVBankList]    ******/
CREATE PROCEDURE [dbo].[Get_CVBankList] --[Get_CVBankList] 1,10,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =0,
	@P_CandidateName nvarchar(250) = null,
	@P_YearsofExperience nvarchar(250) = null,
	@P_Specialization nvarchar(250) = null,
	@P_Country nvarchar(250) = null,
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10)='EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	id int,
	ReferenceNumber nvarchar(255),
	CVBankId int,
	CandidateName nvarchar(255),
	Position nvarchar(max),
	YearsofExperience nvarchar(max),
	Specialization nvarchar(max),
	CountryofResidence nvarchar(max),
	Education nvarchar(max),
	CityofResidence nvarchar(max),
	Date datetime
	);

	  -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	insert into @result  
	SELECT row_number() over (Order By  CV.[CVBankId]) as slno,
	CV.ReferenceNumber,
	CV.[CVBankId],
	CV.[CandidateName],
	CV.[JobTitle],
	(select (case when @P_Language='EN' then ExperienceName else ArExperienceName end ) from M_Experience where ExperienceID=CV.YearsofExperience) as Specialization,
	(select (case when @P_Language='EN' then SpecializationName else ArSpecializationName end ) from M_Specialization where SpecializationID=CV.[Specialization]) as Specialization,
	(select(case when @P_Language='EN' then [CountryName] else ArCountryName end)from [dbo].[M_Country] where [CountryID] = CV.[CountryofResidence]),
	(select (case when @P_Language='EN' then EducationName else ArEducationName end ) from M_Education where EducationID=CV.EducationalQualification) as Education,
	(select(case when @P_Language='EN' then CityName else ArCityName end)from [dbo].M_City where CityID = CV.CityofResidence),
	CV.[CreatedDateTime] as Date
	from [dbo].[CVBank] as CV where DeleteFlag= 0;

	--select * from @result 

	 if(@P_CandidateName != '')
	 delete from @result where CandidateName != @P_CandidateName

	 if(@P_Country != '')
	 delete from @result where CVBankId not in (select CVBankId from CVBank where CountryofResidence = (select CountryID from [dbo].[M_Country] where CountryName = @P_Country))

	 if(@P_YearsofExperience  != '') 
	 delete from @result where YearsofExperience not like '%'+@P_YearsofExperience+'%'

	 if(@P_Specialization  != '') 
	 delete from @result where Specialization not in (select(case when @P_Language='EN' then SpecializationName else ArSpecializationName end ) from [dbo].[M_Specialization] where SpecializationName = @P_Specialization)

	 if(@P_DateFrom is not null)
	 delete from @result where cast( Date as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(Date as date) > cast(@P_DateTo as date)
	
	if(@P_SmartSearch is not null and @P_Method = 0 )
	  begin
	 select * from (SELECT row_number() over (Order By  [CVBankId] desc) as slno,
		 * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%')or(CandidateName  like '%'+@P_SmartSearch+'%') or (Position  like '%'+@P_SmartSearch+'%')or (YearsofExperience  like '%'+@P_SmartSearch+'%') or (Specialization like '%'+@P_SmartSearch+'%')
		or((select Address from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select AreaofExpertise from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select EmailId from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or (CityofResidence  like '%'+@P_SmartSearch+'%') or (Education like '%'+@P_SmartSearch+'%')
		or( (select (case when k.Gender=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=167))
			when k.Gender=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=168))
			end) from CVBank as k where k.CVBankId=a.CVBankId   ) like  '%'+@P_SmartSearch+'%')
			 or	((SELECT  CONVERT(nvarchar(10), cast(Date as date), 103) )  like '%'+@P_SmartSearch+'%')  	or ((select CountryName from M_Country where CountryName = CountryofResidence) like '%'+@P_SmartSearch+'%')
	)) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 	
		((ReferenceNumber  like '%'+@P_SmartSearch+'%')or(CandidateName  like '%'+@P_SmartSearch+'%') or (Position  like '%'+@P_SmartSearch+'%')or (YearsofExperience  like '%'+@P_SmartSearch+'%') or (Specialization like '%'+@P_SmartSearch+'%')
		or((select Address from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select EmailId from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or ((select AreaofExpertise from CVBank as k where k.CVBankId=a.CVBankId)like '%'+@P_SmartSearch+'%')
		or (CityofResidence  like '%'+@P_SmartSearch+'%') or (Education like '%'+@P_SmartSearch+'%')
		or( (select (case when k.Gender=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=167))
			when k.Gender=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=168))
			end) from CVBank as k where k.CVBankId=a.CVBankId   ) like  '%'+@P_SmartSearch+'%')
			
	or ((select CountryName from M_Country where CountryName = CountryofResidence) like '%'+@P_SmartSearch+'%')
	)
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  [CVBankId] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_DelegateUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DelegateUser]  --4
	-- Add the parameters for the stored procedure here
	 @P_UserID int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	DOANameID int,
	StartDate datetime,
	EndDate datetime,
	Creator int )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 

	insert into @Result
			SELECT DOANameID,StartDate,EndDate,CreatedBy
			from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and (w.Status = 11)

	declare @P_DeletgateUserID int =0;
	select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @P_UserID and (select GETDATE()) >= [StartDate] 
	and (select GETDATE()) <= EndDate 

	select @P_DeletgateUserID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DiwanIdentityByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DiwanIdentityByApproverId] --  Get_DiwanIdentityByApproverId '102-2019-M'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = null,
	@P_UserID int =0
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 100) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 100)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 100 )order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_DiwanIdentityByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DiwanIdentityByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and  ( WorkflowProcess='AssignWorkflow' or WorkflowProcess='AssignToMeWorkflow') order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and ( WorkflowProcess='AssignWorkflow')  order by WorkflowID desc) 
	 )
	 end

	select MediaDeptUsedIds from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_DiwanIdentityByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DiwanIdentityByID] --  [Get_DiwanIdentityByID] 43
	@P_DiwanIdentityID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 


	SELECT [DiwanIdentityID],[ReferenceNumber],[Date],[SourceOU],[SourceName],[PurposeofUse],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from Workflow 
	 where ReferenceNumber =[DiwanIdentity].ReferenceNumber order by WorkflowID desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =[DiwanIdentity].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=DiwanIdentity.CreatedBy) and (Status = 100 ))))
	  as ApproverNameID,
	  ApproverDepartmentID as ApproverDepartmentID,

	  case when (select count(*) from [dbo].[Workflow] where Status = 43 and(
	[WorkflowID] = (select max([WorkflowID]) from [dbo].[Workflow] where [ReferenceNumber] = [DiwanIdentity].[ReferenceNumber] ) or
	([WorkflowID] = (select max([WorkflowID])-1 from [dbo].[Workflow] where [ReferenceNumber] = [DiwanIdentity].[ReferenceNumber] )) or
	([WorkflowID] = (select max([WorkflowID])-2 from [dbo].[Workflow] where [ReferenceNumber] = [DiwanIdentity].[ReferenceNumber] ))))=3 
	then (select top 1 [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId] =(select top 1 ToEmail from [Workflow] 
	where [ReferenceNumber] = [DiwanIdentity].[ReferenceNumber]  order by [WorkflowID] desc))
	else null end  as AssigneeID
	  
	  
	  from [dbo].[DiwanIdentity]  WHERE DiwanIdentityID = @P_DiwanIdentityID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DiwanIdentityCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DiwanIdentityCommunicationHistory]   ******/
CREATE PROCEDURE [dbo].[Get_DiwanIdentityCommunicationHistory]
    @P_DiwanIdentityID int =0
	

	-- Add the parameters for the stored procedure here
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
        
            select [CommunicationID],[DiwanIdentityID],[Message],[ParentCommunicationID],[Action],
    case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
    else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
    (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
        [CreatedDateTime], case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName 
	 from [dbo].[DiwanIdentityCommunicationHistory]  as a
        where DiwanIdentityID=@P_DiwanIdentityID 
     
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DocumentByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DocumentByID]  ******/
CREATE PROCEDURE [dbo].[Get_DocumentByID]
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type nvarchar(100) = null,
	@P_Creator nvarchar(255)= null,
	@P_SmartSearch nvarchar(255) =null,
	@P_Method int =0
AS
BEGIN
	
	SET NOCOUNT ON;

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @result table(
	AttachmentId int,
	Type nvarchar(255),
	AttachmentGuid nvarchar(max),
	AttachmentsName nvarchar(max),
	CreatedBy nvarchar(100),
	CreatedDateTime datetime,
	UpdatedBy nvarchar(100),
	UpdatedDateTime datetime
	);

	insert into @result (AttachmentId,Type,AttachmentGuid,AttachmentsName,CreatedBy,CreatedDateTime,UpdatedBy,UpdatedDateTime)
	SELECT D.AttachmentID,D.type,D.AttachmentGuid,D.AttachmentsName,(select U.EmployeeName  from [dbo].[UserProfile] as U where U.UserProfileId = D.CreatedBy)
	,D.CreatedDateTime,(select U.EmployeeName  from [dbo].[UserProfile] as U where U.UserProfileId = D.UpdatedBy),D.UpdatedDateTime from [dbo].[Documents] as D
	 where DeleteFlag=0 and  Type =  @P_Type

	 if(@P_Creator is not null or @P_Creator !='')
	 begin
		Delete from @result where CreatedBy not like '%'+@P_Creator+'%'
	 end

	 if(@P_SmartSearch is null  and @P_Method = 0 )
	select * from( select row_number() over (Order By AttachmentId ) as slno,* from @result 
		) as m where slno between @StartNo and @EndNo
	
	if(@P_SmartSearch is not null   and @P_Method = 0 )
	select * from( select row_number() over (Order By AttachmentId ) as slno,* from @result where  
	 (AttachmentsName  like '%'+@P_SmartSearch+'%') or(CreatedBy  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  ) as m where slno between @StartNo and @EndNo

		 if(@P_SmartSearch is null  and @P_Method = 1 )
			select count(*) from @result
	
	if(@P_SmartSearch is not null   and @P_Method = 1 )
	select count(*) from( select row_number() over (Order By AttachmentId ) as slno,* from @result where  
	 (AttachmentsName  like '%'+@P_SmartSearch+'%') or(CreatedBy  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  ) as m 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DriverByID] ******/
Create PROCEDURE [dbo].[Get_DriverByID]
	@P_DriverID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT  [DriverID]
      ,[UserProfileID]
      ,[LogDate]
      ,[ExtraHours]
      ,[CompensateHours]
      ,[DeleteFlag]
      ,[CreatedBy]
      ,[UpdatedBy]
      ,[CreatedDateTime]
      ,[UpdatedDateTime]

	 from [dbo].[Drivers]  WHERE DriverID = @P_DriverID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_DriverExtraCompensate]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DriverExtraCompensate]   ******/
CREATE PROCEDURE [dbo].[Get_DriverExtraCompensate]
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_DateRangeFrom datetime = null,
	@P_DateRangeTo datetime = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @result table(
	id int identity(1,1),
	 DriverID int,
	 UserProfileID int,
	 LogDate datetime,
	 ExtraHours int,
	 CompensateHours int,
	 Temp int,
	 BalanceExtraHours int)

	 Declare @temp table(
	 id int identity(1,1),
	 Sum int );

	insert into @result
	select DriverID,UserProfileID,LogDate,ExtraHours,CompensateHours,0,0 from Drivers  where UserProfileID=@P_UserID and DeleteFlag = 0 

	Update a set a.Temp = (case when a.ExtraHours != 0 then a.ExtraHours+a.Temp else a.Temp-a.CompensateHours end) from @result as a
	
	insert into @temp
	select sum(b.Temp) OVER (ORDER BY b.id) from @result as b 

	Update a set a.BalanceExtraHours = b.Sum  from @result as a inner join  @temp as b on a.id = b.id
	
	 if(@P_DateRangeFrom is not null)
	 delete from @result where cast( LogDate as date) < cast(@P_DateRangeFrom as date)

	 if(@P_DateRangeTo is not null)
	 delete from @result where cast(LogDate as date) > cast(@P_DateRangeTo as date)
	
	 if(@P_Method = 0 )
	 begin
	 select * from  @result		
	 end

	  if( @P_Method = 1 )
	 begin
		select count(*) from @result		
	 end

	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_DriverList] --1,10,1,0,'2019-12-12 18:30:00.000'
	@P_PageNumber int =0,
	@P_PageSize int =0,	
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_CalendarDate datetime = null,
	@P_DateRangeFrom datetime = null,
	@P_DateRangeTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @RefCout int =0,@StartNo int =0 , @EndNo int =0 
	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;

	declare @result table
	(
	 DriverID int,
	 UserProfileID int,
	 DriverName nvarchar(max),
	 TotalHour int,
	 MobileNumber nvarchar(max)
	)

	insert into @result
	select U.UserProfileId,U.UserProfileId,U.EmployeeName,(select sum(ExtraHours)-sum(CompensateHours) from Drivers as D 
		where D.UserProfileID=U.UserProfileId),U.MobileNumber from UserProfile as U where U.IsDriver = 1 and  U.DeleteFlag = 0 

	
	
	if(@P_CalendarDate is not null)
	begin
		delete from @result where DriverID not in (
			select V.DriverID from [dbo].[VehicleRequest] as V where ((cast(@P_CalendarDate as Date) between cast(V.TripPeriodFrom as Date) and cast(V.TripPeriodTo as date)  )
			or (cast(@P_CalendarDate as Date) = cast(V.TripPeriodFrom as Date)) or (cast(@P_CalendarDate as Date)= cast(V.TripPeriodTo as date)  ))
			and (select Count(*) from Workflow as w where w.ReferenceNumber = V.ReferenceNumber and w.Status=212)>0 and V.DriverID is not null)
	end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [DriverID] desc) as slno,
		 * from @result) as m where   slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result 
		
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null and @P_PageNumber!= 0)
	 begin
	 select * from (SELECT row_number() over (Order By  [DriverID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null and @P_PageNumber!= 0)
	 select count(*) from @result 

	 if(@P_PageNumber= 0)
	 begin
	 SELECT row_number() over (Order By  [DriverID] desc) as slno,
		 * from @result  
	 end

	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverPreviewCalenderList]    Script Date: 14-Jan-20 10:30:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[Get_DriverPreviewCalenderList] --	'2020-01-10'
	@P_CalendarDate datetime = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.

	declare @result table
	(
	 DriverID int,
	 UserProfileID int,
	 DriverName nvarchar(max),
	 TotalHour int,
	 MobileNumber nvarchar(max)
	)

	insert into @result
	select U.UserProfileId,U.UserProfileId,U.EmployeeName,(select sum(ExtraHours)-sum(CompensateHours) from Drivers as D 
		where D.UserProfileID=U.UserProfileId),U.MobileNumber from UserProfile as U where U.IsDriver = 1 and  U.DeleteFlag = 0 
	
	
	if(@P_CalendarDate is not null)
	begin
		delete from @result where DriverID not in (
			select V.DriverID from [dbo].[VehicleRequest] as V where ((cast(@P_CalendarDate as Date) between cast(V.TripPeriodFrom as Date) and cast(V.TripPeriodTo as date)  )
			or (cast(@P_CalendarDate as Date) = cast(V.TripPeriodFrom as Date)) or (cast(@P_CalendarDate as Date)= cast(V.TripPeriodTo as date)  ))
			and (select Count(*) from Workflow as w where w.ReferenceNumber = V.ReferenceNumber and w.Status=212)>0 and V.DriverID is not null)
	end

	 select * from (SELECT row_number() over (Order By  [DriverID] desc) as slno,
		 * from @result) as m

	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverReport]    Script Date: 14-Jan-20 10:30:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	 
/****** Object:  StoredProcedure [dbo].[[Get_DriverReport]]   ******/
Create PROCEDURE [dbo].[Get_DriverReport] 
	@P_UserID int = 0,
	@P_ExtraHours int =null,
	@P_CompensateHours int =null,
	@P_Date datetime =null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	

	declare @result table
	(
	 DriverID int,
	 ExtraHours int,
	 CompensateHours int,

	 LogDate  datetime,
	 CreatedDateTime datetime,
	 UpdatedBy int,
	 CreatedBy int,
	 UpdatedDateTime datetime
	)

	insert into @result

	select DriverID,ExtraHours,CompensateHours,LogDate,CreatedDateTime,UpdatedBy,CreatedBy,UpdatedDateTime from Drivers where DeleteFlag = 0 

	
	 if(@P_Date is not null)
	 delete from @result where cast( LogDate as date) < cast(@P_Date as date)

     if(@P_ExtraHours  != 0) 
	 delete from @result where ExtraHours not like '%'+@P_ExtraHours+'%'

	 if(@P_CompensateHours  != 0) 
	 delete from @result where CompensateHours not like '%'+@P_CompensateHours+'%'
	
	

	 if(@P_SmartSearch is not null )
	 begin
	 select * from (SELECT row_number() over (Order By  [DriverID] desc) as slno,
		 * from @result) as m where 
		( (ExtraHours  like '%'+@P_SmartSearch+'%') or
		(CompensateHours  like '%'+@P_SmartSearch+'%') or
		
		((SELECT  CONVERT(nvarchar(10), cast(LogDate as date), 103))  like '%'+@P_SmartSearch+'%')  
		) 
	 end

	  if(@P_SmartSearch is null  )
	 begin
		select * from @result
		
	 end
	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverSelect]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure  [Get_DriverSelect]  ******/
CREATE PROCEDURE [dbo].[Get_DriverSelect]  
	
	@P_UserID nvarchar(250) =null
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	Update UserProfile set IsDriver= 1 where UserProfileId in
	(select value from string_split(@P_UserID,';'))

	Update UserProfile set IsDriver= 0 where UserProfileId not	in
	(select value from string_split(@P_UserID,';'))

	select 'true'
end	
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverTripDays]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DriverTripDays]    ******/
CREATE PROCEDURE [dbo].[Get_DriverTripDays] -- [Get_DriverTripDays] 7
	-- Add the parameters for the stored procedure here
	@P_DriverID int = null,
	@P_Language nvarchar(10) = 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Declare @result table(
	TripPeriodFrom datetime,
	TripPeriodTo datetime,
	TripTo nvarchar(max),
	TripWith nvarchar(max) )

	insert into @result(TripPeriodFrom,TripPeriodTo,TripTo,TripWith)
	select TripPeriodFrom,TripPeriodTo,concat((select (case when @P_Language ='EN' then M_City.CityName else M_City.ArCityName end) 
		from M_City where M_City.CityID=V.City),(', '),(select case when V.Destination !=0 then (case when @P_Language ='EN' then T.TripDestinationENValue else T.TripDestinationARValue end) 
		else V.DestinationOthers end from M_TripDestination as T where T.TripDestinationID=V.Destination)), (
		select Up.EmployeeName from UserProfile as UP where UP.UserProfileId = V.Requestor )  from [dbo].[VehicleRequest] as V where (V.DriverID= @P_DriverID or V.TobeDrivenbyDriverID=@P_DriverID)
	  and (select Count(*) from Workflow as w where w.ReferenceNumber = V.ReferenceNumber and w.Status=212)>0

	select TripPeriodFrom,TripPeriodTo,TripTo as 'To', TripWith as 'With' from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DriverTripDaysPrint]    Script Date: 15-Feb-20 3:51:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DriverTripDays]    ******/
Create PROCEDURE [dbo].[Get_DriverTripDaysPrint] -- [Get_DriverTripDays] 26
	-- Add the parameters for the stored procedure here
	@P_DriverID int = null,
	@P_Language nvarchar(10) = 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Declare @result table(
	TripPeriodFrom datetime,
	TripPeriodTo datetime,
	TripTo nvarchar(max),
	TripWith nvarchar(max) )

	insert into @result(TripPeriodFrom,TripPeriodTo,TripTo,TripWith)
	select DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),TripPeriodFrom),DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),TripPeriodTo),
	concat((select (case when @P_Language ='EN' then M_City.CityName else M_City.ArCityName end) 
		from M_City where M_City.CityID=V.City),(', '),(select case when V.Destination !=0 then (case when @P_Language ='EN' then T.TripDestinationENValue else T.TripDestinationARValue end) 
		else V.DestinationOthers end from M_TripDestination as T where T.TripDestinationID=V.Destination)), (
		select Up.EmployeeName from UserProfile as UP where UP.UserProfileId = V.Requestor )  from [dbo].[VehicleRequest] as V where (V.DriverID= @P_DriverID or V.TobeDrivenbyDriverID=@P_DriverID)
	  and (select Count(*) from Workflow as w where w.ReferenceNumber = V.ReferenceNumber and w.Status=212)>0

	select TripPeriodFrom,TripPeriodTo,TripTo as 'To', TripWith as 'With' from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyResponsibleDepartmentID]    Script Date: 15-Feb-20 3:51:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_DutyResponsibleDepartmentID]
	@P_DutyTaskID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [ResponsibleDepartmentID] as TaskResponsibleDepartmentID,
	(select M.DepartmentName from [dbo].[M_Department] as M where M.DepartmentID= [ResponsibleDepartmentID]) as TaskResponsibleDepartmentName 
	from [dbo].[DutyTaskResponsibleDepartment] where  TaskID = @P_DutyTaskID and [DeleteFlag]=0;
END

GO
/****** Object:  StoredProcedure [dbo].[Get_DutyResponsibleUsersID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DutyResponsibleUsersID]
	@P_DutyTaskID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.[ResponsibleUsersID] as TaskResponsibleUsersID,(select [EmployeeName] from [dbo].[UserProfile] as b 
	where b.UserProfileId=a.[ResponsibleUsersID])as TaskResponsibleUsersName from [dbo].[DutyTaskResponsibleUsers] as a where  TaskID = @P_DutyTaskID
	and DeleteFlag=0;
END

GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--Get_DutyTaskByID--
CREATE PROCEDURE [dbo].[Get_DutyTaskByID] 
	@P_DutyTaskID int = null,
	@P_UserID int = 0
AS
BEGIN
	
	SET NOCOUNT ON;

	if((select [AssigneeID] from [dbo].[DutyTask] where TaskID = @P_DutyTaskID ) = @P_UserID)
	begin
		update [dbo].[DutyTask] set [IsRead]=1 where TaskID = @P_DutyTaskID
	end

	SELECT [TaskID],[ReferenceNumber],[SourceOU],[SourceName],[Title],[StartDate],[EndDate],[TaskDetails],[Priority],[RemindMeAt],[CreatedBy]
	,[CreatedDateTime],[UpdatedBy],[UpdatedDateTime],[LinkToMemo],[LinkToLetter],[Status],[AssigneeID],
	 [Status] as Status,([AssigneeID])
	  as AssigneeUserId, (select DepartmentID from [dbo].[UserProfile] where UserProfileId =[AssigneeID]) as AssigneeDepartmentId, DelegateAssignee,DeleteFlag as DeleteFlag,Country,City,Emirates
	  from  [dbo].[DutyTask] WHERE TaskID = @P_DutyTaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DutyTaskCommunicationHistory] --[Get_DutyTaskCommunicationHistory] 5,'AR'
@P_DutyTaskID int =0,
@P_Language nvarchar(10) = null

-- Add the parameters for the stored procedure here
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

select T.[CommunicationID],T.[TaskID],case when T.Action is not null then
(case when T.Action='Submit' then (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName ='Submitted By ')
+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.CreatedBy) 
when (T.Action='Delete' and T.DelegateUser is null) then (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName ='Deleted By ')+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.CreatedBy) 
when (T.Action='Completed' and T.DelegateUser is null) then (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName ='Completed By ')+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.CreatedBy) 
when (T.Action='Completed' and T.DelegateUser is not null) then ((select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName ='Completed By ')+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.DelegateUser) +(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName =' On behalf of ')+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.CreatedBy)) 
when T.Action='Close' then (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName ='Closed By ')+(select EmployeeName from UserProfile where DeleteFlag=0 and UserProfileId=T.CreatedBy)end)
else T.Message end as 'Message',T.[Action],T.[AttachmentGuid],T.[AttachmentName],T.CreatedBy as CreatedBy,
(select	case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= T.CreatedBy)
else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), (select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where DisplayName =' On behalf of '),
(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = T.CreatedBy )) end )as Creator,

T.[CreatedDateTime],'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Pierre-Person.jpg/220px-Pierre-Person.jpg' as Photo from [dbo].[DutyTaskCommunicationHistory] as T
where [TaskID] =@P_DutyTaskID order by T.[CreatedDateTime] 


-- Insert statements for procedure here
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskCreatorAndAssignee]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_DutyTaskCreatorAndAssignee]    ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskCreatorAndAssignee]-- [Get_DutyTaskCreatorAndAssignee]1,1,'a'
	-- Add the parameters for the stored procedure here
	@P_UserId int =0,
	@P_Type int = 0, -- If Type = 0 then Creator else Assignee
	@P_Language nvarchar(10)=null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	declare @result table(
	UserID int,
	UserName nvarchar(max));

	if(@P_Type = 0)
	Begin
		insert into @result
		SELECT 
		DT.[CreatedBy] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[CreatedBy])
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)	 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy)
		) 
	end

	if(@P_Type = 1)
	Begin
		insert into @result
		SELECT 
		DT.[AssigneeID] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[AssigneeID])
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)	 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy)
		) 
	end

	;With CTE_Duplicates as
   (select UserID , row_number() over(partition by UserID order by UserID ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1

   insert into @result
   select null, (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where LookupsID=197)

	select distinct* from @result where UserName!=''
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
--TaskEndDateGtActualdate-- red , grayNoOfNewTask-- green, greenTaskBTStartReminderDate --Yellow
--yellowTaskBTReminderEndDate -- vilot
CREATE PROCEDURE [dbo].[Get_DutyTaskDashboardCount] --[Get_DutyTaskDashboardCount] 1
	-- Add the parameters for the stored procedure here
	@P_UserID int =null
AS
BEGIN

	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @MyTask int = 0, @AssignedTask int =0, @TaskParticipations int =0, @NoOfNewTask int = 0, @TaskBTStartReminderDate int =0,
	@TaskBTReminderEndDate int =0,@TaskEndDateGtActualdate int =0, @InProgress int =0, @Completed int =0, @closed int =0


	declare @result table(
	Status nvarchar(255)	
	);

	insert into @result  
		SELECT DT.[Status] 
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when (DT.[Status] = 30 or DT.Status = 31 or DT.Status = 32) then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and (Status = 30 or Status = 31 or Status = 32)))
		 or (@P_UserID in (select DT.CreatedBy)
		)  and DeleteFlag <>1

	set @InProgress = (select count(*) from @result where Status =30)
		
	set @Completed = (select count(*) from @result where Status =31 )

	set @closed = (select count(*) from @result where Status =32)

	set @MyTask = (SELECT count(*)
					from [dbo].[DutyTask] as DT 
					where DeleteFlag <>1 and(
					(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))	
					or (@P_UserID in (select DelegateAssignee from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))))

	set @AssignedTask = (SELECT count(*)
					from [dbo].[DutyTask] as DT 
					where  DeleteFlag <>1 and  DT.CreatedBy=@P_UserID 
					)
									
	set @TaskParticipations = (SELECT count(*)
					from [dbo].[DutyTask] as DT 
					where DeleteFlag <>1 and (@P_UserID in (case when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] 
					where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID) end)) )

	
					--high

		set @NoOfNewTask = (	SELECT count(*)
		from [dbo].[DutyTask] as DT 
		where ((@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy) and  DT.[Status] = 31))  and DeleteFlag <>1
		 and DT.Priority =1)


	--set @NoOfNewTask = (select count(*) from [dbo].[DutyTask] as DT where @P_UserID = DT.[AssigneeID] and DT.[Status] = 30
	--								and (DT.[IsRead] = 0 or DT.[IsRead] is null)  )

					--medium

		set @TaskBTStartReminderDate = (SELECT count(*)
		from [dbo].[DutyTask] as DT 
		where ((@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy) and  DT.[Status] = 31))  and DeleteFlag <>1
		 and DT.Priority =2)

	--set @TaskBTStartReminderDate = (select count(*) from [dbo].[DutyTask] as DT where @P_UserID = DT.[AssigneeID] and DT.[Status] = 30
	--								and DT.[IsRead] = 1 and getdate()>DT.[StartDate] and getdate()<[RemindMeAt])

					--Low

		set @TaskBTReminderEndDate = (	SELECT count(*)
		from [dbo].[DutyTask] as DT 
		where ((@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy) and  DT.[Status] = 31))  and DeleteFlag <>1
		 and DT.Priority =3)

	--set @TaskBTReminderEndDate = (select count(*) from [dbo].[DutyTask] as DT where @P_UserID = DT.[AssigneeID] and DT.[Status] = 30
	--								and DT.[IsRead] = 1 and getdate()>DT.[RemindMeAt] and getdate()<[EndDate])

					--VeryLow

		set @TaskEndDateGtActualdate = (	SELECT count(*)
		from [dbo].[DutyTask] as DT 
		where ((@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy) and  DT.[Status] = 31))  and DeleteFlag <>1
		 and DT.Priority =0)

	--set @TaskEndDateGtActualdate = (select count(*) from [dbo].[DutyTask] as DT where @P_UserID = DT.[AssigneeID] and DT.[Status] = 30
	--								and DT.[IsRead] = 1 and getdate()>DT.[EndDate])


	select @MyTask as MyTask,@AssignedTask as AssignedTask,@TaskParticipations as TaskParticipations,@NoOfNewTask as NoOfNewTask
	,@TaskBTStartReminderDate as TaskBTStartReminderDate,@TaskBTReminderEndDate as TaskBTReminderEndDate,@TaskEndDateGtActualdate as TaskEndDateGtActualdate,
	@InProgress as TaskInprogress ,@closed as  TaskClosed , @Completed as TaskCompleted

END


/****** Object:  StoredProcedure [dbo].[Get_DutyTaskHistoryByID]    Script Date: 23-07-2019 07:50:09 ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DutyTaskHistoryByID]-- 49
	@P_DutyTaskID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[TaskID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from DutyTaskHistory where TaskID = @P_DutyTaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLabels]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_DutyTaskLabels] --49,1,'String'
	@P_DutyTaskID int = null,
	@P_Type int = 0,
	@P_UserID nvarchar(100)= null
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type is null or @P_Type =1 or @P_Type =0)
	SELECT distinct(Labels) from [dbo].[DutyTaskLabel] where [TaskID]= @P_DutyTaskID and DeleteFlag=0;

	if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	SELECT distinct(Labels) from [dbo].[DutyTaskLabel] where UserID= @P_UserID and DeleteFlag=0;
END 
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToLetter]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	 
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToLetter]  ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskLinkToLetter]
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_ReferenceNumber nvarchar(max)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
		declare @P_Link nvarchar(max) = null
		declare @P_ARLink nvarchar(max) = null

	declare @result table(
	ReferenceNumber nvarchar(255),
	LetterID nvarchar(255),
	LetterType int);

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max),
		FromEmail nvarchar(max)
		);

			insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateTOEmail,FromEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		declare @P_UserEmail nvarchar(max)=null;
		 SET @P_UserEmail =  (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)


		 --My Pending Incoming Actions	
		insert into @result 
		SELECT
		a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 and ( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail) and (w.Status=25 or w.Status=28)


	
		 --My Pending outgoing Actions
		 insert into @result 
		 SELECT a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		 FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 and ( @P_UserEmail = w.ToEmail or @P_UserEmail = W.DelegateTOEmail)
		 and( w.Status=19 or w.Status=22)
			
	
	
		--Outgoing Memos
		insert into @result
		SELECT a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or (@P_UserID = a.CreatedBy or w.Status=21)) AND(( (a.CreatedBy = @P_UserID and w.Status<>18) or  (w.FromEmail=@P_UserEmail and w.Status<>18 ) or
		@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))and w.Status!=22)

		insert into @result
		SELECT a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 AND (@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or 
		(w.FromEmail=@P_UserEmail and w.Status!=24 ) or @P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))
		and w.Status!=28)

	
	
		--Incoming Memos
		 insert into @result
		SELECT a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 --and w.ReferenceNumber=ISNULL(@P_RefNo,'')
		  and ((w.Status = 20 )and((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and DeleteFlag =0 and IsRedirect =0 )
		and ( (@P_UserID in (select UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=14 and DeleteFlag =0 )) ) )) )
  
		insert into @result
		SELECT a.[LetterReferenceID],a.LetterID,(case when (select RIGHT(a.LetterReferenceID,2)) = 'OL' then 1 else 0 end) as LetterType
		 FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0-- and w.ReferenceNumber=ISNULL(@P_RefNo,'')
		 and (w.Status = 26 or w.Status = 29) and (
   (@P_UserID in (select [UserID] from [dbo].[LettersInboundDestinationUsers] where [LetterID]=a.LetterID and DeleteFlag =0 ))) 
   
			
		
			
		select @P_Link = LetterID from @result where ReferenceNumber = @P_ReferenceNumber
select @P_ARLink = LetterType from @result where ReferenceNumber = @P_ReferenceNumber

;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1
		 --if((select count(*) from @result where ReferenceNumber = @P_ReferenceNumber)=0)
		 --set @P_ReferenceNumber = null

		 select LetterID as LetterID, ReferenceNumber as LetterReferenceNumber,LetterType as LetterType from @result where ReferenceNumber in (select value from string_split(@P_ReferenceNumber,','))

	end
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToLetterAndMemo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_DutyTaskLinkToLetterAndMemo] --49,1,'String'
	@P_TaskID int = null,
	@p_Type int =0   --  1 => Letter list 0=> Memo List
	
	
AS
BEGIN
	
	SET NOCOUNT ON;

		if((@P_TaskID is not null or @P_TaskID != 0) and @p_Type = 1)
	SELECT L.[LetterReferenceNo], (case when (select RIGHT(L.LetterReferenceNo,2)) = 'OL' 
	then (select Concat('rrcui/#/en/app/letter/outbound-view/',LetterID)  from [dbo].[LettersOutbound] where [LetterReferenceID]=L.LetterReferenceNo) 
	else (select  Concat('rrcui/#/en/app/letter/inbound-view/',LetterID)  from [dbo].[LettersInbound] where [LetterReferenceID]=L.LetterReferenceNo) end) as Link
	,(case when (select RIGHT(L.LetterReferenceNo,2)) = 'OL' 
	then (select Concat('rrcui/#/ar/app/letter/outbound-view/',LetterID)  from [dbo].[LettersOutbound] where [LetterReferenceID]=L.LetterReferenceNo) 
	else (select  Concat('rrcui/#/ar/app/letter/inbound-view/',LetterID)  from [dbo].[LettersInbound] where [LetterReferenceID]=L.LetterReferenceNo) end) as ARLink from [dbo].[DutyTaskLinkToLetter] as L where L.[TaskID]= @P_TaskID and DeleteFlag=0;

	if((@P_TaskID is not null or @P_TaskID != 0) and @p_Type = 2)
	SELECT M.[MemoReferenceNo],Concat('rrcui/#/en/app/letter/memo-view/',(select MemoID from [dbo].[Memo] where [ReferenceNumber]=M.[MemoReferenceNo] )) as Link,
	Concat('rrcui/#/ar/app/letter/memo-view/',(select MemoID from [dbo].[Memo] where [ReferenceNumber]=M.[MemoReferenceNo] )) as ARLink from [dbo].[DutyTaskLinkToMemo] AS M where M.[TaskID]= @P_TaskID and DeleteFlag=0;

	--if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	--SELECT distinct([OutgoingLetterReferenceNo]) from [dbo].[Letters_RelatedOutgoing] where [UserID]= @P_UserID and DeleteFlag=0;
END 

GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToLetterAndMemoAndMeeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToLetterAndMemoAndMeeting]    ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskLinkToLetterAndMemoAndMeeting] --49,1,'String'
	@P_TaskID int = null,
	@p_Type int =0   --  1 => Letter list 0=> Memo List	
AS
BEGIN
	
	SET NOCOUNT ON;

		if((@P_TaskID is not null or @P_TaskID != 0) and @p_Type = 1)
	SELECT L.[LetterReferenceNo], (case when (select RIGHT(L.LetterReferenceNo,2)) = 'OL' then 1 else 0 end) as LetterType,(case when (select RIGHT(L.LetterReferenceNo,2)) = 'OL' 
	then (select LetterID  from [dbo].[LettersOutbound] where [LetterReferenceID]=L.LetterReferenceNo) 
	else (select LetterID  from [dbo].[LettersInbound] where [LetterReferenceID]=L.LetterReferenceNo) end) as LetterID
   from [dbo].[DutyTaskLinkToLetter] as L where L.[TaskID]= @P_TaskID and DeleteFlag=0;

	if((@P_TaskID is not null or @P_TaskID != 0) and @p_Type = 2)
	SELECT M.[MemoReferenceNo],(select MemoID from [dbo].[Memo] where [ReferenceNumber]=M.[MemoReferenceNo] ) as MemoID from [dbo].[DutyTaskLinkToMemo] AS M where M.[TaskID]= @P_TaskID and DeleteFlag=0;

	if((@P_TaskID is not null or @P_TaskID != 0) and @p_Type = 3)
	SELECT M.[MeetingReferenceNo] as MeetingReferenceNumber,(select [MeetingID] from [dbo].[Meeting] where [ReferenceNumber]=M.[MeetingReferenceNo] ) as MeetingID from [dbo].[DutyTaskLinkToMeeting] AS M where M.[TaskID]= @P_TaskID and DeleteFlag=0;


	--if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	--SELECT distinct([OutgoingLetterReferenceNo]) from [dbo].[Letters_RelatedOutgoing] where [UserID]= @P_UserID and DeleteFlag=0;
END 
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToMeeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToMeeting]   ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskLinkToMeeting] -- 1,'008-2019-MTG,006-2019-MTG'
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_ReferenceNumber nvarchar(max)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
		declare @P_Link nvarchar(max) = null
		declare @P_ARLink nvarchar(max) = null

	declare @result table(
	ReferenceNumber nvarchar(255),
	MeetingID nvarchar(255));
  
		insert into @result
		SELECT [ReferenceNumber],a.[MeetingID]
		 FROM [dbo].[Meeting] a
		where a.DeleteFlag = 0  and (a.[CreatedBy]= @P_UserID
		or @P_UserID in (select [UserID] from [dbo].[MeetingInternalInvitees] where [MeetingID]= a.[MeetingID]))
		
   
			
		--select @P_Link = MeetingID from @result where ReferenceNumber = @P_ReferenceNumber
		 --if((select count(*) from @result where ReferenceNumber = @P_ReferenceNumber)=0)
		 --set @P_ReferenceNumber = null

		 ;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

		 select MeetingID as MeetingID, ReferenceNumber as MeetingReferenceNumber from @result where ReferenceNumber in (select value from string_split(@P_ReferenceNumber,','))

	end
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToMemo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_DutyTaskLinkToMemo]    ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskLinkToMemo] --1,'009-2019-M,008-2019-M'
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_ReferenceNumber nvarchar(max)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
		declare @P_Link nvarchar(max) = null
		declare @P_ARLink nvarchar(max) = null

		declare @result table(
		ReferenceNumber nvarchar(255),
		MemoID nvarchar(255)
		);


		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		FromEmail nvarchar(max),
		DelegateToEmail nvarchar(max)
		);

			insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,FromEmail,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		declare @P_UserEmail nvarchar(max)=null;
		 SET @P_UserEmail =  (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

		--MyPending Action
		insert into @result
		SELECT  a.ReferenceNumber,a.MemoID
		 FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
		 where a.DeleteFlag = 0 and ( @P_UserEmail = w.ToEmail
	or 
	  @P_UserEmail = W.DelegateTOEmail)
	 and ( w.Status=2 or w.Status=5)
	
		----Outgoing Memos
		insert into @result
		SELECT  a.ReferenceNumber,a.MemoID
		FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
		where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or (@P_UserID = a.CreatedBy and status !=5)) AND(( (a.CreatedBy = @P_UserID and w.Status<>1) or (w.FromEmail=@P_UserEmail and w.Status<>1 )
	   or	@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.ReferenceNumber and Status!=3)))


		--Incoming Memos
			insert into @result
		 SELECT a.ReferenceNumber,a.MemoID
		 FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
		 where a.DeleteFlag = 0 and w.Status = 3  and (
		 (@P_UserID in (select [UserID] from [dbo].[MemoDestinationUsers] where[MemoID]=a.MemoID and DeleteFlag =0 ))
		 or (@P_UserID in (select [UserID] from [dbo].[ShareparticipationUsers] 
		 where [ServiceID]=a.MemoID and [Type] ='Memo' )))

		  select @P_Link = MemoID from @result where ReferenceNumber = @P_ReferenceNumber
		  
		  
	 ;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

		 select MemoID as MemoID, ReferenceNumber as MemoReferenceNumber  from   @result where ReferenceNumber in(select value from string_split(@P_ReferenceNumber,','))
END
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_DutyTaskList] -- [Get_DutyTaskList] 1,10,1
-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int = 0,
	@P_Status nvarchar(max) = null,
	@P_Creator nvarchar(max) = null,
	@P_Assignee nvarchar(max) = null,
	@P_Priority nvarchar(max) =null,
	@P_DueDateFrom datetime = null,
	@P_DueDateTo datetime =null,
	@P_CreationDateFrom datetime =null,
	@P_CreattionDateTo datetime =null,
	@P_lable nvarchar(max) = null,
	@P_LinkTo nvarchar(max) = null,
	@P_participants nvarchar(100) = null,
	@P_SmartSearch Nvarchar(max) = null,
	@P_Method int = 0,
	@P_Language nvarchar(10) = '',

	@P_Type int =2  -- @Type = 0 then list all items else if @P_Type =1 Then list all Pending task Assigneed to him else if @P_Type = 2 then list all task created by him
					-- else if @P_Type = 3 then list all request that he has been a responsible person
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	TaskID int,
	TaskReferenceNumber nvarchar(255),
	Title nvarchar(255),
	Creator nvarchar(max),
	SourceOU nvarchar(max),
	Assignee nvarchar(max),
	AssigneeDepartment nvarchar(max),
	Details nvarchar(max),
	Status nvarchar(255),
	Priority nvarchar(255),
	CreationDate datetime,
	DueDate datetime,
	LastUpdate datetime,
	Participants nvarchar(100),
	RemindMeAt datetime,
	DeleteFlag bit

	);



    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	if(@P_Type = 0)
	begin
		insert into @result  
		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
		 Dt.TaskDetails,
		(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 )),
		DT.RemindMeAt,DT.DeleteFlag
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when DT.[Status] = 30 then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)
		 
		end)) or
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and [Status]=30))
		 or (@P_UserID in (select DT.CreatedBy)
		)  and DeleteFlag <>1
	end

	if(@P_Type =1)
	begin
		insert into @result  
		SELECT row_number()over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
		 Dt.TaskDetails,
		(select case when Dt.DeleteFlag=0 then (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') else (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =193) end )as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 )),
		DT.RemindMeAt,DT.DeleteFlag
		
		from [dbo].[DutyTask] as DT 
		where 
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and( [Status]=30 or status =31 or Status=32 or Status=193) ))or (@P_UserID in (select DelegateAssignee from [dbo].[DutyTask] where [TaskID]=DT.TaskID and ( [Status]=30 or status =31 or Status=193)))
		--and DeleteFlag <>1	
	end

	if(@P_Type = 2)
	begin
		insert into @result  
		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
		 Dt.TaskDetails,
		(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 )),
		Dt.RemindMeAt,DT.DeleteFlag
		from [dbo].[DutyTask] as DT 
		where  @P_UserID =  DT.CreatedBy and DeleteFlag <>1
		
	end

	if(@P_Type = 3)
	begin
		insert into @result  
		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
		 Dt.TaskDetails,
		(select case when Dt.DeleteFlag=0 then (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') else (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =193) end )as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 )),
		Dt.RemindMeAt,DT.DeleteFlag
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when( DT.[Status] = 30 or DT.Status=31 or DT.Status=32 or DT.Status=193) then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)	 
		end))  --and DeleteFlag <>1
	end



	if(@P_Priority is not null or @P_Priority !='')
	begin
		delete from @result where Priority != @P_Priority or Priority is null
	end

	 if(@P_CreationDateFrom is not null)
	 delete from @result where cast( CreationDate as date) < cast(@P_CreationDateFrom as date)

	 if(@P_CreattionDateTo is not null)
	 delete from @result where cast(CreationDate as date) > cast(@P_CreattionDateTo as date)

	 if(@P_DueDateFrom is not null )
	 delete from @result where cast(DueDate  as date) < cast(@P_DueDateFrom as date) or DueDate is null

	 if(@P_DueDateTo is not null)
	 delete from @result where cast(DueDate as date) > cast(@P_DueDateTo as date)or DueDate is null

	 if(@P_Creator is not null or @P_Creator !='')
	begin
		delete from @result where Creator != @P_Creator
	end
	if(@P_Assignee is not null or @P_Assignee !='')
	begin
		delete from @result where Assignee !=  @P_Assignee
	end

	if(@P_Status is not null or @P_Status !='')
	begin
		delete from @result where Status !=  @P_Status
	end

	  if(@P_participants ='yes')
	 delete from @result where Participants =0

	  if(@P_participants ='no')
	 delete from @result where Participants !=0

	  if(@P_LinkTo is not null)	
	delete r from @result as r  where (
	 ((select count(l.[LetterReferenceNo]) from [dbo].[DutyTaskLinkToLetter]as L  where L.[TaskID] =r.TaskID and l.LetterReferenceNo=@P_LinkTo)+
	 (select count(M.[MeetingReferenceNo]) from [dbo].[DutyTaskLinkToMeeting] as M  where M.[TaskID] =r.TaskID and M.[MeetingReferenceNo]=@P_LinkTo)+
	 (select count(m.[MemoReferenceNo]) from [dbo].[DutyTaskLinkToMemo] as m  where m.[TaskID] =r.TaskID and m.MemoReferenceNo=@P_LinkTo))=0)

	--if(@P_lable is not null)
	 --delete from @result  where (@P_lable not in (select l.[Labels] from [dbo].[DutyTaskLabel]as L  where L.[TaskID] =TaskID))
	if(@P_lable is not null)
	delete from @Result where TaskID not in (select  TaskID from @Result as a where(select count(*) from  [dbo].[DutyTaskLabel] as L 
	where L.Labels  like '%'+@P_lable+'%'  and L.TaskID = a.TaskID and  [DeleteFlag] != 1)>0)



	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from @result as R where 
		((TaskReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		  (Status  like '%'+@P_SmartSearch+'%') or 
		  (Creator  like '%'+@P_SmartSearch+'%') or (Assignee  like '%'+@P_SmartSearch+'%')or (AssigneeDepartment  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(CreationDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(DueDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(LastUpdate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Priority  like '%'+@P_SmartSearch+'%') or
		(((select count(K.Labels) from DutyTaskLabel as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and K.Labels like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleDepartmentID) from DutyTaskResponsibleDepartment as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID=k.ResponsibleDepartmentID) like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleUsersID) from DutyTaskResponsibleUsers as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and(select EmployeeName from UserProfile where UserProfileId=k.ResponsibleUsersID) like '%'+@P_SmartSearch+'%')>0)) or
		 (SourceOU like '%'+@P_SmartSearch+'%') or (Details like '%'+@P_SmartSearch+'%') or   ((SELECT  CONVERT(nvarchar(10), cast(RemindMeAt as date), 103))  like '%'+@P_SmartSearch+'%') or
		 (((select count(K.LetterReferenceNo) from DutyTaskLinkToLetter as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.LetterReferenceNo like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.MeetingReferenceNo) from DutyTaskLinkToMeeting as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MeetingReferenceNo like '%'+@P_SmartSearch+'%')>0)) or 
		 (((select count(K.MemoReferenceNo) from DutyTaskLinkToMemo as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MemoReferenceNo like '%'+@P_SmartSearch+'%')>0))or
		((select (case when @P_Language='EN' then  EmiratesName else ArEmiratesName end) from M_Emirates as d join DutyTask dt on d.EmiratesID=dt.Emirates where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
		((select (case when @P_Language='EN' then  CountryName else ArCountryName end) from M_Country as d join DutyTask dt on d.CountryID=dt.Country  where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
((select (case when dt.City like '%[^0-9.]%' then (select l.City from DutyTask l where l.TaskID=R.TaskID)  else (select (case when @P_Language='EN' then  CityName else ArCityName end)
from M_City as d join DutyTask t on d.CityID=t.City  where t.TaskID=R.TaskID)  end) from DutyTask dt where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%')
       
		)

		
		 and id between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as R where 
		((TaskReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		  (Status  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') or (Assignee  like '%'+@P_SmartSearch+'%')or (AssigneeDepartment  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(CreationDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(DueDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(LastUpdate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Priority  like '%'+@P_SmartSearch+'%')or
		(((select count(K.Labels) from DutyTaskLabel as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and K.Labels like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleDepartmentID) from DutyTaskResponsibleDepartment as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID=k.ResponsibleDepartmentID) like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleUsersID) from DutyTaskResponsibleUsers as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and(select EmployeeName from UserProfile where UserProfileId=k.ResponsibleUsersID) like '%'+@P_SmartSearch+'%')>0)) or
		 (SourceOU like '%'+@P_SmartSearch+'%') or (Details like '%'+@P_SmartSearch+'%') or   ((SELECT  CONVERT(nvarchar(10), cast(RemindMeAt as date), 103))  like '%'+@P_SmartSearch+'%')  or
		 (SourceOU like '%'+@P_SmartSearch+'%') or (Details like '%'+@P_SmartSearch+'%') or   ((SELECT  CONVERT(nvarchar(10), cast(RemindMeAt as date), 103))  like '%'+@P_SmartSearch+'%') or
		 (((select count(K.LetterReferenceNo) from DutyTaskLinkToLetter as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.LetterReferenceNo like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.MeetingReferenceNo) from DutyTaskLinkToMeeting as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MeetingReferenceNo like '%'+@P_SmartSearch+'%')>0)) or 
		 (((select count(K.MemoReferenceNo) from DutyTaskLinkToMemo as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MemoReferenceNo like '%'+@P_SmartSearch+'%')>0))or
	((select (case when @P_Language='EN' then  EmiratesName else ArEmiratesName end) from M_Emirates as d join DutyTask dt on d.EmiratesID=dt.Emirates where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
		((select (case when @P_Language='EN' then  CountryName else ArCountryName end) from M_Country as d join DutyTask dt on d.CountryID=dt.Country  where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
((select (case when dt.City like '%[^0-9.]%' then (select l.City from DutyTask l where l.TaskID=R.TaskID)  else (select (case when @P_Language='EN' then  CityName else ArCityName end)
from M_City as d join DutyTask t on d.CityID=t.City  where t.TaskID=R.TaskID)  end) from DutyTask dt where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%')
          )
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (select  row_number() over (Order By  TaskReferenceNumber) as slno,* from @result) as m where m.slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DutyTaskReport]    ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskReport] -- [Get_DutyTaskReport] 1,'','','','',
-- Add the parameters for the stored procedure here
	
	@P_UserID int = 0,
	@P_Status nvarchar(max) = null,
	@P_Creator nvarchar(max) = null,
	@P_Assignee nvarchar(max) = null,
	@P_Priority nvarchar(max) =null,
	@P_DueDateFrom datetime = null,
	@P_DueDateTo datetime =null,
	@P_CreationDateFrom datetime =null,
	@P_CreattionDateTo datetime =null,
	@P_lable nvarchar(max) = null,
	@P_LinkTo nvarchar(max) = null,
	@P_participants nvarchar(100) = null,
	@P_SmartSearch Nvarchar(max) = null,
	@P_Language nvarchar(10) ='EN'
	 -- @Type = 0 then list all items else if @P_Type =1 Then list all Pending task Assigneed to him else if @P_Type = 2 then list all task created by him
					-- else if @P_Type = 2 then list all request that he has been a responsible person
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	TaskID int,
	TaskReferenceNumber nvarchar(255),
	Title nvarchar(255),
	Creator nvarchar(max),
	SourceOU nvarchar(max),
	Assignee nvarchar(max),
	AssigneeDepartment nvarchar(max),
	Details nvarchar(max),
	Status nvarchar(255),
	Priority nvarchar(255),
	CreationDate datetime,
	DueDate datetime,
	LastUpdate datetime,
	Participants nvarchar(100),
    RemindMeAt datetime,
    ParticipantUsers nvarchar(100)

	);



    -- Insert statements for procedure here
	declare @P_UserEmail nvarchar(max)=null;

	
	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	

	
		insert into @result  

		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
  ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
				 Dt.TaskDetails,
		(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 ))
		, DT.RemindMeAt,(select STUFF((SELECT ',' + 
		CAST(EmployeeName AS VARCHAR(max)) AS [text()]
		 FROM  [dbo].[UserProfile] where[UserProfileId]  in 
		(select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.TaskID and (DeleteFlag =0 or DeleteFlag is null))
		FOR XML PATH('')), 1, 1, NULL) )
		from [dbo].[DutyTask] as DT 
		where 
		(@P_UserID in (select [AssigneeID] from [dbo].[DutyTask] where [TaskID]=DT.TaskID and( [Status]=30 or status =31 or Status=32) ))or (@P_UserID in (select DelegateAssignee from [dbo].[DutyTask] where [TaskID]=DT.TaskID and ( [Status]=30 or status =31)))
		and DeleteFlag =0
	
		insert into @result  
	
		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
		DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
		 DT.TaskDetails,
		(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 ))
		, DT.RemindMeAt,(select STUFF((SELECT ',' + 
		CAST(EmployeeName AS VARCHAR(max)) AS [text()]
		 FROM  [dbo].[UserProfile] where[UserProfileId]  in 
		(select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.TaskID and (DeleteFlag =0 or DeleteFlag is null))
		FOR XML PATH('')), 1, 1, NULL) )
		from [dbo].[DutyTask] as DT 
		where  @P_UserID =  DT.CreatedBy and DeleteFlag =0
		
	

	
		insert into @result  
		SELECT row_number() over (Order By (case when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) then 3 
									when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=1) then 2
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) then 1 
									 when Dt.priority=(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=3) then 0 end)desc, DT.status asc, DT.EndDate asc) as slno,
                DT.[TaskID],
		DT.[ReferenceNumber],
		DT.[Title],
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[CreatedBy] ),
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = DT.SourceOU) as SourceOU ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId=DT.[AssigneeID]),
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID in (select DepartmentID from UserProfile where UserProfileId= dt.AssigneeID)) as AssigneeDepartment ,
			 Dt.TaskDetails,
		(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID =DT.[Status] AND Category = 'Status') as Status,	
		(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= DT.Priority)as Priority,
		DT.[CreatedDateTime],
		DT.[EndDate],
		DT.[UpdatedDateTime],
		(select count(*)  from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and ([DeleteFlag] is null or [DeleteFlag] = 0 )),
	DT.RemindMeAt,(select STUFF((SELECT ',' + 
		CAST(EmployeeName AS VARCHAR(max)) AS [text()]
		 FROM  [dbo].[UserProfile] where[UserProfileId]  in 
		(select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.TaskID and (DeleteFlag =0 or DeleteFlag is null))
		FOR XML PATH('')), 1, 1, NULL) )	
		from [dbo].[DutyTask] as DT 
		where (@P_UserID in (case 
		when( DT.[Status] = 30 or DT.Status=31 or DT.Status=32) then (select [ResponsibleUsersID] from [dbo].[DutyTaskResponsibleUsers] where [TaskID] = DT.[TaskID] and [ResponsibleUsersID]=@P_UserID)	 
		end))  and DeleteFlag =0



		   ;With CTE_Duplicates as
   (select   row_number() over(partition by TaskReferenceNumber order by TaskReferenceNumber ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1


	if(@P_Priority !=''and @P_Priority is not null )
	begin
		 delete from @result where Priority != @P_Priority or Priority is null
	end

	 if(@P_CreationDateFrom is not null or @P_CreationDateFrom !='')
	 delete from @result where cast( CreationDate as date) < cast(@P_CreationDateFrom as date)

	 if(@P_CreattionDateTo is not null or @P_CreattionDateTo !='')
	 delete from @result where cast(CreationDate as date) > cast(@P_CreattionDateTo as date)

	 if(@P_DueDateFrom is not null or @P_DueDateFrom !='')
	 delete from @result where cast( DueDate as date) < cast(@P_DueDateFrom as date) or DueDate is null

	 if(@P_DueDateTo is not null or @P_DueDateTo !='' )
	 delete from @result where cast(DueDate as date) > cast(@P_DueDateTo as date)or DueDate is null

	 if( @P_Creator !=''and @P_Creator is not null)
	begin
		delete from @result where Creator != @P_Creator
	end
	if( @P_Assignee !='' and @P_Assignee is not null)
	begin
		delete from @result where Assignee !=  @P_Assignee
	end
	
if( @P_Status !='' and @P_Status is not null)
	begin
		delete from @result where Status !=  @P_Status
	end
	  if(@P_participants ='yes' and @P_participants !='')
	 delete from @result where Participants =0

	  if(@P_participants ='no'  and @P_participants !='')
	 delete from @result where Participants !=0

	  if(@P_LinkTo is not null  and @P_LinkTo !='')
	delete r from @result as r  where (
	 ((select count(l.[LetterReferenceNo]) from [dbo].[DutyTaskLinkToLetter]as L  where L.[TaskID] =r.TaskID and l.LetterReferenceNo=@P_LinkTo)+
	 (select count(M.[MeetingReferenceNo]) from [dbo].[DutyTaskLinkToMeeting] as M  where M.[TaskID] =r.TaskID and M.[MeetingReferenceNo]=@P_LinkTo)+
	 (select count(m.[MemoReferenceNo]) from [dbo].[DutyTaskLinkToMemo] as m  where m.[TaskID] =r.TaskID and m.MemoReferenceNo=@P_LinkTo))=0)

	--if(@P_lable is not null)
	-- delete from @result  where (@P_lable not in (select l.[Labels] from [dbo].[DutyTaskLabel]as L  where L.[TaskID] =TaskID))
	if(@P_lable is not null and @P_lable !='')
	delete from @Result where TaskID not in (select  TaskID from @Result as a where(select count(*) from  [dbo].[DutyTaskLabel] as L 
	where L.Labels  like '%'+@P_lable+'%'  and L.TaskID = a.TaskID and  [DeleteFlag] != 1)>0)



	 if(@P_SmartSearch is not null and @P_SmartSearch !='')
	 begin
		select * from @result as R where 
		((TaskReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		  (Status  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') or (Assignee  like '%'+@P_SmartSearch+'%') or (AssigneeDepartment  like '%'+@P_SmartSearch+'%') or
		  ((SELECT  CONVERT(nvarchar(10), cast(CreationDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(DueDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  ((SELECT  CONVERT(nvarchar(10), cast(LastUpdate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Priority  like '%'+@P_SmartSearch+'%') or
		(((select count(K.Labels) from DutyTaskLabel as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and K.Labels like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleDepartmentID) from DutyTaskResponsibleDepartment as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID=k.ResponsibleDepartmentID) like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.ResponsibleUsersID) from DutyTaskResponsibleUsers as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and(select EmployeeName from UserProfile where UserProfileId=k.ResponsibleUsersID) like '%'+@P_SmartSearch+'%')>0)) or
 (SourceOU like '%'+@P_SmartSearch+'%') or (Details like '%'+@P_SmartSearch+'%') or   ((SELECT  CONVERT(nvarchar(10), cast(RemindMeAt as date), 103))  like '%'+@P_SmartSearch+'%') or
		 (((select count(K.LetterReferenceNo) from DutyTaskLinkToLetter as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.LetterReferenceNo like '%'+@P_SmartSearch+'%')>0)) or
		 (((select count(K.MeetingReferenceNo) from DutyTaskLinkToMeeting as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MeetingReferenceNo like '%'+@P_SmartSearch+'%')>0)) or 
		 (((select count(K.MemoReferenceNo) from DutyTaskLinkToMemo as K where K.TaskID=R.TaskID and (K.DeleteFlag=0 or K.DeleteFlag is null)
		 and k.MemoReferenceNo like '%'+@P_SmartSearch+'%')>0))or
	((select (case when @P_Language='EN' then  EmiratesName else ArEmiratesName end) from M_Emirates as d join DutyTask dt on d.EmiratesID=dt.Emirates where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
		((select (case when @P_Language='EN' then  CountryName else ArCountryName end) from M_Country as d join DutyTask dt on d.CountryID=dt.Country  where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%') or
((select (case when dt.City like '%[^0-9.]%' then (select l.City from DutyTask l where l.TaskID=R.TaskID)  else (select (case when @P_Language='EN' then  CityName else ArCityName end)
from M_City as d join DutyTask t on d.CityID=t.City  where t.TaskID=R.TaskID)  end) from DutyTask dt where dt.TaskID=R.TaskID)like '%'+@P_SmartSearch+'%')
         
		 )

	 end

	 if(@P_SmartSearch is null  or @P_SmartSearch = '')
	 select * from @result 
	 End 

GO
/****** Object:  StoredProcedure [dbo].[Get_DutyTaskResponsibleUsersID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_DutyTaskResponsibleUsersID]    ******/
CREATE PROCEDURE [dbo].[Get_DutyTaskResponsibleUsersID]
	@P_DutyTaskID int = 1
AS
BEGIN
	
	SET NOCOUNT ON;
	declare  @result table(
	TaskResponsibleUsersID int,
	TaskResponsibleUsersName nvarchar(255)
	)
	insert into @result
	

	SELECT a.[ResponsibleUsersID] as TaskResponsibleUsersID,(select [EmployeeName] from [dbo].[UserProfile] as b 
	where b.UserProfileId=a.[ResponsibleUsersID])as TaskResponsibleUsersName from
	[dbo].[DutyTaskResponsibleUsers] as a where  TaskID = @P_DutyTaskID
	and DeleteFlag=0;
	insert into @result
	SELECT a.CreatedBy as TaskResponsibleUsersID,(select [EmployeeName] from [dbo].[UserProfile] as b 
	where b.UserProfileId=a.CreatedBy)as TaskResponsibleUsersName from
	[dbo].DutyTask as a where  TaskID = @P_DutyTaskID
	and DeleteFlag=0;
	insert into @result
	SELECT a.AssigneeID as TaskResponsibleUsersID,(select [EmployeeName] from [dbo].[UserProfile] as b 
	where b.UserProfileId=a.AssigneeID)as TaskResponsibleUsersName from
	[dbo].DutyTask as a where  TaskID = @P_DutyTaskID
	and DeleteFlag=0;

	;With CTE_Duplicates as
   (select  row_number() over(partition by TaskResponsibleUsersID order by TaskResponsibleUsersID ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1

	select TaskResponsibleUsersID, TaskResponsibleUsersName from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Event]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Event]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Event] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_EventByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_EventByID]
	@P_EventID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Event] where DeleteFlag=0 and EventID = @P_EventID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_EventList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_EventList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [EventID]) as 
	slno, *
	from [dbo].[Event] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_GiftByID]
	@P_GiftID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	GiftID int ,
	ReferenceNumber nvarchar(255),
	GiftType int,
	RecievedFromOrganization  nvarchar(255),
	RecievedFromName  nvarchar(255),
	RecievedDate datetime,
	PurchasedBy int ,
	PurchasedToName  nvarchar(255),
	PurchasedToOrganisation   nvarchar(255),
	IsSend bit,
	CreatedBy int,
	Status int,
	CreatedDateTime datetime,
	UpdatedBy int,
	UpdatedDateTime datetime
	);

		insert into @result
	SELECT G.GiftID,G.ReferenceNumber,G.GiftType,G.ReceivedFromOrganization,G.ReceivedFromName,G.ReceivedDate,
		   G.PurchasedBy,G.PurchasedToName,G.PurchasedToOrganization
		   ,G.IsSend,G.CreatedBy,G.Status,G.CreatedDateTime,G.UpdatedBy,G.UpdatedDateTime from [dbo].[Gift] as G where DeleteFlag=0 and GiftID = @P_GiftID

	select * from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_GiftCount] 
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_Type int =1
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON; 
		select count(*) from Gift
		where  GiftType = @P_Type and CreatedBy = @P_UserID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftDelvieryNoteByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_GiftDelvieryNoteByID]
	@P_GiftID int = null,
	@P_Language nvarchar(10)= null
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	GiftID int ,
	ReferenceNumber nvarchar(255),
	GiftType nvarchar(255),
	RecievedFromOrganization  nvarchar(255),
	RecievedFromName  nvarchar(255),
	RecievedDate datetime,
	PurchasedBy nvarchar(255) ,
	PurchasedToName  nvarchar(255),
	PurchasedToOrganisation   nvarchar(255),
	IsSend bit,
	CreatedBy  nvarchar(255),
	Status int,
	CreatedDateTime datetime,
	UpdatedBy  nvarchar(255),
	UpdatedDateTime datetime
	);

	insert into @result
	SELECT G.GiftID,G.ReferenceNumber,(select (case when @P_Language ='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='GiftType' and Module= GiftType),G.ReceivedFromOrganization,G.ReceivedFromName,G.ReceivedDate,
		   (select EmployeeName from UserProfile where UserProfileID=G.PurchasedBy),G.PurchasedToName,G.PurchasedToOrganization
		   ,G.IsSend, (select EmployeeName from UserProfile where UserProfileID=G.CreatedBy),G.Status,G.CreatedDateTime,
		   (select EmployeeName from UserProfile where UserProfileID=G.UpdatedBy),G.UpdatedDateTime from [dbo].[Gift] as G where DeleteFlag=0 and GiftID = @P_GiftID

	select * from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_GiftHistoryByID]
	@P_GiftID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT [HistoryID],GiftID,[Action], (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[GiftHistory] where GiftID = @P_GiftID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_GiftList]   ******/
CREATE PROCEDURE [dbo].[Get_GiftList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_ReceivedPurchasedBy nvarchar(max)=null,
	@P_Status int =0,
	@P_GiftType  nvarchar(max) =0,
	@P_SmartSearch nvarchar(max) =  null,
	@P_Method int =0,
	@P_UserID int =0,
	@P_Language nvarchar(10)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@P_GiftType = 'All')
	set @P_GiftType = null

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @Result table(
	GiftID int,
	ReferenceNumber nvarchar(255),
	GiftType nvarchar(255),
	PurchasedBy nvarchar(255),
	Status nvarchar(255)
	);

	insert into @Result
		select GiftID,ReferenceNumber,(select (case when @P_Language ='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='GiftType' and Module= GiftType),
		case when GiftType = 2 then (select EmployeeName from dbo.UserProfile where UserProfileId = PurchasedBy) 
		when GiftType = 1 then ReceivedFromName else null end,
		(select  (case when @P_Language = 'AR' then L.ArDisplayName else L.DisplayName end) from dbo.M_Lookups as L where L.LookupsID= Status) from Gift
		where Status = (case when @P_Status !=0 then @P_Status else Status end) and CreatedBy = @P_UserID

	if(@P_ReceivedPurchasedBy !='')
	begin
		delete from @Result where PurchasedBy not like '%'+@P_ReceivedPurchasedBy+'%' or PurchasedBy is null
	end

	if(@P_GiftType !=0)
	begin
	
		delete from @Result where GiftType != (select (Case when @P_Language='EN'then DisplayName else ArDisplayname end)
												 from dbo.M_Lookups where Module =@P_GiftType and Category ='GiftType')
	end

	if(@P_Method = 0 and @P_SmartSearch is null)
		select count(*) from @Result

	if(@P_Method = 1 and @P_SmartSearch is null)
	begin
		select * from (select row_number() over(Order By GiftID desc) as 
		slno, *
		from @Result )m where slno between @StartNo and @EndNo 
	end

	if(@P_Method = 0 and @P_SmartSearch is not null)
		select count(*) from @Result as g where (ReferenceNumber  like '%'+@P_SmartSearch+'%') 
		or (GiftType  like '%'+@P_SmartSearch+'%') or (PurchasedBy  like '%'+@P_SmartSearch+'%')  
		or (Status  like '%'+@P_SmartSearch+'%') or ((select a.PurchasedBy from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%') or ((select a.PurchasedToName from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
		or ((select a.PurchasedToOrganization from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')or ((select a.ReceivedFromName from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
		or ((select a.ReceivedFromOrganization from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(a.ReceivedDate as date), 103) from Gift as a where a.GiftID=g.GiftID)  like '%'+@P_SmartSearch+'%') 
			
	
		 

	if(@P_Method = 1 and @P_SmartSearch is not null)
	begin
		select * from (select row_number() over(Order By GiftID desc) as 
		slno, *
		from @Result as g where ((ReferenceNumber  like '%'+@P_SmartSearch+'%') 
		or (GiftType  like '%'+@P_SmartSearch+'%') or (PurchasedBy  like '%'+@P_SmartSearch+'%')  
		or (Status  like '%'+@P_SmartSearch+'%') or ((select a.PurchasedBy from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%') or ((select a.PurchasedToName from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
		or ((select a.PurchasedToOrganization from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')or ((select a.ReceivedFromName from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
		or ((select a.ReceivedFromOrganization from Gift as a where a.GiftID=g.GiftID) like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(a.ReceivedDate as date), 103) from Gift as a where a.GiftID=g.GiftID)  like '%'+@P_SmartSearch+'%') 
		
		) )m where slno between @StartNo and @EndNo 
	end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_GiftReportList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_GiftReportList]    Script Date: 11/9/2019 10:00:14 PM ******/
CREATE PROCEDURE [dbo].[Get_GiftReportList] 
	-- Add the parameters for the stored procedure here
	@P_ReceivedPurchasedBy nvarchar(max)=null,
	@P_Status int =0,
	@P_GiftType int =0,
	@P_SmartSearch nvarchar(max) = null,
	@P_UserID int =17,
	@P_Language nvarchar(10) ='EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	

	declare @Result table(
	GiftID int,
	ReferenceNumber nvarchar(255),
	GiftType nvarchar(255),
	PurchasedBy nvarchar(255),
	Status nvarchar(255),
	CreatedBy nvarchar(255)
	);

	insert into @Result
		select GiftID,ReferenceNumber,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups
		 where Category='GiftType' and Module= GiftType),
		case when GiftType = 2 then (select EmployeeName from dbo.UserProfile where UserProfileId = PurchasedBy) 
		when GiftType = 1 then ReceivedFromName else null end,
		(select (case when @P_Language = 'EN' then L.DisplayName else L.ArDisplayName end) from dbo.M_Lookups as L where L.LookupsID= Status),
		(select EmployeeName from dbo.UserProfile where UserProfileId = Gift.CreatedBy) from Gift
		where Status = (case when @P_Status !=0 then @P_Status else Status end) and CreatedBy = @P_UserID

	if(@P_ReceivedPurchasedBy != '')
	begin
		delete from @Result where PurchasedBy not like '%'+@P_ReceivedPurchasedBy+'%' or PurchasedBy is null
	end

	if(@P_GiftType !=0)
	begin
		if(@P_GiftType = 1)
		delete from @Result where GiftType!=(select (Case when @P_Language='EN'then DisplayName else ArDisplayname end) 
		from dbo.M_Lookups where Module =@P_GiftType and Category ='GiftType') 
		if(@P_GiftType =2)
		delete from @Result where GiftType != (select (Case when @P_Language='EN'then DisplayName else ArDisplayname end) 
		from dbo.M_Lookups where Module =@P_GiftType and Category ='GiftType')  
	end

	

	if(@P_SmartSearch is null)
	begin
		select GiftID, ReferenceNumber,GiftType,PurchasedBy as 'RecievedFrom/PurchasedBy', Status,CreatedBy from 
		 @Result order by GiftID desc
	end

	
	if(@P_SmartSearch is not null)
	begin
		select  GiftID,ReferenceNumber,GiftType,PurchasedBy as 'RecievedFrom/PurchasedBy', Status,CreatedBy from (select row_number() over(Order By GiftID) as 
		slno, *
		from @Result as g where ((ReferenceNumber  like '%'+@P_SmartSearch+'%') 
		or (GiftType  like '%'+@P_SmartSearch+'%') or (PurchasedBy  like '%'+@P_SmartSearch+'%')  
		or (Status  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(a.ReceivedDate as date), 103) from Gift as a where a.GiftID=g.GiftID)  like '%'+@P_SmartSearch+'%') ) )m 
	end

END
GO
/****** Object:  StoredProcedure [dbo].[Get_HardwareMovement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HardwareMovement]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[HardwareMovement] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_HardwareMovementByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HardwareMovementByID]
	@P_HardwareMovementID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[HardwareMovement] where DeleteFlag=0 and HardwareMovementID = @P_HardwareMovementID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_HardwareMovementList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HardwareMovementList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HardwareMovementID]) as 
	slno, *
	from [dbo].[HardwareMovement] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_HomeModulesCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_HomeModulesCount]   ******/
CREATE PROCEDURE [dbo].[Get_HomeModulesCount] -- Get_HomeModulesCount 2
	-- Add the parameters for the stored procedure here
	@P_UserID int = 0
	
AS
BEGIN

	--Circular = 1, Meeting = 2, Letter = 3, Duty Task = 4, Memo = 5
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

declare @Memo_Count int = 0, @Letters_Count int = 0, @DutyTask_Count int = 0, @Circular_Count int = 0, @Meeting_Count int = 0, 
@NextMeetingCount datetime = null, @MeetingID int =0

 

      declare @RequestList table(
    
    ReferenceNumber nvarchar(max),
    --id int,
    --Creator nvarchar(max),
    WorkflowProcess nvarchar(max),
    FromName nvarchar(250),
    ToName nvarchar(250),
    FromEmail nvarchar(250),
    ToEmail nvarchar(250),
    Status nvarchar(250),
    DelegateToEmail nvarchar(250))

 

    insert into @RequestList
    select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[FromEmail],[ToEmail],[Status],DelegateToEmail
    from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
    from [dbo].[Workflow] group by ReferenceNumber) 

	--select * from @RequestList

	declare @Output table(
	id INT IDENTITY(1,1) primary key,
	Modules nvarchar(250),
	Memo_Count int,
	Letters_Count int,
	DutyTask_Count int,
	Circular_Count int,
	Meeting_Count int)

	set  @Circular_Count = (select count(*) from [Circular] where ReferenceNumber in(
                  SELECT c.ReferenceNumber from [dbo].[Circular] as  c inner join @RequestList as r on c.ReferenceNumber = r.ReferenceNumber  where (c.[DeleteFlag] is not null or c.[DeleteFlag] !=0) and 
                 ( r.Status = 13 or r.Status=16) and (r.ToEmail = @UserEmail
    or 
      @UserEmail = r.DelegateTOEmail) ))

 

    set  @Letters_Count = (select count(*) from [LettersInbound] where [LetterReferenceID] in(
                  SELECT LI.[LetterReferenceID] from [dbo].[LettersInbound] as  LI inner join @RequestList as r on LI.[LetterReferenceID] = r.ReferenceNumber  where (LI.[DeleteFlag] is not null or LI.[DeleteFlag] !=0) and 
                  r.Status = 25 and (r.ToEmail = @UserEmail
    or 
      @UserEmail = r.DelegateTOEmail) ))  + 

						(select count(*) from [LettersOutbound] where [LetterReferenceID] in(
                  SELECT LO.[LetterReferenceID] from [dbo].[LettersOutbound] as  LO inner join @RequestList as r on LO.[LetterReferenceID] = r.ReferenceNumber  where (LO.[DeleteFlag] is not null or LO.[DeleteFlag] !=0) and 
                  r.Status = 19 and (r.ToEmail = @UserEmail
    or 
      @UserEmail = r.DelegateTOEmail) ))

 

    set  @DutyTask_Count = (select count(*) from [DutyTask] where Status = 30 and AssigneeID= @P_UserID or DelegateAssignee=@P_UserID)

	set  @Memo_Count = (select count(*) from [Memo] where ReferenceNumber in(
                  SELECT m.ReferenceNumber from [dbo].[Memo] as m inner join @RequestList as r on m.ReferenceNumber = r.ReferenceNumber  where (m.[DeleteFlag] is not null or m.[DeleteFlag] !=0) and 
                 (r.Status = 2 or r.Status=5)and (r.ToEmail = @UserEmail
    or 
      @UserEmail = r.DelegateTOEmail)
     ))

		set @Meeting_Count = (select count(*)  from [dbo].[Meeting] as m where  DeleteFlag=0 and ( m.Status <>115 or m.Status is null) and  StartDateTime > (Select GETUTCDATE()) AND DeleteFlag=0 and ( (@P_UserID = m.CreatedBy) or 
						@P_UserID in (select UserID from MeetingInternalInvitees where MeetingID=m.MeetingID )))

		set @NextMeetingCount = (select top (1)StartDateTime from [dbo].[Meeting] as m where  DeleteFlag=0 and ( (@P_UserID = m.CreatedBy) or 
						@P_UserID in (select UserID from MeetingInternalInvitees where MeetingID=m.MeetingID )) and( m.Status <>115 or m.Status is null)
						and StartDateTime > (Select GETUTCDATE()) order by StartDateTime asc  ) 

		set @MeetingID = (select top (1)MeetingID from [dbo].[Meeting] as m where  DeleteFlag=0 and ( (@P_UserID = m.CreatedBy) or 
						@P_UserID in (select UserID from MeetingInternalInvitees where MeetingID=m.MeetingID )) and ( m.Status <>115 or m.Status is null)
						and StartDateTime > (Select GETUTCDATE()) order by StartDateTime asc  ) 

	select @Circular_Count as Circular, @Letters_Count as Letters, @Memo_Count as Memo, @Meeting_Count as Meeting, @DutyTask_Count as DutyTask,
		@NextMeetingCount as NextMeetingDateTime, @MeetingID as MeetingID

END
GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestions]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestions]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[HRComplaintSuggestions] where DeleteFlag=0
END

GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsByAssigneeandHRId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	HRDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow')
	  order by WorkflowID desc) 	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow' order by WorkflowID desc) 
	 )
	 end

	select HRDeptUsedIds from @result
	

END

GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsByID]
	@P_HRComplaintSuggestionsID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT [HRComplaintSuggestionsID],[ReferenceNumber],[Type],[Subject],[Details],[RequestCreatedBy],[MailID],[PhoneNumber],[ActionTaken],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],Source,
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[HRComplaintSuggestions].ReferenceNumber order by WorkflowID desc) as Status


 from [dbo].[HRComplaintSuggestions]  WHERE HRComplaintSuggestionsID = @P_HRComplaintSuggestionsID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[HRComplaintSuggestionsHistory]
END


GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsHistoryByID]   ******/
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsHistoryByID]-- [Get_HRComplaintSuggestionsHistoryByID] 3
	@P_HRComplaintSuggestionsID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @RequestorType int =0;
	select @RequestorType = RequestCreatedBy from HRComplaintSuggestions where HRComplaintSuggestionsID=@P_HRComplaintSuggestionsID
	
	SELECT [HistoryID],[HRComplaintSuggestionsID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[ActionBy]) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[HRComplaintSuggestionsHistory] where HRComplaintSuggestionsID = @P_HRComplaintSuggestionsID
			and  Action = (Case when @RequestorType = 0 and Action='Submit' then null else Action end)
END
GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from  [dbo].[HRComplaintSuggestionsHistory] )m where slno between @StartNo and @EndNo 

END


GO
/****** Object:  StoredProcedure [dbo].[Get_HRComplaintSuggestionsList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_HRComplaintSuggestionsList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HRComplaintSuggestionsID]) as 
	slno, *
	from [dbo].[HRComplaintSuggestions] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
/****** Object:  StoredProcedure [dbo].[Get_ITSupportByID]    Script Date: 10-07-2019 21:24:30 ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_ITSupportByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[Get_ITSupportByID]   ******/
CREATE PROCEDURE [dbo].[Get_ITSupportByID]
	@P_ITSupportID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT [ITSupportID],[ReferenceNumber],[SourceOU],[SourceName],[Subject],[RequestorDepartment],[RequestorName],[RequestDetails],[RequestType],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],[Priority],
	(case when status = 0 and ServiceDeskId is null then 202 when status = 0 and ServiceDeskId is not null then 94 else 95 end) as Status


 from [dbo].[ITSupport]  WHERE ITSupportID = @P_ITSupportID
END


GO
/****** Object:  StoredProcedure [dbo].[Get_ITSupportHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_ITSupportHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_ITSupportID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [HistoryID],[ITSupportID],[Action], (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=ActionBy) as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[ITSupportHistoryLog] where ITSupportID = @P_ITSupportID
END
/****** Object:  StoredProcedure [dbo].[Get_LeaveAssigneeID]    Script Date: 06-07-2019 11.45.08 AM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_LeaveAssigneeID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LeaveAssigneeID] --Get_LeaveAssigneeID '003-2019-L'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @UserID int = 0;
	set @UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and Status = 8 and ([WorkflowProcess] = 'AssignToMeWorkflow' or [WorkflowProcess] = 'AssignWorkflow') 
	  order by WorkflowID desc) 
	 ))
	 if(@UserID is null)
	 begin
	 set @UserID = 0;
	 select @UserID as UserID
	 end
	 else
	 begin
	 select @UserID as UserID
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LeaveByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_LeaveByApproverId] --  Get_MemoByApproverId '102-2019-M'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = '014-2019-LR',
	@P_UserID int=24
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 7) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	--	select * from @Workflow
	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 7 ) order by WorkflowID desc) 
	 )
	-- select * from @result
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 7 )order by WorkflowID desc)  
	 )
	select * from @result
	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_LeaveByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LeaveByID]  ******/
CREATE PROCEDURE [dbo].[Get_LeaveByID] --  [Get_LeaveByID] 43
	@P_LeaveID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [LeaveID],[ReferenceNumber],[SourceOU],[SourceName],[LeaveType],[Reason],[DOANameID],[DOADepartmentID],[StartDate],[EndDate],[BalanceLeave],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Leave].ReferenceNumber order by WorkflowID desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =[leave].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Leave.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
	 ))
	  as ApproverNameID,
	  
	[ApproverDepartmentID]
	  as ApproverDepartmentID,
	   (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (select top 1 FromEmail from [dbo].[Workflow] where [ReferenceNumber] =
	   (select ReferenceNumber from  [dbo].[Leave]  WHERE LeaveID = @P_LeaveID and [IsHrHeadApproved]=1) 
	   and [WorkflowProcess]= 'ApprovalWorkflow' order by [WorkflowID] desc)) as 'HRManagerUserID',
	   LeaveTypeOther as LeaveTypeOther	  
	  from [dbo].[Leave]  WHERE LeaveID = @P_LeaveID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LeaveCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LeaveCommunicationHistory]  ******/
CREATE PROCEDURE [dbo].[Get_LeaveCommunicationHistory]
    @P_LeaveID int =0
	

	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
			select [CommunicationID],[LeaveID],[Message],[ParentCommunicationID],[Action],case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as 
	  CreatedBy,
		[CreatedDateTime],
		case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName  from [dbo].[LeaveCommunicationHistory]  as a
		where LeaveID=@P_LeaveID order by [CreatedDateTime] asc
	 

    -- Insert statements for procedure here
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Legal]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Legal]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Legal] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LegalByAssigneeandHRId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LegalByAssigneeandHRId]  -- [Get_LegalByAssigneeandHRId] '001-2019-LM','0'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	LegalUsedIds int
	);

		declare @RequestList table(
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250))

	
	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Legal' group by ReferenceNumber) 

	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	 (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =@P_ReferenceNumber  and ([WorkflowProcess] = 'AssignToMeWorkflow' or [WorkflowProcess] = 'AssignWorkflow') 
	 ) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber 
	  and Status = 103  order by WorkflowID desc) 
	 )
	 end
	 	 
	if((select count(*) from @result)>0)
	select LegalUsedIds from @result

END



GO
/****** Object:  StoredProcedure [dbo].[Get_LegalByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LegalByID]
	@P_LegalID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [LegalID],[ReferenceNumber],[SourceOU],[SourceName],[Subject],[RequestDetails],[Comments],[DeleteFlag],
	[CreatedBy],[UpdatedBy],[CreatedDateTime] ,[UpdatedDateTime],
	(select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Legal].ReferenceNumber order by WorkflowID desc) as Status

	 from [dbo].[Legal]  WHERE LegalID = @P_LegalID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LegalCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_LegalCommunicationHistory]  ******/
CREATE PROCEDURE [dbo].[Get_LegalCommunicationHistory]
    @P_LegalID int =0
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
			select [CommunicationID],[LegalID],[Message],[ParentCommunicationID],[Action],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  ) as CreatedBy,
		[CreatedDateTime],(select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy) as PhotoGuid,
	 (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)  as PhotoName  from [dbo].[LegalCommunicationHistory]  as a
		where LegalID=@P_LegalID --order by [CreatedDateTime] desc

END
GO
/****** Object:  StoredProcedure [dbo].[Get_LegalKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LegalKeywords] --49,1,'String'
	@P_LegalID int = null,
	@P_Type int = 0,
	@P_UserID nvarchar(100)= null
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type is null or @P_Type =1 or @P_Type =0)
	SELECT distinct([Keywords]) from [dbo].[LegalKeywords] where [LegalID]= @P_LegalID and DeleteFlag=0;

	if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	SELECT distinct([Keywords]) from [dbo].[LegalKeywords] where [UserID]= @P_UserID and DeleteFlag=0;
END 

GO
/****** Object:  StoredProcedure [dbo].[Get_LegalList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/****** Object:  StoredProcedure [dbo].[Get_LegalList]  ******/
CREATE PROCEDURE [dbo].[Get_LegalList] -- [Get_LegalList] 1,10,1,13,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type nvarchar(10) =null,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Status nvarchar(250) = null,
	@P_UserName nvarchar(250) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_RequestDateFrom  datetime = null,
	@P_RequestDateTo datetime = null,
	@P_Label nvarchar(250) = null,
	@P_AttendedBy nvarchar(250) = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_language nvarchar(10) = 'EN'

	AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

-- Insert statements for procedure here
declare @RefCout int =0, @StartNo int =0, @EndNo int =0;

select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
select @StartNo =(@RefCout + 1);
select @EndNo=@RefCout + @P_PageSize;
declare @UserID int = @P_UserID
declare @UserName nvarchar(250), @UserEmail nvarchar(250)
SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
set @P_SourceOU = (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end)  from [dbo].M_Department where DepartmentID = @P_SourceOU)
SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

declare @LegalManagers table(
UserID int,
UserEmail nvarchar(250))

declare @LegalUsers table(
UserID int,
UserEmail nvarchar(250))

--GET HR managers
insert into @LegalManagers
select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 16 and ([IsOrgHead] = 1 or HOD = 1 or HOS = 1)
--select * from @HRManagers
--GET HR users
insert into @LegalUsers
select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 16 and ([IsOrgHead] is null or [IsOrgHead] =0)
--select * from @HRUsers

declare @RequestList table(

ReferenceNumber nvarchar(max),
--id int,
--Creator nvarchar(max),
WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
Status nvarchar(250))



declare @Result table(
id INT IDENTITY(1, 1) primary key,
LegalID int ,
ReferenceNumber nvarchar(max),
SourceOU nvarchar(max),
Subject nvarchar(max),
Status nvarchar(max),
RequestDate datetime,
	--Label nvarchar(max),
AttendedBy nvarchar(250),
SourceName  nvarchar(max),
Details nvarchar(max),
AssignedTo nvarchar(max)
)



;With CTE_Duplicates as
   (select [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status] , 
			row_number() over(partition by [ReferenceNumber] order by WorkflowID desc ) rownumber 
   from [Workflow] where Service = 'Legal' )
   insert into @RequestList
   select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status] from CTE_Duplicates where rownumber=1

   


-- insert into @requestlist
-- select  [referencenumber],[workflowprocess],[fromemail],[toemail],[status]
	-- from [dbo].[workflow] where createddatetime in  (select max(createddatetime)
	-- from [dbo].[workflow] where service = 'legal' group by referencenumber)  

--select * from @RequestList;
	if(@P_Type = 1)           --New Requests
	begin
	insert into @Result
	       select L.[LegalID],L.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = L.SourceOU) as SourceOU,L.[Subject],
          (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
          L.[CreatedDateTime],   
	  (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = L.[CreatedBy]) as Creator,
        (select EmployeeName from UserProfile where UserProfileId=L.SourceName) as SourceName,L.RequestDetails,
		(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow','ReopenWorkflow') 
				order by b.WorkflowID desc) as c)
         from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
     and
          (( ((@P_UserID in (select UserProfileId from [dbo].[UserProfile] where  OrgUnitID=16)  and  ((r.Status=102) )))

	--	    or
	--      ((@P_UserID in (select  UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=16 )  and  r.Status = 103 and( r.WorkflowProcess != 'AssignWorkflow' 
	--and    r.WorkflowProcess != 'AssignToMeWorkflow')))
 --      or  (( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail or [OrgUnitID]=16 )  and r.Status = 103 
 --  AND   ( r.WorkflowProcess='AssignWorkflow' or  r.WorkflowProcess = 'AssignToMeWorkflow')))
   or    (@P_UserID = L.CreatedBy and r.WorkflowProcess='SubmissionWorkflow')))

   end

   else if(@P_Type = 2)  --My needmoreinfo records
   begin

     insert into @Result
            SELECT L.[LegalID],L.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU,
			L.[Subject],(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
            L.[CreatedDateTime],
            (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = L.[CreatedBy]) as Creator,
            (select EmployeeName from UserProfile where UserProfileId=L.SourceName) as SourceName, L.RequestDetails,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
            from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
       and 
			(((r.WorkflowProcess='ReturnWorkflow' and  @P_UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail) and  r.Status!=103 ) 
	   and 
	        (r.Status = 104 )) or (@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= r.ReferenceNumber and W. WorkflowProcess='ReturnWorkflow') ))
	        order by L.[LegalID] desc

   end

	else if(@P_Type = 3) --My closed Records
    begin

      insert into @Result
            SELECT L.[LegalID],L.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU,
			L.[Subject],(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
            L.[CreatedDateTime],
            (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = L.[CreatedBy]) as Creator,
	    (select EmployeeName from UserProfile where UserProfileId=L.SourceName) as SourceName, L.RequestDetails,
		(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
            from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where  L.[DeleteFlag] !=1
            and  (((@UserEmail = r.FromEmail or @P_UserID = L.CreatedBy) and (r.Status = 105))
			or(@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= L.ReferenceNumber and W. WorkflowProcess='CloseWorkflow') )) order by L.[LegalID] desc

end

     else if(@P_Type = 5 or @P_Type is null ) --My Pending Request
     begin

      insert into @Result
           SELECT L.[LegalID],L.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.[SourceOU]) as SourceOU,
		   L.[Subject],(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
           L.[CreatedDateTime],
           (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = L.[CreatedBy]) as Creator,
           (select [EmployeeName] from UserProfile where UserProfileId=L.[SourceName]) as SourceName, L.RequestDetails,
		   (select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
           from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
      and 
	     
          ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail )  and r.Status = 104 ) order by L.[LegalID] desc


    end

    else if(@P_Type = 4) --My own request
    begin

    insert into @Result
          SELECT L.[LegalID],L.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU,
		  L.[Subject],(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
          L.[CreatedDateTime],
          (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = L.[CreatedBy]) as Creator,
	  (select EmployeeName from UserProfile where UserProfileId=L.SourceName) as SourceName, L.RequestDetails,
	  (select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
          from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1 
	 and
		  L.CreatedBy = @P_UserID  and r.WorkflowProcess !='ReturnWorkflow'order by L.[LegalID] desc
    end

	else if(@P_Type = 6	) --InProgressRequest
	begin

	insert into @Result
			SELECT  L.LegalID, L.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
			 ,L.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			L.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = L.[CreatedBy]) as Creator,
                        (select EmployeeName from UserProfile where UserProfileId=L.SourceName) as SourceName, L.RequestDetails,
						(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=L.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Legal] L join @RequestList r   on r.[ReferenceNumber] = L.[ReferenceNumber]  where  L.[DeleteFlag] !=1
			and ((@P_UserID= L.CreatedBy and r.WorkflowProcess not in ( 'SubmissionWorkflow','ReturnWorkflow','CloseWorkflow'))
			   or  (( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail or [OrgUnitID]=16 )  and r.Status = 103 
  -- AND   ( r.WorkflowProcess='AssignWorkflow' or  r.WorkflowProcess = 'AssignToMeWorkflow')
   )) 
			or (@P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail) and r.Status=103 and r.WorkflowProcess='SubmissionWorkflow')
   
  )
			
			order by L.[CreatedDateTime] desc
	end

--select * from @Result

     if(@P_SourceOU != '')
	 delete from @Result where SourceOU not like @P_SourceOU
	 
	 if(@P_Subject != '')
	 delete from @Result where Subject not like '%'+@P_Subject+'%' or Subject  is null

	 if(@P_AttendedBy != '')
	 delete from @Result where AttendedBy not like '%'+@P_AttendedBy+'%'

	 
	if(@P_Label != '')
	delete from @Result where LegalID not in (select  LegalID from @Result as a where(select count(*) from  [dbo].[LegalKeywords] as L 
	where L.[Keywords]  like '%'+@P_Label+'%'  and L.[LegalID] = a.LegalID and  [DeleteFlag] != 1)>0)

	 if(@P_RequestDateFrom is not null)
	 delete from @Result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @Result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='' )
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%') or (AssignedTo like '%'+@P_SmartSearch+'%') or
		(Subject  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(AttendedBy like '%'+@P_SmartSearch+'%') or (SourceName  like '%'+@P_SmartSearch+'%')or (Details  like '%'+@P_SmartSearch+'%')or
        ((select count(K.Keywords) from LegalKeywords as K where K.LegalID=a.LegalID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.Keywords like '%'+@P_SmartSearch+'%')>0)
))
	as m	where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%') or (AssignedTo like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(Subject  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		(AttendedBy  like '%'+@P_SmartSearch+'%') or (SourceName  like '%'+@P_SmartSearch+'%')or (Details  like '%'+@P_SmartSearch+'%')or
                ((select count(K.Keywords) from LegalKeywords as K where K.LegalID=a.LegalID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.Keywords like '%'+@P_SmartSearch+'%')>0)) 
     end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select  * from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @Result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterCreatorAndUserName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterCreatorAndUserName] -- 1 ,2
	-- Add the parameters for the stored procedure here
	@P_UserId int =0,
	@P_Type int = 0 -- If Type = 0 then Creator else Assignee
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	declare @result table(
	UserID int,
	UserName nvarchar(max));

	if(@P_Type = 1)
	Begin
		insert into @result
		SELECT 
		DT.[CreatedBy] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[CreatedBy])
		from [dbo].[LettersInbound] as DT 
		where (@P_UserID = DT.CreatedBy) 

		insert into @result
		SELECT 
		DT.[CreatedBy] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[CreatedBy])
		from [dbo].[LettersOutbound] as DT 
		where (@P_UserID = DT.CreatedBy) 
	end

	if(@P_Type = 2)
	Begin
		insert into @result
		SELECT 
		DT.[CreatedBy] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[CreatedBy])
		from [dbo].[LettersInbound] as DT 
		where (@P_UserID = DT.CreatedBy) 

		insert into @result
		SELECT 
		DT.[CreatedBy] ,
		(select Top 1 EmployeeName from [dbo].[UserProfile] where UserProfileId = DT.[CreatedBy])
		from [dbo].[LettersOutbound] as DT 
		where (@P_UserID = DT.CreatedBy) 
	end

	 ;With CTE_Duplicates as
   (select UserID , row_number() over(partition by UserID order by UserID ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1
   

	select distinct* from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterEntityList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterEntityList]    ******/
CREATE PROCEDURE [dbo].[Get_LetterEntityList]-- [Get_LetterEntityList] 'OfficialTask','Submit'
	-- Add the parameters for the stored procedure here
	@P_Entity int = 0,
	@P_EntityName nvarchar(max) = null,
	@P_EntityID int = 0
	
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
		if(@P_EntityID != 0)
		begin
		select ContactID as ID,EntityName as EntityName,UserName as UserName  from Contact where Type='external' and (DeleteFlag=0 or DeleteFlag=null)
		and ContactID = @P_EntityID
		end
		else if(@P_Entity =0 )
		begin
			if(@P_EntityName= '' or @P_EntityName is null)
			select ContactID as ID,EntityName as EntityName,UserName as UserName  from Contact where Type='external' and (DeleteFlag=0 or DeleteFlag=null)
			else
			select  ContactID as ID,EntityName as EntityName,UserName as UserName  from Contact where Type='external'
			and  UPPER(EntityName)=Upper(@P_EntityName)and (DeleteFlag=0 or DeleteFlag=null)
		end

		else if(@P_Entity =1)
		begin
			if(@P_EntityName= '' or @P_EntityName is null)
			select ContactID as ID,EntityName as EntityName,UserName as UserName from Contact where Type='external' and OfficialEntity = 1 and (DeleteFlag=0 or DeleteFlag=null)
			else
			select ContactID as ID,EntityName as EntityName,UserName as UserName from Contact where Type='external' and OfficialEntity = 1 and  UPPER(EntityName)=Upper(@P_EntityName)and (DeleteFlag=0 or DeleteFlag=null)
		end

		else if(@P_Entity =2)
		begin
			if(@P_EntityName= '' or @P_EntityName is null)
			select ContactID as ID,EntityName as EntityName,UserName as UserName  from Contact where Type='external' and OfficialEntity=0 and (DeleteFlag=0 or DeleteFlag=null)
			else
			select ContactID as ID,EntityName as EntityName,UserName as UserName  from Contact where Type='external' and OfficialEntity=0 and  UPPER(EntityName)=Upper(@P_EntityName) and (DeleteFlag=0 or DeleteFlag=null)
		end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundByApproverId] -- execute [dbo].[Get_LetterInboundByApproverId] '005-2019-L'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int=0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 24 or Status = 25) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 24 or Status =25) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 24 or WD.Status = 25)order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterInboundByID]  ******/
CREATE PROCEDURE [dbo].[Get_LetterInboundByID] --  [Get_LetterInboundByID] 1
	@P_LetterID int = null,
	@P_UserID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @UserEmail nvarchar(250)
	set @UserEmail = (Select OfficialmailID from UserProfile where UserProfileID = @P_UserID)

	SELECT [LetterID],[LetterReferenceID],[LetterTitle],[SourceOU],[SourceName],[LetterDetails],[ReceivingDate],(select EntityName from Contact where ContactID=ReceivedFromEntityID )as [ReceivedFromGovernmentEntity],
	ReceivedFromName as [ReceivedFromName],IsGovernmentEntity,ReceivedFromEntityID,[Notes],[Priority],[LetterDetails],[DocumentClassification],[NeedReply],[LetterPhysicallySend],
	[RelatedToIncomingLetter],[CreatedBy] ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],[InitialApproverDepartment],
	 (select top 1 Status from [Workflow] 
	 where [ReferenceNumber] =[LettersInbound].[LetterReferenceID] order by [WorkflowID] desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =[LettersInbound].[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[LettersInbound].CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverNameID,
	  
	  [LettersInbound].[InitialApproverDepartment]
	   as ApproverDepartmentID,

	   (select top 1 [DepartmentID] from [LettersInboundDestinationDepartment] where [LetterID] = @P_LetterID and [DeleteFlag] <> 1) as DestinationDepartmentID,
	  (select top 1 [UserID] from [LettersInboundDestinationUsers] where [LetterID] = @P_LetterID and [DeleteFlag] <> 1) as DestinationUsersID,
	 'Inbound Letter' as LetterType,

	 (select top(1)IsRedirect from Workflow where ToEmail =@UserEmail and 
    ReferenceNumber =[LettersInbound].[LetterReferenceID] and (WorkflowProcess='RedirectWorkflow'or WorkflowProcess ='ApprovalWorkflow')and Status=26) as IsRedirect
	  from [dbo].[LettersInbound]  WHERE [LetterID] = @P_LetterID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundDestinationDepartment]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT A.[DepartmentID] as LetterDestinationDepartmentID,(select M.DepartmentName from M_Department as M where M.DepartmentID= A.DepartmentID) 
	as LetterDestinationDepartmentName from [dbo].[LettersInboundDestinationDepartment] as A where  A.[LetterID] = @P_LetterID and A.[DeleteFlag]=0;
END

--execute Get_LetterDestinationDepartment '3'

GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundDestinationUsers]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.UserID as LetterDestinationUsersID,
	(select [EmployeeName] from [dbo].[UserProfile] as b where b.UserProfileId=a.UserID)as LetterDestinationUsersName 
	from [dbo].[LettersInboundDestinationUsers] as a where  LetterID = @P_LetterID
	and DeleteFlag=0;
END



GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[LettersInboundHistory] 
END


GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundHistoryByID]-- 49
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[LetterID],[Action],
	case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.ActionBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.ActionBy  )) end as 
	 ActionBy,
			[ActionDateTime],[Comments] from [dbo].[LettersInboundHistory] as a where [LetterID] = @P_LetterID
END



GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	
	select @StartNo =(@RefCout + 1);
	
	select @EndNo=@RefCout + @P_PageSize;
	
	
	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[LettersInboundHistory]  )m where slno between @StartNo and @EndNo 

	
END


--execute [Get_LetterHistoryList] 3,8

GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterInboundKeywords] --49,1,'String'
	@P_LetterID int = null,
	@P_Type int = 0,
	@P_UserID nvarchar(100)= null
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type is null or @P_Type =1 or @P_Type =0)
	SELECT distinct([Keywords]) from [dbo].[LettersInboundKeywords] where [LetterID]= @P_LetterID and DeleteFlag=0;

	if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	SELECT distinct([Keywords]) from [dbo].[LettersInboundKeywords] where [UserID]= @P_UserID and DeleteFlag=0;
END 



GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterInboundPreview]   ******/
CREATE PROCEDURE [dbo].[Get_LetterInboundPreview] 
	@P_LetterID int = 1,
	@P_UserID int = 7
AS
BEGIN
	
	SET NOCOUNT ON;

	Declare @ReferenceNumber nvarchar(max) = null, @ApproverEmail nvarchar(max) = null, @ApproverName nvarchar(max),@ApproverDesignation nvarchar(max),
	@ApproverID int,@ApproverDepartment  nvarchar(max) = null,@signatureID nvarchar(max)=null, @SignatureName nvarchar(max)=null,@Title nvarchar(max)=null; 

	select @ReferenceNumber=LetterReferenceID from LettersInbound where LetterID= @P_LetterID

	set @ApproverEmail = (select top 1 case when DelegateFromEmail is null then FromEmail else DelegateFromEmail end from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (26,27) order by WorkflowID desc)

	

	if(@ApproverEmail is null)
	set @ApproverEmail = (select top 1 ToEmail from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (24,25) order by WorkflowID desc)
	
	if(@ApproverEmail is not null)
	select @Title = U.Title, @ApproverID=UserProfileId,@ApproverName=EmployeeName,@ApproverDesignation=EmployeePosition,@ApproverDepartment=
	(select ArDepartmentName from M_Department as M where M.DepartmentID= U.DepartmentID) from UserProfile as U  where OfficialMailId = @ApproverEmail

	if((select count(*) from Workflow where ReferenceNumber = @ReferenceNumber and Status in (26,27) )>0)
	begin
	select @SignatureName = U.SignaturePhoto, @signatureID=U.SignaturePhotoID from UserProfile as U  where OfficialMailId = @ApproverEmail
	end

	SELECT [LetterID],[LetterReferenceID],[LetterTitle],[SourceOU],(select EmployeeName from [UserProfile] where UserProfileId=SourceName)as SourceName,[LetterDetails],[Priority],[LetterDetails],[DocumentClassification],
	[RelatedToIncomingLetter],[CreatedBy] ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],NeedReply,
	 (select top 1 Status from [Workflow]  where [ReferenceNumber] =l.[LetterReferenceID] order by [WorkflowID] desc) as Status,
	  (select STUFF((select (select ','+EmployeeName AS [text()]  from (select EmployeeName from UserProfile as c join LettersInboundDestinationUsers as a 
			on a.UserID=c.UserProfileId where a.LetterID= l.LetterID ) A FOR XML PATH ('') ) ), 1, 1, NULL) )as DestinationTitle,
	  @ApproverName as ApproverNameID, @ApproverID as ApproverID,@ApproverDesignation as ApproverDesignation, l.[InitialApproverDepartment]
	   as ApproverDepartmentID, 'Inbound Letter' as LetterType, @signatureID as SignaturePhotoID, @SignatureName as SignaturePhotoName,@Title as ApproverTitle
	   from [dbo].[LettersInbound] as l  WHERE [LetterID] = @P_LetterID


END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterInboundRelatedOutgoingReferenceNo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterInboundRelatedOutgoingReferenceNo]   ******/
CREATE PROCEDURE [dbo].[Get_LetterInboundRelatedOutgoingReferenceNo] --8,0,'String'
	@P_LetterID int = null,
	@P_Type int = 0,
	@P_LetterType int =0
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT distinct([OutgoingLetterReferenceNo]),case when @P_LetterType=1 then (select LetterID from [dbo].[LettersInbound] where [LetterReferenceID]=[OutgoingLetterReferenceNo])
	else (select LetterID from [dbo].LettersOutbound where [LetterReferenceID]=[OutgoingLetterReferenceNo]) end as LetterID,
	case when @P_LetterType=1 then (select LetterID from [dbo].[LettersInbound] where [LetterReferenceID]=[OutgoingLetterReferenceNo])
	else (select LetterID from [dbo].LettersOutbound where [LetterReferenceID]=[OutgoingLetterReferenceNo]) end as ARLink from [dbo].[LettersInbound_RelatedOutgoing] where [LetterID]= @P_LetterID and DeleteFlag=0
	and LetterType= @P_LetterType;

	--if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	--SELECT distinct([OutgoingLetterReferenceNo]) from [dbo].[Letters_RelatedOutgoing] where [UserID]= @P_UserID and DeleteFlag=0;
END 
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterList]  ******/
CREATE PROCEDURE [dbo].[Get_LetterList]  --  [Get_LetterList] 1,10,7,7
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type nvarchar (250) = 0,
	@P_UserID int = 0,
	@P_Username nvarchar(250) = '',
	@P_Method int =0,
	@P_Status nvarchar(255) = null,
	@P_SourceOU nvarchar(255) = '',
	@P_DestinationOU nvarchar(255) = '',
	@P_SenderName nvarchar(250) = null,
	@P_Priority nvarchar(255) = '',
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(Max) =null,
	@P_Language nvarchar(10)= 'EN'

	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	LetterID int,
	ReferenceNumber nvarchar(255),
	Title nvarchar(255),
	SourceOU nvarchar(max),
	Destination nvarchar(max),
	UserName nvarchar(max),
	SourceName nvarchar(max),
	LinkToOtherLetter nvarchar(250) ,
	SenderName nvarchar(250),
	Status nvarchar(255),
	CreatedDateTime datetime,
	Replied nvarchar(255),
	Priority nvarchar(255),
	LetterType nvarchar(255),
	UpdatedDateTime datetime,
	DocumentClarification nvarchar(255),
	LetterDetails nvarchar(max),
	ApproverName nvarchar(255),
	ApproverDepartment nvarchar(255),
	SenderEntity nvarchar(max),
	StatusCode int
	);


    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 --SET @P_Username = (Select UserID from [dbo].[User] where LoginUser = @P_Username)
	
	 declare @LinkToOtherLetter nvarchar(250) = (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131);

	 --create a workflow temp table and inserted latest row depending group by reference number
		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	--	select * from @Workflow

	

	--My Pending Incoming Actions
	if (@P_Type = '1' or @P_Type= 0)
	begin
	insert into @result 
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
    a.[LetterID],
    a.[LetterReferenceID],
    a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
    (select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,

	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
	else (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(ReceivedFromName)  as SenderName,
	(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
    a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	'Inbound Letter' as LetterType,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	, (select EntityName from Contact where ContactID = a.ReceivedFromEntityID) as SenderEntity
    ,w.Status as StatusCode
	FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and(( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and (w.Status=25 or w.Status=28)) or 
	 ((w.Status = 26) and(@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status=26 and DeleteFlag =0 and IsRedirect =0 )))
	  )
    as m 
   	 end


	 --My Pending outgoing Actions
	  if (@P_Type = '2'or @P_Type= 0)
	begin
	 insert into @result 
    Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
    a.[LetterID],
    a.[LetterReferenceID],
    a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
    (select STUFF((SELECT ',' + 
CAST(EntityName AS nvarchar(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
	(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select EmployeeName from UserProfile where UserProfileId = a.CreatedBy)  as SenderName,
	(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
    a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	'Outbound Letter' as LetterType,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
	(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  ,null as SenderEntity,w.Status as StatusCode
    FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and ((( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail)and( w.Status=19 or w.Status=22)) or ((w.Status = 20 )and 
   ((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status = 20 and DeleteFlag =0 and IsRedirect =0 ))) ))
   )
    as m 
	end
	
	
	--Outgoing letters
if (@P_Type = '3'or @P_Type= 0)
begin
insert into @result
Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
a.[LetterID],
a.[LetterReferenceID],
a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
(select STUFF((SELECT ',' + CAST(EntityName AS nvarchar(max)) AS [text()]FROM  [dbo].Contact where ContactID in 
(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select EmployeeName from UserProfile where UserProfileId = a.CreatedBy)  as SenderName,
(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
a.CreatedDateTime,
(case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
'Outbound Letter' as LetterType,
(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  ,null as SenderEntity,w.Status as StatusCode
FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or (@P_UserID = a.CreatedBy or w.Status=21)) AND(( (a.CreatedBy = @P_UserID and w.Status<>18) or  (w.FromEmail=@P_UserEmail and w.Status<>18 ) or
	@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))and w.Status!=22))as m 

	
--insert into @result
--Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
--a.[LetterID],
--a.[LetterReferenceID],
--a.[LetterTitle],
--   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
--(select STUFF((SELECT ',' + CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS nvarchar(max)) AS [text()]FROM  [dbo].[M_Department] where DepartmentID in 
--(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
-- (select STUFF((SELECT ',' + 
--CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
--    FROM  [dbo].UserProfile where UserProfileId in 
--	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
--FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
--	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
--	(select case 
--	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
--	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
--	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
--end ) as LinkToOtherLetter,
--(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
--	(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
--a.CreatedDateTime,
--(case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
--   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
--'Inbound Letter' as LetterType,
--(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
--(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
--	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
--	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
--	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
--	end	) as DocumentClarification,
--	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
--	  (select top 1 ToEmail from [Workflow]
--	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
--	 ))
--	  as ApproverName,
--	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment

--FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
--where a.DeleteFlag = 0 and ((@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or  
--	 (w.FromEmail=@P_UserEmail and w.Status!=24 ) or @P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID)) and w.Status!=28)))as m 
end
	
	
	
	--Incoming Letters
	if (@P_Type = '4'or @P_Type= null)
	begin

--	 insert into @result
--	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
--	a.[LetterID],
--	a.[LetterReferenceID],
--	a.[LetterTitle],
--   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
--	(select STUFF((SELECT ',' + 
--CAST(EntityName AS nvarchar(max)) AS [text()]
--    FROM  [dbo].Contact where ContactID in 
--	(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
--FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
--	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
--	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
--	(select case 
--	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
--	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
--	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
--end ) as LinkToOtherLetter,
--	((select STUFF((SELECT ',' + 
--	CAST(SenderName AS nvarchar(max)) AS [text()]
--    FROM  LettersOutboundDestinationEntity where LetterID  = a.[LetterID]
--	FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ))  as SenderName,
--	 (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
--   a.CreatedDateTime,
--   (case when(a.[NeedReply]=1) then 
--		(select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
--		 when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
--   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
--   'Outbound Letter' as LetterType,
--   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
--   (select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
--	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
--	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
--	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
--	end	) as DocumentClarification,	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
--	  (select top 1 ToEmail from [Workflow]
--	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
--	 ))
--	  as ApproverName,
--	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
--	  ,null as SenderEntity
--   FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
--   where a.DeleteFlag = 0 
--   and ((w.Status = 20 )and 
--   ((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and DeleteFlag =0 and IsRedirect =0 ))) ) 
--	)as m 

insert into @result
   Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
	a.[LetterID],
	a.[LetterReferenceID],
	a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(ReceivedFromName)  as SenderName,
		 (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime  ,
   (select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
       , (select EntityName from Contact where ContactID = a.ReceivedFromEntityID) as SenderEntity                     
   ,w.Status as StatusCode
   FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
   where a.DeleteFlag = 0 
   and  
  ((@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or  (w.FromEmail=@P_UserEmail and w.Status!=24 ) 
	or @P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID and Status !=26)) and w.Status!=28))
   ) as m 
   end
		

	--Draft Letters
	if (@P_Type = '5')
	begin
	--SET @P_Status=(Select LookupsID from [dbo].[M_Lookups] where DisplayName = 'Draft' AND Module = 'Memo' AND Category = 'Status')
	 
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST(EntityName AS nvarchar(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
	(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select EmployeeName from UserProfile where UserProfileId = a.CreatedBy)  as SenderName,
	 (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Outbound Letter' as LetterType,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
   (select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  ,null as SenderEntity, w.Status as StatusCode
   FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 AND a.CreatedBy = @P_UserID and w.Status=18) as m 

	insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(ReceivedFromName)  as SenderName,
		 (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
   (select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  , null as SenderEntity, w.Status as StatusCode
   FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 AND a.CreatedBy = @P_UserID and w.Status=24) as m
	 end

	 if (@P_Type = '6')
	 begin
	  insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
    a.[LetterID],
    a.[LetterReferenceID],
    a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
    (select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,

	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
	else (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(ReceivedFromName)  as SenderName,
	(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
    a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	'Inbound Letter' as LetterType,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
	(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	, (select EntityName from Contact where ContactID = a.ReceivedFromEntityID) as SenderEntity
    ,w.Status as StatusCode
	FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and(( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and (w.Status=25 or w.Status=28)) or 
	 ((w.Status = 26) and(@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status=26 and DeleteFlag =0 and IsRedirect =0 )))
	  )
    as m 
	
	 insert into @result
   Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
	a.[LetterID],
	a.[LetterReferenceID],
	a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS UsereName,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(ReceivedFromName)  as SenderName,
		 (select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType,
   (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime  ,
   (select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 24 or Status =25) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
       , (select EntityName from Contact where ContactID = a.ReceivedFromEntityID) as SenderEntity                     
   ,w.Status as StatusCode
   FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
   where a.DeleteFlag = 0 
   and  
  ((@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or  (w.FromEmail=@P_UserEmail and w.Status!=24 ) 
	or @P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID and Status !=26)) and w.Status!=28))
   ) as m 

	 end

	if(@P_Type='7')
	begin
	 insert into @result	
    Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
    a.[LetterID],
    a.[LetterReferenceID],
    a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
    (select STUFF((SELECT ',' + 
CAST(EntityName AS nvarchar(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
	(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) )AS Destination,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select EmployeeName from UserProfile where UserProfileId = a.CreatedBy)  as SenderName,
	(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
    a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	'Outbound Letter' as LetterType,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
	(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,
	a.LetterDetails, (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  ,null as SenderEntity,w.Status as StatusCode
    FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and ((( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail)and( w.Status=19 or w.Status=22)) or ((w.Status = 20 )and 
   ((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status = 20 and DeleteFlag =0 and IsRedirect =0 ))) ))
   )
    as m 	
	
	 insert into @result
Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno, 
a.[LetterID],
a.[LetterReferenceID],
a.[LetterTitle],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = a.SourceOU)as SourceOU  ,
(select STUFF((SELECT ',' + CAST(EntityName AS nvarchar(max)) AS [text()]FROM  [dbo].Contact where ContactID in 
(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))FOR XML PATH(''), TYPE).value('.', 'nvarchar(max)'), 1, 1, NULL) ) AS Destination,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select EmployeeName from UserProfile where UserProfileId = a.CreatedBy)  as SenderName,
(select  (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
a.CreatedDateTime,
(case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
'Outbound Letter' as LetterType,
(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime ,
(select case when (a.DocumentClassification=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=155))
	 when (a.DocumentClassification=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=156))
	when (a.DocumentClassification=2)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=157))
	 when (a.DocumentClassification=3)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=158))
	end	) as DocumentClarification,	a.LetterDetails, (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =a.[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverName,
	  (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitialApproverDepartment) as ApproverDepartment
	  ,null as SenderEntity,w.Status as StatusCode
FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or (@P_UserID = a.CreatedBy or w.Status=21)) AND(( (a.CreatedBy = @P_UserID and w.Status<>18) or  (w.FromEmail=@P_UserEmail and w.Status<>18 ) or
	@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))and w.Status!=22))as m 



	end

		;WITH RelatedLetter AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY LetterID desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM RelatedLetter WHERE RowNumber > 1

	 if(@P_SourceOU != '')
	 delete from @result where replace(SourceOU,'amp;','&') not like '%'+replace(@P_SourceOU,'amp;','&')+'%' or SourceOU is null

	 if(@P_Username != '') 
	 delete from @result where UserName not like '%'+@P_Username+'%'

	 if(@P_SenderName != null)
	 
	 delete from @result where SenderName not like '%'+@P_SenderName+'%'

	 if(@P_DestinationOU != '')
	 delete from @result where replace(@P_DestinationOU,'amp;','&') not in (select replace(value,'amp;','&') from string_split(Destination,',')) or Destination is null

	

	 if(@P_Priority != '')
	 delete from @result where Priority not like @P_Priority+'%' or Priority is null

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_DateTo as date)

	 if((@P_Status !='' or @P_Status!=null))
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 Update @result set  Destination = Replace(Destination,';amp','&')

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result as R where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (LinkToOtherLetter  like '%'+@P_SmartSearch+'%') or (DocumentClarification  like '%'+@P_SmartSearch+'%') or(Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') 
		or(Destination  like '%'+@P_SmartSearch+'%') or(SenderName  like '%'+@P_SmartSearch+'%') or (UserName  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Replied  like '%'+@P_SmartSearch+'%') or (Priority  like @P_SmartSearch+'%') or
		(((select count(K.Keywords) from LettersInboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Inbound Letter') or
		 (((select count(K.Keywords) from LettersOutboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Outbound Letter')or
	     (((select count(K.EntityID) from LettersOutboundDestinationEntity as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.EntityID like '%'+@P_SmartSearch+'%')>0) ) or  
		 (((select count(K.UserID) from LettersInboundDestinationUsers as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and(select EmployeeName from UserProfile where UserProfileId= K.UserID ) like '%'+@P_SmartSearch+'%')>0))or
		((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID  and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Inbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Outbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		 or(( select Count(*) from (select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as e from LettersOutboundDestinationEntity as a join LettersOutbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   ) as za where za.e like  '%'+@P_SmartSearch+'%')>0)
		or( select count(*) from(select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as Q from LettersOutboundDestinationEntity as a join LettersInbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   )as DR where Dr.Q like  '%'+@P_SmartSearch+'%')>0)) as m 
		where slno between @StartNo and @EndNo 
	end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as R where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (LinkToOtherLetter  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') 
		or(Destination  like '%'+@P_SmartSearch+'%') or(SenderName  like '%'+@P_SmartSearch+'%') or (DocumentClarification  like '%'+@P_SmartSearch+'%') or (UserName  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Replied  like '%'+@P_SmartSearch+'%') or (Priority  like '%'+@P_SmartSearch+'%') or
		(((select count(K.Keywords) from LettersInboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Inbound Letter') or
		 (((select count(K.Keywords) from LettersOutboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Outbound Letter')or
	     (((select count(K.EntityID) from LettersOutboundDestinationEntity as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.EntityID like '%'+@P_SmartSearch+'%')>0) ) or  
		 (((select count(K.UserID) from LettersInboundDestinationUsers as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and(select EmployeeName from UserProfile where UserProfileId= K.UserID ) like '%'+@P_SmartSearch+'%')>0))or
		((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID  and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Inbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Outbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		 or(( select Count(*) from (select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as e from LettersOutboundDestinationEntity as a join LettersOutbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   ) as za where za.e like  '%'+@P_SmartSearch+'%')>0)
		or( select count(*) from(select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as Q from LettersOutboundDestinationEntity as a join LettersInbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   )as DR where Dr.Q like  '%'+@P_SmartSearch+'%')>0) 
	
		
	 end
	
	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno,
		* from @result) as m where slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result


	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundByApproverId] -- execute [dbo].[Get_LetterOutboundByApproverId] '005-2019-L'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = null,
	@P_UserID int =0
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 18 or Status = 19) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 19 or W.Status = 18)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 19 or WD.Status = 18)order by WorkflowID desc)  
	 )

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END
--go
--use [RulersCourt_LatestUpdates]
--go
--execute [dbo].[Get_LetterOutboundByApproverId] '005-2019-L'
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundByID]  ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundByID] --  [Get_LetterOutboundByID] 12
	@P_LetterID int = null,
	@P_UserID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @UserEmail nvarchar(250)
	set @UserEmail = (Select OfficialmailID from UserProfile where UserProfileID = @P_UserID)	

	SELECT [LetterID],[LetterReferenceID],[LetterTitle],[SourceOU],[SourceName],[LetterDetails],[Priority],[LetterDetails],[DocumentClassification],
	[RelatedToIncomingLetter],[CreatedBy] ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],NeedReply,
	 (select top 1 Status from [Workflow] 
	 where [ReferenceNumber] =[LettersOutbound].[LetterReferenceID] order by [WorkflowID] desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] =[LettersOutbound].[LetterReferenceID] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[LettersOutbound].CreatedBy) and (Status = 18 or Status =19) order by [WorkflowID] desc) 
	 ))
	  as ApproverNameID,
	  
	  [LettersOutbound].[InitialApproverDepartment]
	   as ApproverDepartmentID,

	  -- (select top 1 [DepartmentID] from [LettersOutboundDestinationDepartment] where [LetterID] = @P_LetterID and [DeleteFlag] <> 1) as DestinationDepartmentID,
	 -- (select top 1 [UserID] from [LettersOutboundDestinationUsers] where [LetterID] = @P_LetterID and [DeleteFlag] <> 1) as DestinationUsersID
	'Outbound Letter' as LetterType,
	(select top(1)IsRedirect from Workflow where ToEmail =@UserEmail and 
    ReferenceNumber =[LettersOutbound].[LetterReferenceID] and (WorkflowProcess='RedirectWorkflow'or WorkflowProcess ='ApprovalWorkflow')and Status=20) as IsRedirect
	  from [dbo].[LettersOutbound]  WHERE [LetterID] = @P_LetterID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundDestinationEntity]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundDestinationEntity] ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundDestinationEntity]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT E.[LetterDestinationID] as LetterDestinationID,C.EntityName as LetterDestinationEntityName,E.SenderName as LetterDestinationUserName
	,ContactID as LetterDestinationEntityID, C.ContactID as LetterDestinationUserNameID,E.IsGovernmentEntity  from [dbo].[LettersOutboundDestinationEntity] as E
	inner join Contact as C on E.EntityID=C.ContactID   where  E.[LetterID] = @P_LetterID and E.[DeleteFlag]=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundDestinationUsers]
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.UserID as LetterDestinationUsersID,
	(select [EmployeeName] from [dbo].[UserProfile] as b where b.UserProfileId=a.UserID)as LetterDestinationUsersName 
	from [dbo].[LettersOutboundDestinationUsers] as a where  LetterID = @P_LetterID
	and DeleteFlag=0;
END



GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[LettersOutboundHistory] 
END


GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundHistoryByID] ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundHistoryByID]-- 49
	@P_LetterID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[LetterID],[Action], 
	case when [DelegateUser] is null or DelegateUser =0 then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.ActionBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.ActionBy  )) end as 
	 ActionBy,
			[ActionDateTime],[Comments] from [dbo].[LettersOutboundHistory]  as a where [LetterID] = @P_LetterID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	
	select @StartNo =(@RefCout + 1);
	
	select @EndNo=@RefCout + @P_PageSize;
	
	
	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[LettersOutboundHistory]  )m where slno between @StartNo and @EndNo 

	
END


--execute [Get_LetterHistoryList] 3,8

GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundKeywords] --49,1,'String'
	@P_LetterID int = null,
	@P_Type int = 0,
	@P_UserID nvarchar(100)= null
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type is null or @P_Type =1 or @P_Type =0)
	SELECT distinct([Keywords]) from [dbo].[LettersOutboundKeywords] where [LetterID]= @P_LetterID and DeleteFlag=0;

	if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	SELECT distinct([Keywords]) from [dbo].[LettersOutboundKeywords] where [UserID]= @P_UserID and DeleteFlag=0;
END 



GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundLinkToLetter]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_LetterOutboundLinkToLetter]	-- [Get_LetterOutboundLinkToLetter] 1
	-- Add the parameters for the stored procedure here
	@P_UserID int =0,
	@P_Type int =0 -- 0 => Inbound  1=> outBound
AS
begin
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @result table(
	ReferenceNumber nvarchar(255),
	Link nvarchar(max), ARLink nvarchar(max));

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1


		declare @P_UserEmail nvarchar(max)=null;
		 SET @P_UserEmail =  (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)


		 --My Pending Incoming Actions	
		 if(@P_Type =0)
		 begin
		insert into @result 
		SELECT
		a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/incomingletter-view/',a.LetterID),
		Concat('rrcui/#/ar/app/letter/incomingletter-view/',a.LetterID)
		FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 and w.ToEmail=@P_UserEmail and w.Status = 25
		end

	
		 --My Pending outgoing Actions
		  if(@P_Type =1)
		 begin
		 insert into @result 
		 SELECT a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/outgoingletter-view/',a.LetterID),
		 Concat('rrcui/#/ar/app/letter/outgoingletter-view/',a.LetterID)
		 FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		 where a.DeleteFlag = 0 and w.ToEmail=@P_UserEmail and w.Status = 1 
		end
	
		 if(@P_Type =1)
		 begin
		--Outgoing Memos
		insert into @result
		SELECT a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/outgoingletter-view/',a.LetterID)
		,Concat('rrcui/#/ar/app/letter/outgoingletter-view/',a.LetterID)
		FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 AND a.CreatedBy = @P_UserID and w.Status<>18
		end

		 if(@P_Type =0)
		 begin
		insert into @result
		SELECT a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/incomingletter-view/',a.LetterID),
		Concat('rrcui/#/ar/app/letter/incomingletter-view/',a.LetterID)
		FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 AND a.CreatedBy = @P_UserID and w.Status<>24
		end
	
	
		--Incoming Memos
		 if(@P_Type =1)
		 begin
		 insert into @result
		SELECT a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/outgoingletter-view/',a.LetterID),
		Concat('rrcui/#/ar/app/letter/outgoingletter-view/',a.LetterID)
		FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 
		and w.Status = 20 
		and (
		(@P_UserID in (select UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=14 and DeleteFlag =0 ))
		)
		end

		if(@P_Type =0)
		 begin
		insert into @result
		SELECT a.[LetterReferenceID],Concat('rrcui/#/en/app/letter/incomingletter-view/',a.LetterID)
		,Concat('rrcui/#/ar/app/letter/incomingletter-view/',a.LetterID)
		 FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 
		and w.Status = 26 
		and (
		(@P_UserID in (select [UserID] from [dbo].[LettersInboundDestinationUsers] where [LetterID]=a.LetterID and DeleteFlag =0 )))
	end
   
   		;With CTE_Duplicates as
		 (select ReferenceNumber , row_number() over(partition by ReferenceNumber order by ReferenceNumber ) rownumber 
		 from @result  )
		delete from CTE_Duplicates where rownumber!=1
		
		select distinct ReferenceNumber as ReferenceNo, Link as Link, ARLink as ARLink from @result;
	
end
	
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundLinkToLetterwithRef]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundLinkToLetterwithRef]  ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundLinkToLetterwithRef]	-- [Get_LetterOutboundLinkToLetterwithRef]  1,0,'017-2019-IL'
	-- Add the parameters for the stored procedure here
	@P_UserID int =7,
	@P_Type int =1, -- 0 => Inbound  1=> outBound
	@P_RefNo nvarchar(max)='099-2019-OL'
AS
begin
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @result table(
	ReferenceNumber nvarchar(255),
	LetterID nvarchar(max));

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max),
		FromEmail nvarchar(max)
		);

		insert into @Workflow
		select w.WorkflowID,w.ReferenceNumber,w.ToEmail,Status,DelegateTOEmail,FromEmail from [dbo].[Workflow] as w --where w.ReferenceNumber=ISNULL(@P_RefNo,'')

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		declare @P_UserEmail nvarchar(max)=null;
		 SET @P_UserEmail =  (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

		

		 --My Pending Incoming Actions	
		 if(@P_Type =0)
		 begin
		insert into @result 
		SELECT
		a.[LetterReferenceID],a.LetterID
		FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where  a.DeleteFlag = 0 and(( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and (w.Status=25 or w.Status=28)) or 
		 ((w.Status = 26) and(@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status=26 and DeleteFlag =0 and IsRedirect =0 )))	  
		end
	
		 --My Pending outgoing Actions
		  if(@P_Type =1)
		 begin
		 insert into @result 
		 SELECT a.[LetterReferenceID],a.LetterID
		 FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		 where a.DeleteFlag = 0 and ((( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail)and( w.Status=19 or w.Status=22)) or ((w.Status = 20 )and 
		 ((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.LetterReferenceID and Status = 20 and DeleteFlag =0 and IsRedirect =0 ))) ))  
		end
	
		 if(@P_Type =1)
		 begin
		--Outgoing Memos
		insert into @result
		SELECT a.[LetterReferenceID],a.LetterID
		FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or (@P_UserID = a.CreatedBy or w.Status=21)) AND(( (a.CreatedBy = @P_UserID and w.Status<>18) or  (w.FromEmail=@P_UserEmail and w.Status<>18 ) or
		@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))and w.Status!=22)
		end

		if(@P_Type =0)
		 begin
		insert into @result
		SELECT a.[LetterReferenceID],a.LetterID
		 FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
		where a.DeleteFlag = 0  and  
		((@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or  (w.FromEmail=@P_UserEmail and w.Status!=24 ) 
		or @P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID and Status !=26)) and w.Status!=28))
   end

   		;With CTE_Duplicates as
		 (select ReferenceNumber , row_number() over(partition by ReferenceNumber order by ReferenceNumber ) rownumber 
		 from @result  )
		delete from CTE_Duplicates where rownumber!=1
		
		declare @ReferenceNo varchar(max)=null;
		declare @LetterID varchar(max)=null;
		declare @ARLink varchar(max)=null;

select @ReferenceNo= ReferenceNumber, @LetterID = LetterID from @result where ReferenceNumber= @P_RefNo
		--set @ReferenceNo=ISNULL((select top 1 ReferenceNumber from @result),'');
		--set @Link=ISNULL((select top 1 Link from @result),'');
		select @ReferenceNo as ReferenceNo,@LetterID as LetterID;	
end	
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundPreview]   ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundPreview] --  [Get_LetterOutboundPreview] 3
	@P_LetterID int = 0,
	@P_UserID int = 0
AS
BEGIN
	
	SET NOCOUNT ON;

	Declare @ReferenceNumber nvarchar(max) = null, @ApproverEmail nvarchar(max) = null, @ApproverName nvarchar(max),@ApproverDesignation nvarchar(max),
	@ApproverID int,@ApproverDepartment  nvarchar(max) = null,@signatureID nvarchar(max)=null, @SignatureName nvarchar(max)=null,@Title nvarchar(max)=null; 

	select @ReferenceNumber=LetterReferenceID from LettersOutbound where LetterID= @P_LetterID


	set @ApproverEmail = (select top 1 case when DelegateFromEmail is null then FromEmail else DelegateFromEmail end from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (20,23) order by WorkflowID desc)

	if(@ApproverEmail is null)
	set @ApproverEmail = (select top 1 ToEmail from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (18,19) order by WorkflowID desc)
	
	if(@ApproverEmail is not null)
	select @Title = U.Title, @ApproverID=UserProfileId,@ApproverName=EmployeeName,@ApproverDesignation=EmployeePosition,@ApproverDepartment=
	(select ArDepartmentName from M_Department as M where M.DepartmentID= U.DepartmentID) from UserProfile as U  where OfficialMailId = @ApproverEmail

	if((select count(*) from Workflow where ReferenceNumber = @ReferenceNumber and Status in (20,23) )>0)
	begin
	select @SignatureName = U.SignaturePhoto, @signatureID=U.SignaturePhotoID from UserProfile as U  where OfficialMailId = @ApproverEmail
	end
	

	SELECT [LetterID],[LetterReferenceID],[LetterTitle],[SourceOU],(select EmployeeName from [UserProfile] where UserProfileId=SourceName)as SourceName,[LetterDetails],[Priority],[LetterDetails],[DocumentClassification],
	[RelatedToIncomingLetter],[CreatedBy] ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],NeedReply,
	 (select top 1 Status from [Workflow]  where [ReferenceNumber] =l.[LetterReferenceID] order by [WorkflowID] desc) as Status,
	(select STUFF((select (select ','+concat(SenderName,'.',EntityName) AS [text()]  from (
        select  SenderName,EntityName from Contact as c inner join LettersOutboundDestinationEntity as d on c.ContactID=d.EntityID where d.LetterID= @P_LetterID and (d.DeleteFlag is null or d.DeleteFlag =0)) A
		FOR XML PATH ('')) ), 1, 1, NULL) )as DestinationTitle,
	  @ApproverName as ApproverNameID, @ApproverID as ApproverID,@ApproverDesignation as ApproverDesignation, l.[InitialApproverDepartment]
	   as ApproverDepartmentID, 'Outbound Letter' as LetterType, @signatureID as SignaturePhotoID, @SignatureName as SignaturePhotoName,@Title as ApproverTitle
	  from [dbo].[LettersOutbound] as l  WHERE [LetterID] = @P_LetterID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundRelatedOutgoingReferenceNo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_LetterOutboundRelatedOutgoingReferenceNo]    ******/
CREATE PROCEDURE [dbo].[Get_LetterOutboundRelatedOutgoingReferenceNo] --49,1,'String'
	@P_LetterID int = null,
	@P_Type int = 0,
	@P_LetterType int =0
	
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type is null or @P_Type =1 or @P_Type =0)
	SELECT distinct([OutgoingLetterReferenceNo]),case when @P_LetterType=1 then (select LetterID from [dbo].[LettersInbound] where [LetterReferenceID]=[OutgoingLetterReferenceNo])
	else (select LetterID from [dbo].LettersOutbound where [LetterReferenceID]=[OutgoingLetterReferenceNo]) end as LetterID from [dbo].[LettersOutbound_RelatedOutgoing] where [LetterID]= @P_LetterID and DeleteFlag=0
	and LetterType= @P_LetterType

	--if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
	--SELECT distinct([OutgoingLetterReferenceNo]) from [dbo].[Letters_RelatedOutgoing] where [UserID]= @P_UserID and DeleteFlag=0;
END 
GO
/****** Object:  StoredProcedure [dbo].[Get_LetterReportList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--LetterReportList--

/****** Object:  StoredProcedure [dbo].[Get_LetterReportList]  ******/
CREATE PROCEDURE [dbo].[Get_LetterReportList] 
	-- Add the parameters for the stored procedure here
	
	@P_UserID int = 0,
	@P_Status nvarchar(255) = '',
        @P_Username nvarchar(250) ='',
	@P_SourceOU nvarchar(255) = null,
	@P_DestinationOU nvarchar(255) = null,
	@P_SenderName nvarchar(250) = null,
	@P_Priority nvarchar(255) = null,
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = '',
	@P_Language nvarchar(10)= 'EN'	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	LetterID int,
	ReferenceNumber nvarchar(255),
	Title nvarchar(255),
	SourceOU nvarchar(max),
	Destination nvarchar(max),
	UserName nvarchar(max),
        SourceName nvarchar(max),
	LinkToOtherLetter nvarchar(250) ,
	SenderName nvarchar(250),
	Status nvarchar(255),
	CreatedDateTime datetime,
	Replied nvarchar(255),
	Priority nvarchar(255),
	LetterType nvarchar(255)
	);

    -- Insert statements for procedure here
	declare  @P_UserEmail nvarchar(max)=null;	

	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 --SET @P_Username = (Select UserID from [dbo].[User] where LoginUser = @P_Username)
	
	 declare @LinkToOtherLetter nvarchar(250) = (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131);

	 --create a workflow temp table and inserted latest row depending group by reference number
		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max));

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,DelegateToEmail from [dbo].[Workflow]  

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST(EntityName AS VARCHAR(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
		(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
  (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Outbound Letter' as LetterType
    FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and ( @P_UserEmail = w.ToEmail or @P_UserEmail = W.DelegateTOEmail)and( w.Status=19 or w.Status=22)) as m  

	insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST(EntityName AS VARCHAR(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
		(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
  (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Outbound Letter' as LetterType
    FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND(( (a.CreatedBy = @P_UserID and w.Status<>18) or  (w.FromEmail=@P_UserEmail and w.Status<>18 ) or
@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID))and w.Status!=22))as m

	insert into @result
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST(EntityName AS VARCHAR(max)) AS [text()]
    FROM  [dbo].Contact where ContactID in 
		(select EntityID from [dbo].[LettersOutboundDestinationEntity] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
	 (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) as UserName,
  (select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
	(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
	 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OutboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Outbound Letter' as LetterType
    FROM dbo.[LettersOutbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber where a.DeleteFlag = 0 
   and (w.Status = 20 or w.Status = 23) and ((@P_UserID in (select UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=14 and DeleteFlag =0 )))) as m 

	insert into @result 
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) )AS UsereName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
		 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType
	FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
    where a.DeleteFlag = 0 and( @P_UserEmail = w.ToEmail
	or  @P_UserEmail = W.DelegateTOEmail) and (w.Status=25 or w.Status=28))as m 


	insert into @result 
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) )AS UsereName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
		 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType
	FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
where a.DeleteFlag = 0 and (@P_UserEmail != w.ToEmail or @P_UserID = a.CreatedBy) AND (((a.CreatedBy = @P_UserID and w.Status<>24) or  (w.FromEmail=@P_UserEmail ) or
@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber = a.LetterReferenceID)) and w.Status!=28))as m 


	insert into @result 
	Select  * from (SELECT row_number() over (Order By  [LetterID]) as slno,
	 a.[LetterID],
	 a.[LetterReferenceID],
	 a.[LetterTitle],
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	(select STUFF((SELECT ',' + 
CAST((case when @P_Language = 'EN' then DepartmentName else ArDepartmentName end) AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].[LettersInboundDestinationDepartment] where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) ) AS Destination,
 (select STUFF((SELECT ',' + 
CAST(EmployeeName AS NVARCHAR(max)) AS [text()]
    FROM  [dbo].UserProfile where UserProfileId in 
	(select UserID from [dbo].LettersInboundDestinationUsers where [LetterID] = a.[LetterID]and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH('')), 1, 1, NULL) )AS UsereName,
	(select [EmployeeName]  from [dbo].[UserProfile] where UserProfileId=a.SourceName) as SourceName,
	(select case 
	when (((select count(*) from [LettersInbound_RelatedOutgoing] where [LetterID] = a.[LetterID])>0)or(a.RelatedToIncomingLetter is not null))
	then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130) 
	else (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131)
end ) as LinkToOtherLetter,
(select [EmployeeName] from [UserProfile] where UserProfileId=a.[CreatedBy])  as SenderName,
		 (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'InboundLetter' AND Category = 'Status') as Status,
   a.CreatedDateTime,
    (case when(a.[NeedReply]=1) then (select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=130)  when(a.[NeedReply]=0) then (select(case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=131) else null end) as NeedReply,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
   'Inbound Letter' as LetterType
	 FROM dbo.[LettersInbound] a inner join @Workflow w on a.[LetterReferenceID] = w.ReferenceNumber
   where a.DeleteFlag = 0 and (w.Status = 26 or w.Status = 29)and (
   (@P_UserID in (select [UserID] from [dbo].[LettersInboundDestinationUsers] where [LetterID]=a.LetterID and DeleteFlag =0 )) ) ) as m 


	 if(@P_SourceOU != '')
	 delete from @result where SourceOU not like '%'+@P_SourceOU+'%'
	  if(@P_Username != '')
	 delete from @result where UserName not like '%'+@P_Username+'%'

	 if(@P_SenderName != '')
	 delete from @result where SenderName not like '%'+@P_SenderName+'%'

	 if(@P_DestinationOU != '')
	 delete from @result where @P_DestinationOU not in (select value from string_split(Destination,','))

	 if(@P_Priority != '')
	 delete from @result where Priority not like '%'+@P_Priority+'%' or Priority is null

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_DateTo as date)

	 if(@P_Status !='' or @P_Status!=null )
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_SmartSearch is not null )
	 
	  With CTE_Duplicates as
   (select  row_number() over(partition by ReferenceNumber order by ReferenceNumber ) rownumber 
   from @result  )
   delete from CTE_Duplicates where rownumber!=1


select id,LetterID,ReferenceNumber ,Title,SourceOU,Destination,UserName,
SourceName,LinkToOtherLetter,SenderName,Status,CreatedDateTime,
Replied,Priority,LetterType from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result as R where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') 
		or(Destination  like '%'+@P_SmartSearch+'%') or(SenderName  like '%'+@P_SmartSearch+'%') or (UserName  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Replied  like '%'+@P_SmartSearch+'%') or (Priority  like '%'+@P_SmartSearch+'%') or
		(((select count(K.Keywords) from LettersInboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Inbound Letter') or
		 (((select count(K.Keywords) from LettersOutboundKeywords as K where K.LetterID=R.LetterID 
			and (K.DeleteFlag=0 or K.DeleteFlag is null)and K.Keywords like '%'+@P_SmartSearch+'%')>0)  and R.LetterType='Outbound Letter')or
	     (((select count(K.EntityID) from LettersOutboundDestinationEntity as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.EntityID like '%'+@P_SmartSearch+'%')>0) ) or  
		 (((select count(K.UserID) from LettersInboundDestinationUsers as K where K.LetterID=R.LetterID and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and(select EmployeeName from UserProfile where UserProfileId= K.UserID ) like '%'+@P_SmartSearch+'%')>0))or
		((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID  and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.EntityName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and c.EntityName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Inbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		or((select count(c.UserName) from Contact as c join LettersOutboundDestinationEntity as a on c.ContactID=a.EntityID where a.LetterID=r.LetterID and r.LetterType='Outbound Letter'and c.UserName like '%'+@P_SmartSearch+'%')>0)
		 or(( select Count(*) from (select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as e from LettersOutboundDestinationEntity as a join LettersOutbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   ) as za where za.e like  '%'+@P_SmartSearch+'%')>0)
		or( select count(*) from(select (case when a.IsGovernmentEntity=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=184))
			when a.IsGovernmentEntity=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=185))
			end)as Q from LettersOutboundDestinationEntity as a join LettersInbound as m on a.LetterID=m.LetterID 
				where m.LetterReferenceID=r.ReferenceNumber   )as DR where Dr.Q like  '%'+@P_SmartSearch+'%')>0)) as m 
	
	 if( @P_SmartSearch is null)
	select* from @result 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_ApproverConfiguration]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_ApproverConfiguration]
	@P_Department int =0
AS
BEGIN
	
	SET NOCOUNT ON;

	Declare @Result table(
	ID int identity(1,1),
	ApproverID int
	);

	insert into @Result (ApproverID)
	SELECT a.[ApproverID]
	from M_ApproverConfiguration as a where a.[DepartmentID] = @P_Department and a.DeleteFlag=0

	select * from @Result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_ApproverDepartments]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_M_ApproverDepartments]
@P_Language nvarchar(10)='EN'
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	id int identity(1,1),
	[DepartmentID] int ,
	[DepartmentName] nvarchar(255)
	)

	insert into @result ([DepartmentID],[DepartmentName])
	select [DepartmentID], case when @P_Language='AR' then ArDepartmentName else [DepartmentName] end from [dbo].[M_Department]

	select * from @result
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_City]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_City]  ******/
CREATE PROCEDURE [dbo].[Get_M_City] --[Get_M_City] null,null,'EN'
@P_CountryID nvarchar(100)= null,
@P_EmiratesID nvarchar(100)= null,
@P_Language nvarchar(10) =null
    -- Add the parameters for the stored procedure here
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
    -- Insert statements for procedure here
        if((@P_CountryID is not null  )and( @P_EmiratesID is null or @P_EmiratesID=0))
        begin
    
            if(@P_Language='EN')
            SELECT [CityID],[CityName],DisplayOrder from [dbo].[M_City] where DeleteFlag=0 and [CountryID]= @P_CountryID
            else
            SELECT [CityID],[ArCityName] as CityName,DisplayOrder from [dbo].[M_City] where DeleteFlag=0 and [CountryID]= @P_CountryID
        end
        else if((@P_EmiratesID is not null ) and( @P_CountryID is null or @P_CountryID=0))
        begin
            if(@P_Language='EN')
            SELECT a.[CityID],[CityName],DisplayOrder from [dbo].[M_City] as a join M_CityandEmirates as c on a.CityID=c.CityID where a.DeleteFlag=0 and c.EmiratesID= @P_EmiratesID
            else
            SELECT a.[CityID],[ArCityName] as CityName,DisplayOrder from [dbo].[M_City] as a join M_CityandEmirates as c on a.CityID=c.CityID where a.DeleteFlag=0 and c.EmiratesID= @P_EmiratesID
        end
        else
        begin
            if(@P_Language='EN')
            SELECT [CityID],[CityName],DisplayOrder from [dbo].[M_City] where DeleteFlag=0 
            else
            SELECT [CityID],[ArCityName] as CityName,DisplayOrder from [dbo].[M_City] where DeleteFlag=0 
        end
        
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Complaint]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Complaint]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[M_Complaint] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_ComplaintByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_ComplaintByID]
	@P_ComplaintID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[M_Complaint] where DeleteFlag=0 and ComplaintID = @P_ComplaintID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_ComplaintList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_ComplaintList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [ComplaintID]) as 
	slno, *
	from [dbo].[M_Complaint] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Country]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_M_Country]   ******/
CREATE PROCEDURE [dbo].[Get_M_Country] -- [Get_M_Country] 'EN'
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) ='',
	@P_Module nvarchar(255)=''
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @result table(
	CountryID int,
	CountryName nvarchar(Max),
	DisplayOrder  int
	);


	if( @P_Module ='')
	begin 
	insert into @result
	SELECT [CountryID], (Case when @P_Language='EN' THEN [CountryName] else ArCountryName end),DisplayOrder from [dbo].[M_Country] where DeleteFlag=0 and CountryName !='Others'
	end

	else if(@P_Module='DutyTask') 
	begin
	insert into @result
	SELECT [CountryID],(Case when @P_Language='EN' THEN [CountryName] else ArCountryName end),DisplayOrder from [dbo].[M_Country] where [DeleteFlag] = 0 and (CountryName='UAE' or CountryName='Others')
	end
	
	else if(@P_Module='NewBabyAddition') 
	begin
	insert into @result
	SELECT [CountryID], (Case when @P_Language='EN' THEN [CountryName] else ArCountryName end),DisplayOrder from [dbo].[M_Country] where [DeleteFlag] = 0 
	end

	select * from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Departments]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_M_Departments]
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	id int identity(1,1),
	[DepartmentID] int ,
	[DepartmentName] nvarchar(255)
	)

	insert into @result ([DepartmentID],[DepartmentName])
	select [DepartmentID],[DepartmentName] from [dbo].[M_Department]

	select * from @result
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_DesignType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_M_DesignType]
	@P_Language nvarchar(10) =0
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN')
	SELECT [DesignTypeID],[DesignTypeName], DisplayOrder from [dbo].[M_DesignType] where DeleteFlag=0 
	else
	SELECT [DesignTypeID],[ArDesignTypeName] as DesignTypeName, DisplayOrder from [dbo].[M_DesignType] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_DriverManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_DriverManagement]    ******/
Create PROCEDURE [dbo].[Get_M_DriverManagement] 
@P_Driver bit=0,
@P_Method int =0	
AS
BEGIN	
	SET NOCOUNT ON;
	Declare @Result table(
	DriverID int,
	DriverName nvarchar(250)
	);
	if(@P_Driver=0)
	begin
	   insert into @Result (DriverID,DriverName)
	SELECT a.UserProfileId as DriverID,a.EmployeeName as DriverName
	   from UserProfile as a where a.IsDriver=0 and a.DeleteFlag=0

	end
	else
	begin
		insert into @Result (DriverID,DriverName)
		SELECT a.UserProfileId as DriverID,a.EmployeeName as DriverName
		from UserProfile as a where a.IsDriver=1 and a.DeleteFlag=0
	
	end
	 if(@P_Method = 0)
	 begin
	select * from @Result
	 end

	 if(@P_Method = 1 )
	 select count(*) from @Result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Education]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_M_Education]
	@P_Language nvarchar(10) =0
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [EducationID],[EducationName],DisplayOrder from [dbo].[M_Education] where DeleteFlag=0 
	else
	SELECT [EducationID],[ArEducationName] as EducationName,DisplayOrder from [dbo].[M_Education] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Emirates]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Emirates]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT EmiratesID,EmiratesName,DisplayOrder from [dbo].[M_Emirates] where DeleteFlag=0
	else
	SELECT EmiratesID, ArEmiratesName as EmiratesName,DisplayOrder from [dbo].[M_Emirates] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_EmployeeStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_EmployeeStatus]
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [EmployeeStatusID],[EmployeeStatusName],DisplayOrder from [dbo].[M_EmployeeStatus] where DeleteFlag=0 
	else
	SELECT [EmployeeStatusID],[ArEmployeeStatusName] as EmployeeStatusName,DisplayOrder from [dbo].[M_EmployeeStatus] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_EventType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_EventType]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT EventTypeID, EventTypeName as EventTypeName,DisplayOrder from [dbo].M_EventType where [DeleteFlag] = 0
	else
	SELECT EventTypeID, ArEventTypeName as EventTypeName,DisplayOrder from [dbo].M_EventType where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Experience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_M_Experience]
	@P_Language nvarchar(10) =0
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [ExperienceID],[ExperienceName],DisplayOrder from [dbo].[M_Experience] where DeleteFlag=0 
	else
	SELECT [ExperienceID],[ArExperienceName] as ExperienceName,DisplayOrder from [dbo].[M_Experience] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Grade]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[Get_M_Grade]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT [GradeID], [GradeName] as GradeName,DisplayOrder from [dbo].[M_Grade] where [DeleteFlag] = 0
	else
	SELECT [GradeID], [ArGradeName] as GradeName,DisplayOrder from [dbo].[M_Grade] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Holidays]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Holidays]
@P_Month int =0,
@P_Year int =0
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	

	Declare @Result table(
	id int identity(1,1),
	HolidayID int,
	Holiday datetime,
	Message nvarchar(max)
	);

	insert into @Result(HolidayID,Holiday,Message)
	select  [HolidayID],[Holiday],[Message]
			from [dbo].[M_Holidays] 

			select * from (Select row_number() over(Order By HolidayID desc) as 
			slno,* from @Result) as m 
			where MONTH(m.Holiday) = @P_Month and YEAR(m.Holiday) = @P_Year 
		
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_ITLastSyncDate]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[Get_M_ITLastSyncDate]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT top 1 [SyncDateTime] from [ApplicationSyncInfo] where [ExternalAppName]='ManageEngineModule' order by [SyncDateTime] desc
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Language]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Language]
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [LanguageID], [LanguageName],DisplayOrder from [dbo].[M_Language] where [DeleteFlag] = 0
	else
	SELECT [LanguageID], [ArLanguageName] as LanguageName,DisplayOrder from [dbo].[M_Language] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_LeaveType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_LeaveType]   ******/
CREATE PROCEDURE [dbo].[Get_M_LeaveType]
	@P_Language nvarchar(10) =0
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN')
	SELECT [LeaveTypeID],[LeaveTypeName], DisplayOrder from [dbo].[M_LeaveType] where DeleteFlag=0 
	else
	SELECT [LeaveTypeID],[ArLeaveTypeName] as LeaveTypeName, DisplayOrder from [dbo].[M_LeaveType] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Location]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Location]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT LocationID,LocationName,DisplayOrder from [dbo].[M_Location] where DeleteFlag=0
	else
	SELECT LocationID,ArLocationName as LocationName,DisplayOrder from [dbo].[M_Location] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Lookups]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_Lookups]  ******/
CREATE PROCEDURE [dbo].[Get_M_Lookups] --[Get_M_Lookups] 'Vehicle','EN'
    @P_Type nvarchar(250) = null,
	@P_Language nvarchar(10) = null  
	
AS
BEGIN
	
	SET NOCOUNT ON;
	
	declare @result table(
	LookupsID int,
	DisplayName nvarchar(255),
	DisplayOrder int
	);

	If (@P_Type='Memo')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='OutboundLetter')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'
	
	else If (@P_Type='InboundLetter')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'
	
	else If (@P_Type='Leave')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

  else If (@P_Type='Circular')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

  else If (@P_Type='Certificate')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	 else If (@P_Type='Announcement')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	 else If (@P_Type='BabyAddition')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='DutyTask')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Training')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Maintenance')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='CitizenAffair')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

		else If (@P_Type='HRComplaintSuggestions'or @P_Type='CitizenAffair')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='CAComplaintSuggestions')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

		else If (@P_Type='Legal')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Contact')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Compensation')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='OfficialTask')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'
		
		 else If (@P_Type='DiwanIdentity')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'
	
	else If (@P_Type='MediaDesignRequest')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='MediaNewPhotoGrapherRequest')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='MediaNewPressReleaseRequest')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

		else If (@P_Type='MediaNewCampaignRequest')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

		else If (@P_Type='MediaPhotoRequest')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='ITSupport')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

		else If (@P_Type='Gift')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Meeting')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Calendar')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'

	else If (@P_Type='Vehicle')
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND Module =@P_Type  and Category='Status'


	else If (@P_Type='CA')
	begin
	insert into @result
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND( Module ='CitizenAffair' or Module ='CAComplaintSuggestions')
	  and Category='Status'
	  ;WITH CTE AS 
		(
		SELECT DisplayName, ROW_NUMBER() OVER 
		(
		    PARTITION BY DisplayName ORDER BY LookupsID desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

		select LookupsID as LookupsID, DisplayName as DisplayName, DisplayOrder as DisplayOrder from @result
	end

	else If (@P_Type='0' or @P_Type is null)
	begin
	insert into @result
	SELECT LookupsID,(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) as DisplayName,DisplayOrder from [dbo].[M_Lookups] where DeleteFlag=0 AND
	 Module in('Leave','Certificate','Announcement','BabyAddition','Training','HRComplaintSuggestions','OfficialTask')  and Category='Status'
	 and  DisplayName !='InProgress'

	 ;WITH CTE AS 
		(
		SELECT DisplayName, ROW_NUMBER() OVER 
		(
		    PARTITION BY DisplayName ORDER BY LookupsID desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

		select LookupsID as LookupsID, DisplayName as DisplayName, DisplayOrder as DisplayOrder from @result

	end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_LookupsByCategory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_LookupsByCategory]
       @P_Category nvarchar(250) = null
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[M_Lookups] where DeleteFlag=0 AND Category = @P_Category
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_MailRemainder]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_M_MailRemainder]
	

AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT DisplayName from M_Lookups where DeleteFlag=0 and LookupsID = 125 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_MediaChannel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_MediaChannel]
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [MediaChannelID],[MediaChannelName] as MediaChannelName, DisplayOrder  from [dbo].[M_MediaChannel] where [DeleteFlag] = 0
	else
	SELECT [MediaChannelID],[ArMediaChannelName] as MediaChannelName,DisplayOrder  from [dbo].[M_MediaChannel] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_MeetingType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_MeetingType]   ******/
CREATE PROCEDURE [dbo].[Get_M_MeetingType] --'EN'
	@P_Language nvarchar(10) = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT MeetingTypeID,case when @P_Language = 'AR' then ArMeetingTypeName else MeetingTypeName end as MeetingTypeName
			,DisplayOrder from [dbo].M_MeetingType where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Modules]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--Get_M_Modules--
CREATE PROCEDURE [dbo].[Get_M_Modules] 
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT ModuleID as ModuleID, ModuleName as ModuleName from M_Module
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Nationality]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Nationality]
	-- Add the parameters for the stored procedure here
		@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [NationalityID], [NationalityName] as NationalityName,DisplayOrder from [dbo].[M_Nationality] where [DeleteFlag] = 0
	else
	SELECT [NationalityID], [ArNationalityName] as NationalityName,DisplayOrder from [dbo].[M_Nationality] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_OfficialTaskRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_M_OfficialTaskRequest]
	@P_Language nvarchar(10) =0
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [OfficialTaskRequestID],[OfficialTaskRequestName] as OfficialTaskRequestName, DisplayOrder from [dbo].[M_OfficialTaskRequest] where DeleteFlag=0 
	else
	SELECT [OfficialTaskRequestID],[ArOfficialTaskRequestName] as OfficialTaskRequestName, DisplayOrder from [dbo].[M_OfficialTaskRequest] where DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Religion]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Religion] 
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN') 
	SELECT [ReligionID], [ReligionName] as ReligionName,DisplayOrder  from [dbo].[M_Religion] where [DeleteFlag] = 0
	else
	SELECT [ReligionID], [ArReligionName] as ReligionName,DisplayOrder from [dbo].[M_Religion] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Section]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_Section]  ******/
CREATE PROCEDURE [dbo].[Get_M_Section]
@P_Language nvarchar(10) =null	
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	id int identity(1,1),
	[SectionID] int ,
	[SectionName] nvarchar(255)
	)
	if(@P_Language='EN')
	insert into @result ([SectionID],[SectionName])
	select [SectionID],[SectionName] from [dbo].[M_Section]
	if(@P_Language !='EN')
	insert into @result ([SectionID],[SectionName])
	select [SectionID],[ArSectionName] from [dbo].[M_Section]

	select * from @result
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Specialization]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_Specialization]
	-- Add the parameters for the stored procedure here
	@P_Language nvarchar(10) =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_Language = 'EN')
	SELECT [SpecializationID], [SpecializationName] as SpecializationName,DisplayOrder  from [dbo].[M_Specialization] where [DeleteFlag] = 0
	else
	SELECT [SpecializationID], [ArSpecializationName] as SpecializationName,DisplayOrder from [dbo].[M_Specialization] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Title]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[Get_M_Title]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT [TitleID], [Title] as TitleName,DisplayOrder from [dbo].[M_Title] where [DeleteFlag] = 0
	else
	SELECT [TitleID], [ArTitle] as TitleName,DisplayOrder from [dbo].[M_Title] where [DeleteFlag] = 0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_TripDestination]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_TripDestination]   ******/
Create PROCEDURE [dbo].[Get_M_TripDestination]
	@P_Language nvarchar(10) =''
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT [TripDestinationID],TripDestinationENValue as TripDestinationName from [dbo].[M_TripDestination] where DeleteFlag=0
	else
	SELECT [TripDestinationID], TripDestinationARValue as TripDestinationName  from [dbo].[M_TripDestination] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_Unit]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_M_Unit]  ******/
CREATE PROCEDURE [dbo].[Get_M_Unit]
@P_Language nvarchar(10)=null
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @result table(
	id int identity(1,1),
	[UnitID] int ,
	[UnitName] nvarchar(255)
	)
	if(@P_Language='EN')
	insert into @result ([UnitID],[UnitName])
	select [OrganizationID],[OrganizationUnits] from [dbo].[Organization]
	if(@P_Language!='EN')
	insert into @result ([UnitID],[UnitName])
	select [OrganizationID],ArOrganizationUnits from [dbo].[Organization]

	select * from @result
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_User]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_M_User]-- 'TestUser15'
	
	@P_search nvarchar(max) = null,
	@P_DepartmentID int =0
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	select UserProfileId as UserProfileID,EmployeeName from UserProfile where (DeleteFlag = 0 or DeleteFlag is null) and
	 EmployeeName like case when @P_search is null then EmployeeName else @P_search+'%' end and
	 UserProfileId not in ( select ApproverID from M_ApproverConfiguration as A where A.DepartmentID = @P_DepartmentID and DeleteFlag =0)
	 


END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_UserManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_UserManagement]   ******/
CREATE PROCEDURE [dbo].[Get_M_UserManagement]
@P_UserProfileID nvarchar(max)= null,
@P_Search nvarchar(max)=null,
@P_Method int =0,
@P_PageNumber int =0,
@P_PageSize int =0
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
    -- Insert statements for procedure here

	Declare @Result table(
	id int identity(1,1),
	UserProfileID int ,
	EmployeeName nvarchar(max),
	DepartmentID int,
	SectionID int,
	UnitID int,
	HOD bit,
	HOS bit,
	HOU bit,
	CanRaiseOfficalRequest bit,
	CanManageNews bit,
	CanEditContact bit,
	balanceLeave int
	);

	insert into @Result(UserProfileID,EmployeeName,DepartmentID,SectionID,UnitID,HOD,HOS,HOU,CanRaiseOfficalRequest,CanManageNews,CanEditContact,balanceLeave)
	select  UserProfileId,EmployeeName,DepartmentID,SectionID,OrgUnitID,HOD,HOS,IsOrgHead,CanRaiseOfficalRequest,CanManageNews
	,canEditContact,BalanceLeave
			from [dbo].[UserProfile]

			if(@P_Method = 1)
			begin
			select * from (Select row_number() over(Order By UserProfileID) as 
			slno,* from @Result where EmployeeName = case when @P_Search is null then EmployeeName else @P_Search end) as m 
			where slno between @StartNo and @EndNo 
			end
			else
			Select count(*) from @Result where EmployeeName = case when @P_Search is null then EmployeeName else @P_Search end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_VehicleIssues]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_VehicleIssues]  ******/
Create PROCEDURE [dbo].[Get_M_VehicleIssues]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT [IssueID] as IssueID,[IssueENValue] as IssueName from [dbo].[M_VehicleIssues] where DeleteFlag=0
	else
	SELECT [IssueID] as IssueID, [IssueARValue] as IssueName  from [dbo].[M_VehicleIssues] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_M_VehicleModel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_M_VehicleModel]  ******/
CREATE PROCEDURE [dbo].[Get_M_VehicleModel]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT VehicleModelID,VehicleModelENValue as VehicleModelName from [dbo].[M_VehicleModel] where DeleteFlag=0
	else
	SELECT VehicleModelID, VehicleModelARValue as VehicleModelName  from [dbo].[M_VehicleModel] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Maintenance]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Maintenance]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Maintenance] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MaintenanceAssigneeID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MaintenanceAssigneeID]
	-- Add the parameters for the stored procedure here
@P_ReferenceNumber nvarchar(max) = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @UserID int = 0;
	set @UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and Status = 55 and ([WorkflowProcess] = 'AssignToMeWorkflow' or [WorkflowProcess] = 'AssignWorkflow') 
	  order by WorkflowID desc) 
	 ))
	 if(@UserID is null)
	 begin
	 set @UserID = 0;
	 select @UserID as UserID
	 end
	 else
	 begin
	 select @UserID as UserID
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MaintenanceByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MaintenanceByApproverId] -- execute [dbo].[Get_LetterOutboundByApproverId] '005-2019-L'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = '004-2019-MM',
	@P_UserID int=20
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 53 ) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 53 ) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 53 )order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END

GO
/****** Object:  StoredProcedure [dbo].[Get_MaintenanceByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MaintenanceByID] --[Get_MaintenanceByID] 1
	-- Add the parameters for the stored procedure here
	@P_MaintenanceID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT [MaintenanceID],[ReferenceNumber],[SourceOU],[SourceName],[RequestorID],[RequestorDepartmentID],[Subject],[Details],
	[Priority],[ApproverDepartment],[DeleteFlag],
	(select top 1 Status from [Workflow] 
	 where [ReferenceNumber] = [dbo].[Maintenance].[ReferenceNumber] order by [WorkflowID] desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where [ReferenceNumber] = [dbo].[Maintenance].[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[Maintenance].CreatedBy) and Status = 53 order by [WorkflowID] desc) 
	 ))
	  as ApproverNameID,

	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (select top 1 FromEmail from [dbo].[Workflow] where [ReferenceNumber] =
	   (select ReferenceNumber from  [dbo].[Maintenance]  WHERE [MaintenanceID] = @P_MaintenanceID and [IsMaintenanceHeadApproved]=1) 
	   and [WorkflowProcess]= 'ApprovalWorkflow' order by [WorkflowID] desc)) as 'MaintenanceManagerUserID'

	  ,[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime]
	from [dbo].[Maintenance] WHERE DeleteFlag=0 and [MaintenanceID] = @P_MaintenanceID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MaintenanceCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MaintenanceCommunicationHistory]******/
CREATE PROCEDURE [dbo].[Get_MaintenanceCommunicationHistory] 
	-- Add the parameters for the stored procedure here
	@P_MaintenanceID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [CommunicationID],[MaintenanceID],[Message],[ParentCommunicationID],[Action],
	case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as 
	 CreatedBy,	[CreatedDateTime],case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName 
		from  [dbo].[MaintenanceCommunicationHistory] as a
		where [MaintenanceID]=@P_MaintenanceID --order by [CreatedDateTime] desc
	 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MaintenanceList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Get_MaintenanceList]   ******/
CREATE PROCEDURE [dbo].[Get_MaintenanceList] -- [Get_MaintenanceList] 1,4,1,4,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int =0,
	@P_Type nvarchar(250) = null,
	@P_Method int =0,
	@P_UserName nvarchar(250) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_Priority nvarchar(250) = null,
	@P_AttendedBy nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null	,
	@P_Language nvarchar(max) = null





AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	--declare @UserID int = 2
	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)

	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)
	 set @P_SourceOU =(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from [dbo].[M_Department] where DepartmentID=@P_SourceOU)
	 set @P_Status =(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where [LookupsID]=@P_Status)
	 declare @MaintenanceManagers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  declare @MaintenanceUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @MaintenanceManagers
	  select [UserProfileId],OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 12 and ([IsOrgHead] = 1 or HOD = 1 or HOS = 1)
	  --select * from @HRManagers
	  --GET HR users
	  insert into @MaintenanceUsers
	  select [UserProfileId],OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 12 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	  	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	MaintenanceID int,
	ReferenceNumber nvarchar(max),
	Source nvarchar(max),
	Subject nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	AttendedBy nvarchar(250),
	Priority nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	Details nvarchar(max),
	Requestor nvarchar(max),
	RequestorDepartment nvarchar(max),
	AssignedTo nvarchar(max))

	
	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Maintenance' group by ReferenceNumber) 

	--select * from @RequestList

	if(@P_Type = 1) --New requests
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,	m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
				else  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end,
			(select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (((r.Status = 53 and @UserEmail = r.ToEmail)or(( @UserEmail = r.ToEmail
	       or @UserEmail = r.DelegateTOEmail)and r.Status=53)) or (@P_UserID = m.CreatedBy and r.WorkflowProcess='SubmissionWorkflow')
		   or (r.Status =55 and m.IsMaintenanceHeadApproved =1 and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12))
		   or (r.Status =55 and m.IsMaintenanceHeadApproved is null and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12 and ([IsOrgHead] = 1 or HOD = 1 or HOS = 1)))
		   ) order by m.[CreatedDateTime] desc
			
	end
	else if(@P_Type = 2) --Need more info
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end,
			 (select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
		(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((r.WorkflowProcess='ReturnWorkflow' and @UserEmail = r.ToEmail and r.Status = 54) or
				(@UserEmail in(select FromEmail from Workflow as W where W.WorkflowProcess='ReturnWorkflow' and W.ReferenceNumber=r.ReferenceNumber )))
			order by m.[CreatedDateTime] desc
	end
	else if(@P_Type = 3) --closed requests
	begin

	insert into @Result
			SELECT m.MaintenanceID,  m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end,
			(select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
		(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and  ((@UserEmail = r.FromEmail or @P_UserID = m.CreatedBy)  and( r.Status = 57 or r.Status=56))
			order by m.[CreatedDateTime] desc
	end
	else if(@P_Type = 4) -- My pending Actions for RRC employees
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end,
			 (select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
		(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((( @UserEmail = r.ToEmail or @UserEmail = r.DelegateTOEmail)and (r.Status=53 or r.Status=54))
			)
			order by m.[CreatedDateTime] desc
		--	select * from M_Loockups
	end
	
	else if(@P_Type = 5) --My own personal requests
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end,
			 (select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
	(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and m.CreatedBy = @P_UserID and r.WorkflowProcess!='ReturnWorkflow'
			order by m.[CreatedDateTime] desc
	end
	else if(@P_Type = 6	) --My Processed Request
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end
			 ,
			 (select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
				( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' ))
			order by m.[CreatedDateTime] desc
	end


	else if(@P_Type = 7	) --InProgressRequest
	begin

	insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.SourceOU) as SourceOU ,m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then  (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2) end
			 ,
			 (select EmployeeName from UserProfile where UserProfileId=m.SourceName)  as sourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			 where [ReferenceNumber] = m.[ReferenceNumber] and [FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=m.CreatedBy) and Status = 53 order by [WorkflowID] desc) 
			 ))
			as ApproverName,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.ApproverDepartment) as ApproverDepartment,
			m.Details,(select EmployeeName from UserProfile where UserProfileId=m.RequestorID) as Requestor,
				( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = m.RequestorDepartmentID) as RequestorDepartment,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=m.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@P_UserID= m.CreatedBy and r.WorkflowProcess not in ('SubmissionWorkflow' ,'ReturnWorkflow')))
			--or( @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' ))))
			order by m.[CreatedDateTime] desc
	end
	--select * from @Result

	 if(@P_SourceOU != '')
	 delete from @result where Source not like '%'+@P_SourceOU+'%'

	 if(@P_Subject != '')
	 delete from @result where Subject not like '%'+@P_Subject+'%'

	 if(@P_Priority != '')
	 delete from @result where Priority not like '%'+@P_Priority+'%'

	 if(@P_AttendedBy!= '')
	 delete from @result where AttendedBy not like '%'+@P_AttendedBy+'%'

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or
		(Source  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Subject like '%'+@P_SmartSearch+'%')
		or (AttendedBy like '%'+@P_SmartSearch+'%')or (AssignedTo like '%'+@P_SmartSearch+'%')
		or ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  
		or (Priority  like '%'+@P_SmartSearch+'%') or (SourceName like '%'+@P_SmartSearch+'%')or (ApproverName like '%'+@P_SmartSearch+'%')or (ApproverDepartment like '%'+@P_SmartSearch+'%')
		or (Details like '%'+@P_SmartSearch+'%')or (Requestor like '%'+@P_SmartSearch+'%')or (RequestorDepartment like '%'+@P_SmartSearch+'%')) and id between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or
		(Source  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Subject like '%'+@P_SmartSearch+'%')
		or (AttendedBy like '%'+@P_SmartSearch+'%')or (AssignedTo like '%'+@P_SmartSearch+'%')
		or ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  
		or (Priority  like '%'+@P_SmartSearch+'%')or (SourceName like '%'+@P_SmartSearch+'%')or (ApproverName like '%'+@P_SmartSearch+'%')or (ApproverDepartment like '%'+@P_SmartSearch+'%')
		or (Details like '%'+@P_SmartSearch+'%')or (Requestor like '%'+@P_SmartSearch+'%')or (RequestorDepartment like '%'+@P_SmartSearch+'%')) 

		end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from @result where id between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_MasterAdminManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MasterAdminManagement]   ******/
CREATE PROCEDURE [dbo].[Get_MasterAdminManagement]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
    @P_Category nvarchar(250) = 17,
	@P_Search nvarchar(max) = null,
	@P_Language	 nvarchar(10)= 'EN'
AS
BEGIN
	
	SET NOCOUNT ON;
	
	declare @Result table(
	LookupsID int,
	DisplayName nvarchar(255),
	ArDisplayName nvarchar(255),
	CountryID  int,
	DisplayOrder int,
	CreatedBy int,
	UpdatedBy int,
	CreatedDateTime datetime,
	UpdatedDateTime datetime
	);

	if(@P_Category = 1)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select SpecializationID,SpecializationName,ArSpecializationName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Specialization   where DeleteFlag = 0
	end

	else if(@P_Category = 2)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select ReligionID,ReligionName,ArReligionName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Religion   where DeleteFlag = 0
	end

	else if(@P_Category = 3)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select OfficialTaskRequestID,OfficialTaskRequestName,ArOfficialTaskRequestName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_OfficialTaskRequest   where DeleteFlag = 0
	end

	else if(@P_Category = 4)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select NationalityID,NationalityName,ArNationalityName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Nationality   where DeleteFlag = 0
	end

	else if(@P_Category = 5)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select MediaChannelID,MediaChannelName,ArMediaChannelName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_MediaChannel   where DeleteFlag = 0
	end


	else if(@P_Category = 6)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select LocationID,LocationName,ArLocationName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Location   where DeleteFlag = 0
	end
	
	else if(@P_Category = 7)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select LanguageID,LanguageName,ArLanguageName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Language   where DeleteFlag = 0
	end

	else if(@P_Category = 8)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select ExperienceID,ExperienceName,ArExperienceName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Experience   where DeleteFlag = 0
	end

	else if(@P_Category = 9)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select EmployeeStatusID,EmployeeStatusName,ArEmployeeStatusName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_EmployeeStatus   where DeleteFlag = 0
	end

	else if(@P_Category = 10)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select EmiratesID,EmiratesName,ArEmiratesName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Emirates   where DeleteFlag = 0
	end

	else if(@P_Category = 11)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select EducationID,EducationName,ArEducationName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Education   where DeleteFlag = 0
	end

	else if(@P_Category = 12)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select DesignTypeID,DesignTypeName,ArDesignTypeName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_DesignType   where DeleteFlag = 0
	end

	else if(@P_Category = 13)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select CountryID,CountryName,ArCountryName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_Country   where DeleteFlag = 0
	end

	else if (@P_Category = 14)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,CountryID,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select CityID,CityName,ArCityName,CountryID,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_City   where DeleteFlag = 0
	end

	else if (@P_Category = 15)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select EventTypeID,EventTypeName,ArEventTypeName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_EventType   where DeleteFlag = 0
	end

	else if (@P_Category = 16)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select MeetingTypeID,MeetingTypeName,ArMeetingTypeName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_MeetingType   where DeleteFlag = 0
	end
	else if (@P_Category = 17)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName,DisplayOrder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime)
		select LeaveTypeID,LeaveTypeName,ArLeaveTypeName,Displayorder,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime from M_LeaveType   where DeleteFlag = 0
	end

	else if (@P_Category = 18)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName)
		select TripTypeID,TripTypeENValue,TripTypeARValue from [M_TripType]   where DeleteFlag = 0
	end
	else if (@P_Category = 19)
	begin	
		insert into @result(LookupsID,DisplayName,ArDisplayName)
		select VehicleModelID,VehicleModelARValue,VehicleModelENValue from [M_VehicleModel] where DeleteFlag = 0
	end
	else if (@P_Category = 20)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName)
		select AnnouncementTypeID,AnnouncementTypeName,AnnouncementTypeNameAr from [AnnouncementTypeAndDescription] where DeleteFlag = 0
	end
	else if (@P_Category = 21)
	begin
		insert into @result(LookupsID,DisplayName,ArDisplayName)
		select AnnouncementTypeID,Description,DescriptionAr from [AnnouncementTypeAndDescription] where DeleteFlag = 0 and DescriptionAr is not null and Description is not null
	end

	if(@P_Search is not null)
	select * from @Result where DisplayName like  @P_Search+'%'  or ArDisplayName like @P_Search+'%'
	else
	select * from @Result 		
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaApprovers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_MediaApprovers] -- [Get_MediaApprovers] '003-2019-MD',5,1

@P_ReferenceNumber nvarchar(max) = null,
@P_UserID int = null	

	
AS
BEGIN
	
	SET NOCOUNT ON;


	declare @creatorOrgUnitID int =0, @UserID int =0

	if(@P_UserID is null)
	begin
	select @UserID = UserProfileId,@creatorOrgUnitID = OrgUnitID from UserProfile where OfficialMailId =
	( select top(1)FromEmail from Workflow where WorkflowProcess='SubmissionWorkflow' and ReferenceNumber = @P_ReferenceNumber order by WorkflowID asc)
	end
	else
	begin
		select @UserID = UserProfileId,@creatorOrgUnitID = OrgUnitID from UserProfile where UserProfileId =@P_UserID
	end


	if(@creatorOrgUnitID = 4)
	SELECT *,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
	--and UserProfileId != @UserID 
	and  OrgUnitID in 
	( 17,4) and (IsOrgHead = 1 or HOD = 1 or HOS = 1) order by [IsOrgHead] desc	

	if(@creatorOrgUnitID = 17)
	SELECT *,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
	--and UserProfileId != @UserID 
	and  OrgUnitID= 17 and (IsOrgHead = 1 or HOD = 1 or HOS = 1) order by [IsOrgHead] desc	

	if(@creatorOrgUnitID is null or @creatorOrgUnitID not in(17,4))
	SELECT top 1 *,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
	--and UserProfileId != @UserID 
	and  OrgUnitID in ( 17) and (IsOrgHead = 1 or HOD = 1 or HOS = 1) order by [IsOrgHead] desc	
		
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaDesignRequestByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaDesignRequestByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = null,
	@P_UserID int =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 68) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 68)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 68)order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result
	

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaDesignRequestById]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_MediaDesignRequestById]
	@P_DesignID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 


	SELECT [DesignID],[ReferenceNumber],[Date],[SourceOU],[SourceName],[Title],[InitiativeProjectActivity],[DiwansRole],
	[OtherParties],[TargetGroup],[DeliverableDate],[TypeOfDesignRequired],[Languages],[GeneralObjective],
	[MainObjective],[StrategicObjective],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from Workflow 
	 where ReferenceNumber =[MediaDesignRequest].ReferenceNumber order by WorkflowID desc) as Status,
	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (       
	  (select top 1 ToEmail from @RequestList      
	  where ReferenceNumber =[MediaDesignRequest].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=MediaDesignRequest.CreatedBy) and (Status = 68)))) 
	  as ApproverID,
     ApproverDepartmentID as ApproverDepartmentID
	    
	  from [dbo].[MediaDesignRequest]  WHERE DesignID = @P_DesignID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaDesignRequestHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MediaDesignRequestHistoryByID] ******/
CREATE PROCEDURE [dbo].[Get_MediaDesignRequestHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_DesignID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [DesignID],[Action],[CommunicationId],[ParentCommunicationID],
		case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
	case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName  ,
			[CreatedDateTime],[Message] from [dbo].[MediaDesignRequestCommunicationHistory] as a where a.DesignID = @P_DesignID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaDesignRequesyByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaDesignRequesyByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and  ( WorkflowProcess='AssignWorkflow' or WorkflowProcess='AssignToMeWorkflow') order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and ( WorkflowProcess='AssignWorkflow')  order by WorkflowID desc) 
	 )
	 end

	select MediaDeptUsedIds from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewCampaignRequestByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewCampaignRequestByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 86) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 86)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 86)order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result
	

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewCampaignRequestById]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Get_MediaNewCampaignRequestById]
	@P_CampaignID int = null
AS
BEGIN
	
	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 
	

	SET NOCOUNT ON;
	SELECT [CampaignID],[ReferenceNumber],[Date],[SourceOU],[SourceName],[InitiativeProjectActivity],[CampaignStartDate],[CampaignPeriod],
	[DiwansRole],[OtherEntities],[TargetGroup],[TargetAudience],[Location],[Languages],[MediaChannels],[Notes],[RequestDetails],[GeneralInformation],
	[MainObjective],[MainIdea],[StrategicGoals],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[MediaNewCampaignRequest].ReferenceNumber order by WorkflowID desc) as Status,
	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (       
	  (select top 1 ToEmail from @RequestList      
	  where ReferenceNumber =[MediaNewCampaignRequest].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[MediaNewCampaignRequest].CreatedBy) and (Status = 86))      )) 
	  as ApproverID,
     ApproverDepartmentID  as ApproverDepartmentID
	    
	  from [dbo].[MediaNewCampaignRequest]  WHERE CampaignID = @P_CampaignID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewCampaignRequestHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MediaNewCampaignRequestHistoryByID]  ******/
CREATE PROCEDURE [dbo].[Get_MediaNewCampaignRequestHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_CampaignID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [CampaignID],[Action],[CommunicationId],[ParentCommunicationID],
		case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
	case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName   ,
			[CreatedDateTime],[Message] from [dbo].[MediaNewCampaignRequestCommunicationHistory] as a where a.CampaignID = @P_CampaignID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewCampaignRequesyByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewCampaignRequesyByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and  ( WorkflowProcess='AssignWorkflow' or WorkflowProcess='AssignToMeWorkflow') order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber  and ( WorkflowProcess='AssignWorkflow')  order by WorkflowID desc) 
	 )
	 end

	select MediaDeptUsedIds from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPhotographerByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewPhotographerByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow') order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and ( WorkflowProcess = 'AssignWorkflow') order by WorkflowID desc) 
	 )
	 end

	select MediaDeptUsedIds from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPhotographerRequestByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewPhotographerRequestByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 74) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 74)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 74)order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result
	

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPhotoGrapherRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewPhotoGrapherRequestByID]
--  [Get_DiwanIdentityByID] 43
	@P_PhotoGrapherID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	
		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 

	
	SELECT [PhotoGrapherID],[ReferenceNumber],[Date],[SourceOU],[SourceName],[EventName],[EventDate],[Location],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from Workflow  
	 where ReferenceNumber =[MediaNewPhotographerRequest].ReferenceNumber order by WorkflowID desc ) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList 
	 where ReferenceNumber =[MediaNewPhotographerRequest].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=MediaNewPhotographerRequest.CreatedBy) and (Status = 74 )) 
	 ))
	  as ApproverID,
	ApproverDepartmentID  as ApproverDepartmentID
	  
	  from [dbo].[MediaNewPhotographerRequest]  WHERE [PhotoGrapherID] = @P_PhotoGrapherID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPhotographerRequestHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MediaNewPhotographerRequestHistoryByID]  ******/
CREATE PROCEDURE [dbo].[Get_MediaNewPhotographerRequestHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_PhotoGrapherID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [PhotoGrapherId],[Action],[CommunicationId],[ParentCommunicationID],
		case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
	 case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName ,
			[CreatedDateTime],[Message] from [dbo].[MediaNewPhotographerRequestCommunicationHistory] as a where a.[PhotoGrapherId]= @P_PhotoGrapherID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewPressReleaseByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
	if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and ( WorkflowProcess='AssignWorkflow' or WorkflowProcess='AssignToMeWorkflow')  order by WorkflowID desc) 
	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and ( WorkflowProcess='AssignWorkflow')  order by WorkflowID desc) 
	 )
	 end

	select MediaDeptUsedIds from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseRequestByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Get_MediaNewPressReleaseRequestByApproverId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 80) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 80)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 80)order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result
	 
END


GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaNewPressReleaseRequestByID]
--  [Get_DiwanIdentityByID] 43
	@P_PressReleaseID int = null
AS
BEGIN
	
	SET NOCOUNT ON;

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 


	SELECT [PressreleaseID],[ReferenceNumber],[SourceOU],[SourceName],[Date],[EventName],[Subject],[Type],[Location],[AttendedBy],[Partners],
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from Workflow  
	 where ReferenceNumber =[MediaNewPressReleaseRequest].ReferenceNumber order by WorkflowID  desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList 
	 where ReferenceNumber =[MediaNewPressReleaseRequest].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[MediaNewPressReleaseRequest].CreatedBy) and (Status = 80 )) 
	 ))
	  as ApproverID,
	  
	 ApproverDepartmentID as ApproverDepartmentID	  
	  from [dbo].[MediaNewPressReleaseRequest]  WHERE [PressreleaseID] = @P_PressReleaseID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseRequestHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseRequestHistoryByID]    Script Date: 6/11/2019 11:27:32 PM ******/
CREATE PROCEDURE [dbo].[Get_MediaNewPressReleaseRequestHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_PressReleaseID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT [PressReleaseID],[Action],[CommunicationId],[ParentCommunicationID],
		case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
	 case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName  ,
			[CreatedDateTime],[Message] from [dbo].[MediaNewPressReleaseRequestCommunicationHistory] as a where a.[PressReleaseID]= @P_PressReleaseID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaPhotoRequestByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MediaPhotoRequestByApproverId] 
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 92) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 92)order by WorkflowID desc)  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 92)order by WorkflowID desc)  
	 )

		

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;
	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result
	
END

GO
/****** Object:  StoredProcedure [dbo].[Get_MediaPhotoRequestByAssigneeandMediaId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MediaPhotoRequestByAssigneeandMediaId]
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @result table(
	MediaDeptUsedIds int
	);
if(@P_Method = 0)
	begin
	insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (WorkflowProcess = 'AssignToMeWorkflow' or  WorkflowProcess = 'AssignWorkflow')
	  order by WorkflowID desc) 	 )
	 end 
	 if(@P_Method = 1)
	 begin
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 FromEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and WorkflowProcess = 'AssignWorkflow' order by WorkflowID desc) 
	 )
	 end
	select MediaDeptUsedIds from @result

END
/****** Object:  StoredProcedure [dbo].[Get_MediaPhotoRequestByID]    Script Date: 10-07-2019 21:30:57 ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_MediaPhotoRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MediaPhotoRequestByID] 
	-- Add the parameters for the stored procedure here
	@P_PhotoID int = null
	AS
BEGIN

declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255))

insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow' group by ReferenceNumber) 


SELECT [PhotoID],[ReferenceNumber],[Date],[SourceOU],[SourceName],[EventName],[EventDate],[Location], [CreatedBy] ,[CreatedDateTime],[PhotoDescription],

	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[MediaPhotoRequest].ReferenceNumber order by WorkflowID desc) as Status,

	 (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =[MediaPhotoRequest].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=MediaPhotoRequest.CreatedBy) and (Status = 92)) 
	 ))
	  as ApproverID,

	  ApproverDepartmentID as ApproverDepartmentID
	  from [dbo].[MediaPhotoRequest]  WHERE PhotoID = @P_PhotoID
	  END

	  /****** Object:  StoredProcedure [dbo].[Get_MediaNewPressReleaseByAssigneeandMediaId]    Script Date: 12-07-2019 11.26.57 AM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_Meeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_Meeting]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Meeting] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingByID]
	@P_MeetingID int = null,
	
	@P_UserID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT[MeetingID],(select MomID from MOM where Meeting.MeetingID=MOM.MeetingID) as MomID,[ReferenceNumber],[OrganizerDepartmentID],[OrganizerUserID],[Subject],
	[Location],[StartDateTime],[EndDateTime],[MeetingType],[IsInternalInvitees],[IsExternalInvitees],[RemindMeAt],
	[DeleteFlag],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],[Status]from [dbo].[Meeting] where DeleteFlag=0 and MeetingID = @P_MeetingID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingCalenderList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingCalenderList] --[Get_MeetingCalenderList] 10,2019,15,'','','','','','','sadsd'
	-- Add the parameters for the stored procedure here
	@P_Month int =0,
	@P_Year int =0,
	@P_UserID int =0,
	@P_ReferenceNumber nvarchar(250)=null,
	@P_Subject nvarchar(250)=null,
	@P_Location nvarchar(250)=null,
	@P_StartDateTime datetime =null,
	@P_EndDateTime datetime =null,
	@P_MeetingType int=null,
	@P_SmartSearch nvarchar(250) = null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	declare @result table(
	
	MeetingID int,
	ReferenceNumber nvarchar(255),
	Subject nvarchar(255),
	Location nvarchar(max),
	startDateTime datetime,
	EndDateTime datetime,
	MeetingType int ,
	PointsDiscussed nvarchar(Max),
	PendingPoints nvarchar(Max),
	Suggestion nvarchar(Max),
	CreatedBy int 
	);

	insert into @result
	select   
	a.MeetingID,  a.ReferenceNumber,a.Subject,a.Location,a.StartDateTime,a.EndDateTime,a.MeetingType,
	(select PointsDiscussed from MOM where MeetingID=a.MeetingID),(select PendingPoints from MOM where MeetingID=a.MeetingID),(select Suggestion from MOM where MeetingID=a.MeetingID),a.CreatedBy
	from [dbo].[Meeting] as a where  DeleteFlag=0 and ((@P_UserID = a.CreatedBy) or @P_UserID in (select UserID from MeetingInternalInvitees where MeetingID=a.MeetingID )) and MONTH(a.StartDateTime)=@P_Month and Year(a.StartDateTime)= @P_Year

	if(@P_ReferenceNumber != ''and @P_ReferenceNumber is not null)
	 delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'
	 
	 if(@P_Subject != ''and @P_Subject is not null)
	 delete from @result where Subject not like '%'+@P_Subject+'%'

	 if(@P_Location != ''and @P_Location is not null)
	 delete from @result where Location not like '%'+@P_Location+'%'

	 if(@P_MeetingType !=''and @P_MeetingType is not null)
	 delete from @result where MeetingType != @P_MeetingType

	  if(@P_StartDateTime is not null and @P_StartDateTime !='')
	 delete from @result where cast( startDateTime as date) <> cast(@P_StartDateTime as date)

	  if(@P_EndDateTime is not null and @P_EndDateTime !='')
	 delete from @result where cast( EndDateTime as date) <> cast(@P_EndDateTime as date)


	  if(@P_SmartSearch is not null )
     begin
     select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result as R where
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Subject  like '%'+@P_SmartSearch+'%') or
        (Location  like '%'+@P_SmartSearch+'%') or 
        (MeetingType  like '%'+@P_SmartSearch+'%')  or
        ((SELECT  CONVERT(nvarchar(10), cast(startDateTime as date), 103))  like '%'+@P_SmartSearch+'%') 
		or
        ((SELECT  CONVERT(nvarchar(10), cast(EndDateTime as date), 103))  like '%'+@P_SmartSearch+'%')
		or ((select count(K.ContactPerson) from MeetingExternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.ContactPerson like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.UserID) from MeetingInternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.RemindMeDateTime) from MeetingRemindMeAt as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  CONVERT(nvarchar(10), cast(k.RemindMeDateTime as date), 103)) like '%'+@P_SmartSearch+'%')>0)
		
		))as m 
        
     end
	  if( @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
		 * from @result) as m
	 end
	
	
	End
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingExternalInviteesByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingExternalInviteesByID]
	@P_MeetingID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT MeetingExternalInviteesID,MeetingID,Organization,ContactPerson,EmailID from [dbo].[MeetingExternalInvitees] where MeetingID = @P_MeetingID and DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/****** Object:  StoredProcedure [dbo].[Get_MeetingHistoryByID]  ******/
CREATE PROCEDURE [dbo].[Get_MeetingHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_MeetingID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT MeetingID,[Action],[CommunicationId],[ParentCommunicationID],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileID = a.CreatedBy  ) as CreatedBy,
			[CreatedDateTime],Comment as Message from [dbo].[MeetingcommunicationHistory] as a where a.MeetingID = @P_MeetingID and IsMom =0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingInternalInviteesByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingInternalInviteesByID]
	@P_MeetingID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT MeetingInternalInviteesID,MeetingID,DepartmentID,UserID from [dbo].[MeetingInternalInvitees] where MeetingID = @P_MeetingID and DeleteFlag=0 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	 
	 
/****** Object:  StoredProcedure [dbo].[Get_MeetingList]  ******/
CREATE PROCEDURE [dbo].[Get_MeetingList] --[Get_MeetingList] 1,10,1,0
    -- Add the parameters for the stored procedure here
    @P_PageNumber int =0,
    @P_PageSize int =0,
    @P_UserID int =0,
    @P_Method int=0,
    @P_ReferenceNumber nvarchar(250)=null,
    @P_Subject nvarchar(250)=null,
    @P_Location nvarchar(250)=null,
    @P_StartDateTime datetime =null,
    @P_EndDateTime datetime =null,
    @P_MeetingType  nvarchar(255)=null,
    @P_Invitees nvarchar(255)=null,
    @P_SmartSearch nvarchar(250)=null,
    @P_Language nvarchar(10)= null
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;

 

    -- Insert statements for procedure here
    declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

 

    select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;
    declare @result table(
    id int,
    MeetingID int,
    ReferenceNumber nvarchar(255),
    Subject nvarchar(255),
    Location nvarchar(max),
    startDateTime datetime,
    EndDateTime datetime,
    MeetingType nvarchar(max) ,
    Invitees nvarchar(Max),
    CreatedBy int ,
    InternalInvitees int,
    ExternalInvitees int, 
    OrganizerDepartment nvarchar(Max),
    OrganizerName nvarchar(Max));
    insert into @result
    select * from (select row_number() over(Order By [MeetingID]) as 
    slno,MeetingID,  ReferenceNumber,Subject,Location,StartDateTime,EndDateTime,(select (case when @P_Language='EN' then MeetingTypeName else
     ArMeetingTypeName end) from M_MeetingType where MeetingTypeID=c.MeetingType) as MeetingType, (select(case when @P_Language='EN'then DisplayName else ArDisplayName 
	end ) from M_Lookups where DisplayName=(select(case  when c.IsExternalInvitees='true'and c.IsInternalInvitees='true' then 'Internal and External' when c.IsExternalInvitees ='true' then 'External' when c.IsInternalInvitees='true'
	then 'Internal' end) ) )as Invitees, CreatedBy,C.IsInternalInvitees,C.IsExternalInvitees,
      (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID=c.OrganizerDepartmentID) as OrganizerDepartment,
      (select EmployeeName from UserProfile where UserProfileId=c.OrganizerUserID) as OrganizerName
    from [dbo].[Meeting] as c where  DeleteFlag=0  ) as m where (@P_UserID = m.CreatedBy) or @P_UserID in (select UserID from MeetingInternalInvitees where MeetingID=m.MeetingID )

 

    --select * from @result
    
    if(@P_ReferenceNumber != '')
     delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'
     
     if(@P_Subject != '')
     delete from @result where Subject not like '%'+@P_Subject+'%'

 

     if(@P_Location != '')
     delete from @result where Location not like '%'+@P_Location+'%'

 


     if(@P_MeetingType is not null and @P_MeetingType !='')
     delete from @result where MeetingType !=(select MeetingTypeName from M_MeetingType where MeetingTypeID=@P_MeetingType)

 


      if(@P_StartDateTime is not null and @P_StartDateTime!='')
     delete from @result where (Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),StartDateTime) as date)) < cast(@P_StartDateTime as nvarchar(250))

 


      if(@P_EndDateTime is not null and @P_EndDateTime!='')
     delete from @result where (Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),EndDateTime) as date)) > cast(@P_EndDateTime as nvarchar(250))
     
        if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=194)  or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=194))
         delete from @result where InternalInvitees = 0

 

     if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=195) or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=195))
     delete from @result where ExternalInvitees = 0

 

     if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=196)or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=196))
     delete from @result where ExternalInvitees = 0 or InternalInvitees =0

 

     if(@P_SmartSearch is not null and @P_Method = 0 )
     begin
     select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result as R where
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Subject  like '%'+@P_SmartSearch+'%') or
        (Location  like '%'+@P_SmartSearch+'%') or 
        (MeetingType  like '%'+@P_SmartSearch+'%') or(Invitees  like '%'+@P_SmartSearch+'%') or
        ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),startDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), startDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%') or
        ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),EndDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), EndDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%')      
        or ((select count(K.ContactPerson) from MeetingExternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.ContactPerson like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.UserID) from MeetingInternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.RemindMeDateTime) from MeetingRemindMeAt as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or 
        K.DeleteFlag is null) and (Select convert(nvarchar(50),cast( k.RemindMeDateTime as date),103)) like '%'+@P_SmartSearch+'%')>0)
        or (OrganizerName like '%'+@P_SmartSearch+'%')or (OrganizerDepartment  like '%'+@P_SmartSearch+'%') ))as m where   m.slno between @StartNo and @EndNo     
     end

 


      if(@P_SmartSearch is not null and @P_Method = 1 )
     begin
        select count(*) from @result as R where 
        ((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Subject  like '%'+@P_SmartSearch+'%') or(Location  like '%'+@P_SmartSearch+'%') or 
        (MeetingType  like '%'+@P_SmartSearch+'%') or(Invitees  like '%'+@P_SmartSearch+'%')or
         ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),startDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), startDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%') or
        ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),EndDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), EndDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%')      
         or ((select count(K.ContactPerson) from MeetingExternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.ContactPerson like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.UserID) from MeetingInternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.RemindMeDateTime) from MeetingRemindMeAt as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or 
        K.DeleteFlag is null) and (Select convert(nvarchar(50),cast(k.RemindMeDateTime as date),103)) like '%'+@P_SmartSearch+'%')>0)
        or (OrganizerName like '%'+@P_SmartSearch+'%')or (OrganizerDepartment  like '%'+@P_SmartSearch+'%')
        )
        
     end

 

     if(@P_Method = 0 and @P_SmartSearch is null)
     begin
     select * from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result) as m where slno between @StartNo and @EndNo 
     end

 

     if(@P_Method = 1 and @P_SmartSearch is null)
     select count(*) from @result 
  
     END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Get_MeetingPreview] 
	-- Add the parameters for the stored procedure here
	@P_MeetingID int = null,
	@P_UserID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [ReferenceNumber],
	(select DepartmentName from M_Department where DepartmentID= OrganizerDepartmentID ) as OrganizerDepartmentID,
	(select EmployeeName from [dbo].[UserProfile] where UserProfileId=OrganizerUserID ) as OrganizerUserID,
	subject,Location,
	(select STUFF((

select (
    select ','+ContactPerson AS [text()]  from (
        select ContactPerson 
        from MeetingExternalInvitees where MeetingID=c.MeetingID
        UNION
        select CAST(EmployeeName AS VARCHAR(max)) AS [text()]
    FROM  [dbo].[UserProfile] where [UserProfileId] in 
	(select UserID from [dbo].MeetingInternalInvitees where MeetingID =c.MeetingID)
    ) A
    FOR XML PATH ('')
) ), 1, 1, NULL) )as Attendees,

 

    StartDateTime,EndDateTime,(select PointsDiscussed from MOM as a where a.MeetingID=c.MeetingID) as PointsDiscussed,
    (select PendingPoints from MOM as a where a.MeetingID=c.MeetingID) as PendingPoints,
    (select Suggestion from MOM as a where a.MeetingID=c.MeetingID) as Suggestion,CreatedBy  from [dbo].Meeting as c where c.MeetingID = @P_MeetingID and @P_UserID=c.CreatedBy 
    or @P_UserID in (select UserID from MeetingInternalInvitees as d where d.MeetingID=@P_MeetingID ) 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingRemindMeAt]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingRemindMeAt]
	@P_MeetingID int = 0
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].MeetingRemindMeAt where MeetingID = @P_MeetingID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MeetingRemindMeAtByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:        <Author,,Name>
-- Create date: <Create Date,,>
-- Description:    <Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MeetingRemindMeAtByID]
    @P_MeetingID int = 0
AS
BEGIN
    
    SET NOCOUNT ON;
    SELECT MeetingRemindID,MeetingID,RemindMeDateTime from [dbo].MeetingRemindMeAt where MeetingID = @P_MeetingID and DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoApproverAndDelegateUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MemoApproverAndDelegateUser] --  [Get_MemoApproverAndDelegateUser] '003-2019-M',2
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_Type int =1  -- Type = 1 => Approver ; Type = 2 => DelegateUser
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 1 or Status = 2) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 2 or W.Status = 1))  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 2 or WD.Status = 1))  
	 )

	 if(@P_Type = 1)
	 begin
		select ApproverId from @result where id = 1;
	 end

	 if(@P_Type = 2)
	 begin
		select ApproverId from @result where id = 1;
	 end

END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoAttachmentByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MemoAttachmentByID]
	@P_MemoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[MemoAttachments] where DeleteFlag=0 and MemoID = @P_MemoID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MemoByApproverId] --  Get_MemoByApproverId '102-2019-M'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 1 or Status = 2) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W
	 where W.ReferenceNumber =@P_ReferenceNumber and (W.Status = 2 or W.Status = 1))  
	 ) 
	 
	 insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 2 or WD.Status = 1))  
	 )

	 if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MemoByID]   ******/
CREATE PROCEDURE [dbo].[Get_MemoByID] --  [Get_MemoByID] 15,1
	@P_MemoID int = null,
	@P_UserID int =null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @UserEmail nvarchar(250)
	set @UserEmail = (Select OfficialmailID from UserProfile where UserProfileID = @P_UserID)

	SELECT [MemoID],[ReferenceNumber],[Title],[SourceOU],[SourceName],[Details],[Private],[Priority],[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Memo].ReferenceNumber order by WorkflowID desc) as Status,
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Memo].ReferenceNumber order by WorkflowID desc) as StatusCode,

	 (select [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =[Memo].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Memo.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverNameID,
	  
	 --(select DepartmentID from M_ApproverConfiguration where ApproverID in (select UserProfileId from [dbo].[UserProfile] where [OfficialMailId]  = (
	 -- (select top 1 ToEmail from [Workflow]
	 --where ReferenceNumber =[Memo].ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=Memo.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 --))) 
	   InitalApproverDepartment as ApproverDepartmentID,
	   (select top(1)IsRedirect from Workflow where ToEmail =@UserEmail and 
    ReferenceNumber =[memo].Referencenumber and (WorkflowProcess='RedirectWorkflow' or WorkflowProcess='ApprovalWorkflow')and Status=3) as IsRedirect
	   
	  from [dbo].[Memo]  WHERE MemoID = @P_MemoID
END	
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MemoDestinationDepartment]
	@P_MemoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.[DepartmentID],(select M.DepartmentName from M_Department as M where M.DepartmentID= a.DepartmentID) as MemoDestinationDepartmentName 
	from [dbo].[MemoDestinationDepartment] as a where  a.MemoID = @P_MemoID and a.DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoDestinationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MemoDestinationUsers]
	@P_MemoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.UserID as MemoDestinationUsersID,(select [EmployeeName] from [dbo].[UserProfile] as b where b.UserProfileId=a.UserID)as MemoDestinationUsersName from [dbo].[MemoDestinationUsers] as a where  MemoID = @P_MemoID
	and DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MemoHistory]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[MemoHistory] 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MemoHistoryByID]-- 49
	@P_MemoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [HistoryID],[MemoID],[Action], 
	case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=ActionBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=ActionBy)) end as ActionBy,
			[ActionDateTime],[Comments] from [dbo].[MemoHistory] where MemoID = @P_MemoID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoHistoryList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MemoHistoryList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [HistoryID]) as 
	slno, *
	from [dbo].[MemoHistory]  )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_MemoKeywords] --[Get_MemoKeywords] 1,1,1
    @P_MemoID int = null,
    @P_Type int = 0,
    @P_UserID nvarchar(100)= null
AS
BEGIN
    
    SET NOCOUNT ON;
    if(@P_Type is null or @P_Type =1 or @P_Type =0)
    SELECT distinct([Keywords]),UserID from [dbo].[MemoKeywords] where [MemoID]= @P_MemoID and DeleteFlag=0;

 

    if((@P_Type is not null or @P_Type >1) and @P_Type!=1)
    SELECT distinct([Keywords]),UserID from [dbo].[MemoKeywords] where UserID= @P_UserID and DeleteFlag=0;
END 
	 

	 

GO
/****** Object:  StoredProcedure [dbo].[Get_MemoList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MemoList]  ******/
CREATE PROCEDURE [dbo].[Get_MemoList] -- [Get_MemoList]1,100,1,TestUser5,0,'Pending for Resubmission',null,null,null,null,null,null,'Housing Services'
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type nvarchar (250) = null,
	@P_Username nvarchar(250) = null,
	@P_Method int =0,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_DestinationOU nvarchar(255) = '',
	@P_Private nvarchar(255) = '',
	@P_Priority nvarchar(255) = '',
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10)= ''

	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	MemoID int,
	ReferenceNumber nvarchar(255),
	Title nvarchar(255),
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	Details nvarchar(max),
	Destination nvarchar(max),
	Status nvarchar(255),
	StatusCode int,
	CreatedDateTime datetime,
	Private nvarchar(255),
	Priority nvarchar(255),
	ApproverDepartment nvarchar(255),
	ApproverName nvarchar(255),	
	UpdatedDateTime datetime
	);


    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where EmployeeName = @P_Username)
	 SET @P_Username = (Select UserProfileId from [dbo].[UserProfile] where EmployeeName = @P_Username)
	
	 

	 --create a workflow temp table and inserted latest row depending group by reference number
		 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		FromMail nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max), 
		WorkflowProcess nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,FromEmail,ToEmail,Status,DelegateToEmail,WorkflowProcess from [dbo].[Workflow] order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	--	select * from @Workflow order by WorkflowID asc

	
		if (@P_Type = '1' or @P_Type ='0')
	begin
	
	--SET @P_Status = (Select LookupsID from [dbo].[M_Lookups] where DisplayName = 'Waiting for Approval' AND Module = 'Memo' AND Category = 'Status')	  
     
	 insert into @result 
    Select  * from (SELECT row_number() over (Order By  [MemoID] ) as slno, 
    a.MemoID,
    a.ReferenceNumber,
    a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
   a.Details,
       (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
   (select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
    a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
		(select [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime 
    FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0 and 
	(( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail)  and ( w.Status=2 or w.Status=5)) or
	((w.Status = 3 )  and 
	((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.ReferenceNumber and 
	DeleteFlag =0 and Status=3 and IsRedirect =0 ))
	))) as m 
   	 end

	
	
	

	--Outgoing Memos
	if (@P_Type = '2' or @P_Type ='0')
	begin
	 insert into @result
	 Select  * from (SELECT row_number() over (Order By  [MemoID]) as slno, 
	 a.MemoID,
	 a.ReferenceNumber,
	 a.Title,

   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
   a.Details,
	   (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
     (select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
	a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
	(select EmployeeName from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	  (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
	FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
	where a.DeleteFlag = 0 and 
	--(@P_UserEmail != w.ToEmail or (@P_Username = a.CreatedBy and status !=5)) AND
	((a.CreatedBy = @P_Username and w.Status not in (1,5))  or
	@P_UserEmail in (select FromEmail from Workflow where ReferenceNumber = a.ReferenceNumber and WorkflowProcess!='SubmissionWorkflow' and Status NOT IN (1,6)))) as m 
	end
	
	
	
	--Incoming Memos
	if (@P_Type = '3' or @P_Type ='0')
	begin
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [MemoID]) as slno, 
	a.MemoID,
	a.ReferenceNumber,
	a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
	  (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
	a.Details,
	   (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
     (select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
	a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
  (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
		(select EmployeeName from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	  (case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
   FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
   where a.DeleteFlag = 0 and ((w.Status = 6 and W.FromMail = @P_UserEmail)
   OR (w.Status=3 and  @P_Username in (select [UserID] from [dbo].[ShareparticipationUsers]   where [ServiceID]=a.MemoID and [Type] ='Memo' )))
   --or (@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.ReferenceNumber and  DeleteFlag =0 and Status=3 and IsRedirect =0 ))
	) as m 
   end
		

	--Draft Memos
	if (@P_Type = '4')
	begin
	--SET @P_Status=(Select LookupsID from [dbo].[M_Lookups] where DisplayName = 'Draft' AND Module = 'Memo' AND Category = 'Status')
	 
	 insert into @result
	Select  * from (SELECT row_number() over (Order By  [MemoID] desc) as slno,
	 a.MemoID,
	 a.ReferenceNumber,
	 a.Title,
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU)as SourceOU  ,
    (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,a.Details,
	   (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
     (select top 1 Status from [Workflow] 
	 where ReferenceNumber =a.ReferenceNumber order by WorkflowID desc) as StatusCode,
	a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   --(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Priority,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
	 (select EmployeeName from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime 
   FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
    where a.DeleteFlag = 0 AND a.CreatedBy = @P_Username and w.Status=1) as m 
	 end


	 ;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

	 if(@P_SourceOU != '')
	 delete from @result where SourceOU not like '%'+Rtrim(@P_SourceOU)+'%'

	 if(@P_DestinationOU != '')
	 delete from @result where Rtrim(@P_DestinationOU) not in (select value from string_split(Destination,','))

	 if(@P_Private != '')
	 delete from @result where cast(Private as nvarchar(max)) != RTRIM(@P_Private)

	 if(@P_Priority != '')
	 delete from @result where Priority!= RTrim(@P_Priority)

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreatedDateTime as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreatedDateTime as date) > cast(@P_DateTo as date)

	 if(@P_Status !='' and @P_Status !='All' and (@P_Type = 2 or @P_Type = 3 or @P_Type =1))
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin	 
		select * from (SELECT row_number() over (Order By ReferenceNumber desc) as slno, * from   @result as R where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Private  like '%'+@P_SmartSearch+'%')   or (Priority  like '%'+@P_SmartSearch+'%') or
		((select count(K.MemoKeywordsID) from MemoKeywords as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and K.Keywords like '%'+@P_SmartSearch+'%')>0) or (ApproverDepartment like  '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%')  or (Details like '%'+@P_SmartSearch+'%') or(SourceName like '%'+@P_SmartSearch+'%')
		or ((select count(K.UserID) from MemoDestinationUsers as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.DepartmentID) from MemoDestinationDepartment as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		 )
		)

		as m where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as R where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceOU  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast(CreatedDateTime as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Private  like '%'+@P_SmartSearch+'%')  or (Priority  like '%'+@P_SmartSearch+'%') or
		((select count(K.MemoKeywordsID) from MemoKeywords as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and K.Keywords like '%'+@P_SmartSearch+'%')>0) or (ApproverDepartment like  '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%') 
		or (Details like '%'+@P_SmartSearch+'%')or(SourceName like '%'+@P_SmartSearch+'%')or ((select count(K.UserID) from MemoDestinationUsers as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
	or ((select count(K.DepartmentID) from MemoDestinationDepartment as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		
	) 
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno, * from @result) as  m where slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_MemoPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MemoPreview]   ******/
CREATE PROCEDURE [dbo].[Get_MemoPreview]
	@P_MemoID int = 0
AS
BEGIN
	
	SET NOCOUNT ON;

	
	Declare @ReferenceNumber nvarchar(max) = null, @ApproverEmail nvarchar(max) = null, @ApproverName nvarchar(max),@ApproverDesignation nvarchar(max),
	@ApproverID int,@ApproverDepartment  nvarchar(max) = null,@signatureID nvarchar(max)=null, @SignatureName nvarchar(max)=null,@Title nvarchar(max)=null
	,@RedirectName nvarchar(max),@RedirectID int=0, @RedirectPhoto nvarchar(max); 

	select @ReferenceNumber=ReferenceNumber from Memo where MemoID= @P_MemoID

	set @ApproverEmail = (select top 1 case when DelegateFromEmail is null then FromEmail else DelegateFromEmail end from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (3,4) order by WorkflowID desc)

	select @RedirectName=EmployeeName,@RedirectID = UserProfileId,@RedirectPhoto = SignaturePhoto from UserProfile where OfficialMailId = (select top 1 FromEmail from Workflow where ReferenceNumber= @ReferenceNumber and status =5 order by WorkflowID desc)

	if(@ApproverEmail is null)
	set @ApproverEmail = (select top 1 ToEmail from Workflow where ReferenceNumber = @ReferenceNumber 
							and Status in (1,2) order by WorkflowID desc)
	
	if(@ApproverEmail is not null)
	select @Title = U.Title, @ApproverID=UserProfileId,@ApproverName=EmployeeName,@ApproverDesignation=EmployeePosition,@ApproverDepartment=
	(select ArDepartmentName from M_Department as M where M.DepartmentID= U.DepartmentID) from UserProfile as U  where OfficialMailId = @ApproverEmail

	if((select count(*) from Workflow where ReferenceNumber = @ReferenceNumber and Status in (3,4) )>0)
	begin
	select @SignatureName = U.SignaturePhoto, @signatureID=U.SignaturePhotoID from UserProfile as U  where OfficialMailId = @ApproverEmail
	end

	SELECT [MemoID],[ReferenceNumber],[Title] ,[SourceOU],[SourceName],[Details],[Private],[Priority],[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =[Memo].ReferenceNumber order by WorkflowID desc) as Status,@ApproverDesignation as ApproverDesignation,
	  (select STUFF((select (select ','+EmployeeName AS [text()]  from (
        select EmployeeName from UserProfile as c join MemoDestinationUsers as a on c.UserProfileId=a.UserID where a.MemoID=memo.MemoID
       ) A FOR XML PATH ('') ) ), 1, 1, NULL) )as DestinationTitle, @ApproverName as ApproverNameID,@ApproverID  as ApproverID,
	@SignatureName as SignaturePhotoApprover,  @RedirectPhoto as SignaturePhotoRedirector, @RedirectName as RedirectNameID,
	@RedirectID as RedirectID,(  select top 1 m.Comments from MemoHistory as m where Action='Redirect' and m.MemoID=memo.MemoID ) as Comments
	from [dbo].[Memo]  WHERE MemoID = @P_MemoID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MOMByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_MOMByID]
	@P_MeetingID int = null,
	
	@P_UserID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT (select MOMID from MOM as a where a.MeetingID=c.MeetingID )as MOMID,MeetingID,ReferenceNumber,OrganizerDepartmentID,OrganizerUserID,
	Subject,Location,
	 (select STUFF((

select (
    select ','+ContactPerson AS [text()]  from (
        select ContactPerson 
        from MeetingExternalInvitees where MeetingID=c.MeetingID
        UNION
       select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] in (select cast(UserID as nvarchar(max))
        from MeetingInternalInvitees where MeetingID=c.MeetingID)
    ) A
    FOR XML PATH ('')
) ), 1, 1, NULL) )as Attendees,

	 StartDateTime,EndDateTime,
	(select PointsDiscussed from MOM as a where a.MeetingID=c.MeetingID)as PointsDiscussed,
	(select PendingPoints from MOM as a where a.MeetingID=c.MeetingID)as PendingPoints,
	(select Suggestion from MOM as a where a.MeetingID=c.MeetingID)as Suggestion,
	CreatedBy,CreatedDateTime
	from [dbo].Meeting as c where MeetingID = @P_MeetingID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MOMHistoryByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_MOMHistoryByID]
	-- Add the parameters for the stored procedure here
	@P_MeetingID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		SELECT MeetingID,[Action],[CommunicationId],[ParentCommunicationID],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileID = a.CreatedBy  ) as CreatedBy,
			[CreatedDateTime],Comment from [dbo].[MeetingcommunicationHistory] as a where a.MeetingID = @P_MeetingID and IsMom =1
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MyOwnRequestsInHR]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MyOwnRequestsInHR]  ******/
CREATE PROCEDURE [dbo].[Get_MyOwnRequestsInHR] --Get_MyOwnRequestsInHR 1,27,35,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =1,
	@P_PageSize int =10,
	@P_UserID int = 1,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestType nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = '',
	@P_Language nvarchar(10)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where [UserProfileId] = @P_UserID)


	 declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250))

	 declare @Result table(
	id INT IDENTITY(1, 1) primary key,
		RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	UpdatedDateTime datetime,
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	IsCompensationRequest bit,
	AssignedTo nvarchar(255)
	)

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	-- For Training Request

		insert into @Result
	select distinct t.TrainingID,t.[TrainingReferenceID],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = t.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end)  from [dbo].[M_Lookups] where Module = 'Training' AND Category = 'Status' AND LookupsID = w.Status)as Status,
	t.[CreatedDateTime],
	(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 42 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	
	   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.ApproverDepartmentID)
	  as ApproverDepartment
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.[TrainingReferenceID] and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[Training] t join @RequestList w on t.TrainingReferenceID = w.ReferenceNumber and t.DeleteFlag is not null and ((t.CreatedBy = @P_UserID and w.Status!=44)
				 or(t.TraineeName=@P_UserID and t.IsHrHeadApproved=1))
	

	--select * from @Result

	-- For Leave Request

	insert into @Result
	select distinct l.LeaveID,l.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = l.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Leave' AND Category = 'Status' AND LookupsID = w.Status ) as Status,
	l.[CreatedDateTime],
	(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime,( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
		( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID=l.ApproverDepartmentID
	   )
	  as ApproverDepartment
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.ReferenceNumber and l.DeleteFlag is not null and l.CreatedBy = @P_UserID and w.Status != 10
	

	-- For Baby Addition Request

	insert into @Result
	select distinct b.BabyAdditionID,b.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = b.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'BabyAddition' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	b.[CreatedDateTime],
	(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
			
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  t where t.ReferenceNumber=b.ReferenceNumber and t.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by t.WorkflowID desc) as c)
				 from [dbo].[BabyAddition] b join @RequestList w on b.[ReferenceNumber] = w.ReferenceNumber and b.DeleteFlag is not null and b.CreatedBy = @P_UserID


	-- For Salary Certificate Request

	insert into @Result
	select distinct s.CertificateID,s.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = s.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Certificate' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	s.[CreatedDateTime],
	(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
			
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=s.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[Certificate] s join @RequestList w on s.[ReferenceNumber] = w.ReferenceNumber and s.DeleteFlag is not null 
	and s.CreatedBy = @P_UserID and s.CertificateType = 'Salary'
	

	-- For Experience Certificate Request

	insert into @Result
	select distinct e.CertificateID, e.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = e.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Certificate' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	e.[CreatedDateTime],
	(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null

	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=e.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[Certificate] e join @RequestList w on e.[ReferenceNumber] = w.ReferenceNumber and e.DeleteFlag is not null 
	and e.CreatedBy = @P_UserID and e.CertificateType = 'Experience'
	

	-- For HRComplaintSuggestions Request

	insert into @Result
	select distinct h.HRComplaintSuggestionsID,h.[ReferenceNumber],
	case when h.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = h.[CreatedBy]) end as Creator,
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'HRComplaintSuggestions' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	h.[CreatedDateTime],
	(case when (h.UpdatedDateTime is null) then h.[CreatedDateTime] else h.UpdatedDateTime end) as UpdatedDateTime,
			null,h.Source as SourceName ,null,null
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=h.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[HRComplaintSuggestions] h join @RequestList w on h.[ReferenceNumber] = w.ReferenceNumber and h.DeleteFlag is not null 
	and h.CreatedBy = @P_UserID 
	

	-- For Announcements Request

	insert into @Result
	select distinct a.AnnouncementID,a.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = a.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Announcement' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	a.[CreatedDateTime],
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null
		
	,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
				 from [dbo].[Announcement] a join @RequestList w on a.[ReferenceNumber] = w.ReferenceNumber and a.DeleteFlag is not null 
	and a.CreatedBy = @P_UserID 
	--select * from @Result
	--For OfficialTask Request
		insert into @Result
	select distinct OT.OfficialTaskID,OT.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = OT.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'OfficialTask' AND Category = 'Status' AND LookupsID = 	(select case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber))
then 107 else 113 end) ) as Status,
	OT.[CreatedDateTime],
	(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
	,0,null from [dbo].[OfficialTask] as OT join @RequestList w on OT.[ReferenceNumber] = w.ReferenceNumber and OT.DeleteFlag is not null 
	and OT.CreatedBy = @P_UserID 

	--For Compensation Request
	insert into @Result
	select distinct C.CompensationID,C.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = C.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Compensation' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	C.[CreatedDateTime],
	(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime ,
				
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
	 )))
	  as ApproverDepartment
	,1,(select (case when q.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.ToEmail) 
					when q.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=c.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as q)
		 from [dbo].[Compensation] as C join @RequestList w on C.[ReferenceNumber] = w.ReferenceNumber --and C.DeleteFlag is not null 
	and C.CreatedBy = @P_UserID and w.WorkflowProcess !='ReturnWorkflow'

	--select * from @Result

	/* if(@P_Method = 0 or @P_Method is null)
	begin
	select * from @Result
	end
	else if(@P_Method = 1)
	begin
	select count(*) from @Result
	end */

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 --if(@P_Creator !='')
	 --begin
		--delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 --end 

	
	 if(@P_RequestType !='')
	 begin
		delete from @result where RequestType != (select( case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='HrRequestType' and Module=@P_RequestType)
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (select  row_number() over (Order By RequestDate desc) as slno,* from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			
			or ((select (K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and 
					a.RequestType='New Baby Addition'  )like '%'+@P_SmartSearch+'%')or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests'and IsCompensationRequest = 'false' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID= (select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID) and  a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests'and IsCompensationRequest = 'true' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or a.AssignedTo like '%'+@P_SmartSearch+'%' 
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
		
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
)) as m where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
	((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or a.AssignedTo like '%'+@P_SmartSearch+'%' 
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select (K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and 
					a.RequestType='New Baby Addition'  )like '%'+@P_SmartSearch+'%')
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests'and IsCompensationRequest = 'false' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID= (select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID) and  a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests'and IsCompensationRequest = 'true' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
			or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
	or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
)
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (select ROW_NUMBER() over (order by RequestDate desc) as slno, * from @Result)as m 
	 where slno between @StartNo and @EndNo  
	 Order By UpdatedDateTime desc

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MyPendingListInHR]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MyPendingListInHR]   ******/
CREATE PROCEDURE [dbo].[Get_MyPendingListInHR]  --[Get_MyPendingListInHR] 1,20,2,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestType nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10) = null 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 --select @UserName
	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	 declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int ,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit ,
	DelegateUser int,
    	Approver int,
	AssignedTo nvarchar(max),
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	IsCompensationRequest bit
    )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] 
	where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] 
	group by ReferenceNumber) 
	--select * from @RequestList
	
		 declare @RequestList1 table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)
	insert into @RequestList1
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] 
	where Service='OfficialTask' and ((WorkflowProcess='SubmissionWorkflow' and ToName=@UserName)or(WorkflowProcess='CloseWorkflow' and FromName=@UserName))
	--select * from @RequestList1
	-- For Training Request
	insert into @Result
			SELECT  t.TrainingID,t.[TrainingReferenceID],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID)) as DelegateUser
           		 ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID and Status=42) ) as Approver
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.TrainingReferenceID and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= t.ApproverDepartmentID) as ApproverDepartment

            		,0 from [dbo].[Training] t join @RequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and( (((w.Status = 42 or w.Status = 43 or w.Status = 44) and w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))
			or (( @UserEmail = w.ToEmail or 
	  @UserEmail = W.DelegateTOEmail)
	 and w.Status=42)))
		
--	select * from @Result
	-- For Announcements Request

			insert into @Result
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null
		
			,0 from [dbo].[Announcement] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and ((w.Status = 36 or w.Status = 37))

	-- For HRComplaintSuggestions Request

		insert into @Result
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
	
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime		
			,0,0,0 
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			null,l.Source as SourceName ,null,null
			,0 from [dbo].[HRComplaintSuggestions] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and ((w.Status = 47 or w.Status = 48))

	-- For Baby Addition Request

		insert into @Result
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,0 ,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=b.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
			
			,0 from [dbo].[BabyAddition] b join @RequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and( (w.Status = 39 or w.Status = 40))

	-- For Experience Certificate Request

		insert into @Result
			SELECT  e.CertificateID,e.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			 ,0,0,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=e.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null

			,0 from [dbo].[Certificate] e join @RequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' and ((w.Status = 33 or w.Status = 34))


	-- For Salary Certificate Request

			insert into @Result
			SELECT  s.CertificateID,s.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=s.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
			
			,0 from [dbo].[Certificate] s join @RequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' and ((w.Status = 33 or w.Status = 34))
			

	-- For Leave Request

		insert into @Result
			SELECT  l.LeaveID,l.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=l.ReferenceNumber)) as DelegateUser
 
          		  ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=l.ReferenceNumber) and status=7) as Approver
            ,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=l.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c),
				( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= l.ApproverDepartmentID) as ApproverDepartment

            
			,0 from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and ( ((( @UserEmail = w.ToEmail
	or 
	  @UserEmail = W.DelegateTOEmail)
	 and w.Status=7) or ((w.Status = 7 or w.Status = 8 or w.Status =10)and
	 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))) )
		
		--select * from @Result 	
		-- For OfficialTask Request
			insert into @Result
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
then 107 else 113 end) as StatusCode,
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0,null,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
			,0 from [dbo].[OfficialTask] OT join @RequestList1 w on OT.[ReferenceNumber] = w.[ReferenceNumber] where 
				((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
				and 
				(w.Status=(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
then 107 else 113 end))))
			 and (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)
		    
		-- For Compensation Request
		    insert into @Result
			SELECT  C.CompensationID,C.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=c.ReferenceNumber)) as DelegateUser
            		,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=c.ReferenceNumber) and Status=108) as Approver
				,(select (case when t.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.ToEmail) 
					when t.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=c.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as t) ,
				
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
	 )))
	  as ApproverDepartment
          		 ,1 from [dbo].[Compensation] C join @RequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]  
			and( (( ( @UserEmail = w.ToEmail
	or 
	  @UserEmail = W.DelegateTOEmail)
	  and w.Status =108)or ((w.Status = 108 or w.Status = 109 or w.Status =110)and
	 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))))
			-- Normal RRC Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID  not in (select UserID from @HRUsers))
	begin
	delete from @Result where ToName != @UserName and StatusCode <> 107 and(( @P_UserID  != DelegateUser) and (@P_UserID != Approver))
	end
	--select * from @Result
	-- HR Managers
	if(@P_UserID in (select ManagerUserID from @HRManagers))
	begin
	delete from @Result where (StatusCode = 7 or StatusCode = 42)
	end

	-- HR Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID in (select UserID from @HRUsers))
	begin
	delete from @Result where (StatusCode = 7 and StatusCode = 42) and (ToName not in (select ManagerUserID from @HRManagers)) 
	and (ToName != @UserName)
	end

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end 

	 if(@P_RequestType !='')
	 begin
		delete from @result where RequestType != (select( case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='HrRequestType' and Module=@P_RequestType)
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
			select * from (SELECT row_number() over (Order By RequestDate desc) as slno, * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
				or a.AssignedTo like '%'+@P_SmartSearch+'%' 
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 				or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
	
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
) ) as m where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
				or a.AssignedTo like '%'+@P_SmartSearch+'%' 
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 				or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests'and IsCompensationRequest = 'false' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID= (select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID) and  a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests'and IsCompensationRequest = 'true' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
	
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
)
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (select ROW_NUMBER() over (order by RequestDate desc) as slno, * from @Result)as m  
	 where slno between @StartNo and @EndNo
	 Order By UpdatedDateTime desc 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MyPendingListInHRCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_MyPendingListInHRCount]  ******/
CREATE PROCEDURE [dbo].[Get_MyPendingListInHRCount]  --[Get_MyPendingListInHR] 1,20,3,1
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestType nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10) = null 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 --select @UserName
	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	 declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int ,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit ,
	DelegateUser int,
    	Approver int
    )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 
	 declare @RequestList1 table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)
	insert into @RequestList1
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] 
	where Service='OfficialTask' and ((WorkflowProcess='SubmissionWorkflow' and ToName=@UserName)or(WorkflowProcess='CloseWorkflow' and FromName=@UserName))
	
	-- For Training Request
		
		insert into @Result
			SELECT  t.TrainingID,t.[TrainingReferenceID],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID)) as DelegateUser
           		 ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID and Status=42) ) as Approver
            		from [dbo].[Training] t join @RequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and( ((w.Status = 42 or w.Status = 43 or w.Status = 44) and w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))
			or (( @UserEmail = w.ToEmail
	or 
	  @UserEmail = W.DelegateTOEmail)
	 and w.Status=42))
		
--	select * from @Result
	-- For Announcements Request

			insert into @Result
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			from [dbo].[Announcement] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (w.Status = 36 or w.Status = 37)

	-- For HRComplaintSuggestions Request

		insert into @Result
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
	
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime		
			,0,0,0 
			from [dbo].[HRComplaintSuggestions] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and (w.Status = 47 or w.Status = 48)

	-- For Baby Addition Request

		insert into @Result
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,0 ,0
			from [dbo].[BabyAddition] b join @RequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and (w.Status = 39 or w.Status = 40)

	-- For Experience Certificate Request

		insert into @Result
			SELECT  e.CertificateID,e.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			 ,0,0,0
			from [dbo].[Certificate] e join @RequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' and (w.Status = 33 or w.Status = 34)


	-- For Salary Certificate Request

			insert into @Result
			SELECT  s.CertificateID,s.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			from [dbo].[Certificate] s join @RequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' and (w.Status = 33 or w.Status = 34)

			

	-- For Leave Request

		insert into @Result
			SELECT  l.LeaveID,l.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=l.ReferenceNumber)) as DelegateUser
 
          		  ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=l.ReferenceNumber) and status=7) as Approver
            
            
			from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and ( (( @UserEmail = w.ToEmail
	or 
	  @UserEmail = W.DelegateTOEmail)
	 and w.Status=7) or ((w.Status = 7 or w.Status = 8  or w.Status =10)and
	 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID)))
		
		--select * from @Result 	
		-- For OfficialTask Request
			insert into @Result
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			, 
			0,0,0
			from [dbo].[OfficialTask] OT join @RequestList1 w on OT.[ReferenceNumber] = w.[ReferenceNumber] where 
				((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
				and(w.Status=(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
then 107 else 113 end))))
			 and (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)
		    
		-- For Compensation Request
		    insert into @Result
			SELECT  C.CompensationID,C.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=c.ReferenceNumber)) as DelegateUser
            		,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=c.ReferenceNumber) and Status=108) as Approver
          		 from [dbo].[Compensation] C join @RequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   and (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and( (( ( @UserEmail = w.ToEmail
	or 
	  @UserEmail = W.DelegateTOEmail)
	  and w.Status =108)or ((w.Status = 108 or w.Status = 109 or w.Status =110)and
	 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))))

			-- Normal RRC Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID  not in (select UserID from @HRUsers))
	begin
	delete from @Result where ToName != @UserName and StatusCode <> 107 and(( @P_UserID  != DelegateUser) and (@P_UserID != Approver))
	end
	--select * from @Result
	-- HR Managers
	if(@P_UserID in (select ManagerUserID from @HRManagers))
	begin
	delete from @Result where (StatusCode = 7 or StatusCode = 42)
	end

	-- HR Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID in (select UserID from @HRUsers))
	begin
	delete from @Result where (StatusCode = 7 and StatusCode = 42) and (ToName not in (select ManagerUserID from @HRManagers)) 
	and (ToName != @UserName)
	end

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end 

	 if(@P_RequestType !='')
	 begin
		delete from @result where RequestType != (select( case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='HrRequestType' and Module=@P_RequestType)
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
			select * from (SELECT row_number() over (Order By RequestDate desc) as slno, * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestType  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') 
		or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		 (Status  like '%'+@P_SmartSearch+'%')) ) as m where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or  (RequestType  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') 
		or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  (Status  like '%'+@P_SmartSearch+'%') ) 
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (select ROW_NUMBER() over (order by RequestDate desc) as slno, * from @Result)as m  
	 where slno between @StartNo and @EndNo
	 Order By UpdatedDateTime desc 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_MyProcessedListInHR]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 /****** Object:  StoredProcedure [dbo].[Get_MyProcessedListInHR]   ******/
CREATE PROCEDURE [dbo].[Get_MyProcessedListInHR]  --[Get_MyProcessedListInHR] 1,20,5,1
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestType nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10) = null 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 --select @UserName
	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	 declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int ,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit ,
	DelegateUser int,
    	Approver int,
	AssignedTo nvarchar(max),
	IsCompensationRequest bit
    )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	 declare @LeaveRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @CertificateRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @BabyAdditionRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @TrainingRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @AnnouncementRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @OfficialRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @ComplaientRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	
		;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Leave'
		)
	insert into @LeaveRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Certificate'
		)
	insert into @CertificateRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='BabyAddition'
		)
	insert into @BabyAdditionRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Training'
		)
	insert into @TrainingRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Announcement'
		)
	insert into @AnnouncementRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='HRComplaintSuggestions'
		)
	insert into @ComplaientRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	
	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service in ('Compensation','OfficialTask')
		)
	insert into @OfficialRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	-- For Training Request
		
		insert into @Result
			SELECT  t.TrainingID,t.[TrainingReferenceID],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID)) as DelegateUser
           		 ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID and Status=42) ) as Approver
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					 from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.TrainingReferenceID and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
            	,0	from [dbo].[Training] t join @TrainingRequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and( (	 @P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and 
			P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
		
--	select * from @Result
	-- For Announcements Request

			insert into @Result
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			,0 from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

	-- For HRComplaintSuggestions Request

		insert into @Result
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
	
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime		
			,0,0,0 
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			,0 from [dbo].[HRComplaintSuggestions] l join @ComplaientRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

	-- For Baby Addition Request

		insert into @Result
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,0 ,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=b.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c)
			,0 from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

	-- For Experience Certificate Request

		insert into @Result
			SELECT  e.CertificateID,e.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			 ,0,0,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=e.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c)
			,0 from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))


	-- For Salary Certificate Request

			insert into @Result
			SELECT  s.CertificateID,s.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=s.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c)
			,0 from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			

	-- For Leave Request

		insert into @Result
			SELECT  l.LeaveID,l.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=l.ReferenceNumber)) as DelegateUser
 
          		  ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=l.ReferenceNumber) and status=7) as Approver
            ,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=l.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as c)
            
			,0 from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and
	  (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
	  and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))
		
		--select * from @Result 	
		-- For OfficialTask Request
			insert into @Result
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
			(((select top 1[FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107) = @UserEmail
			and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) ) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0))
			then 1 else 0 end),0,0,null
			,0 from [dbo].[OfficialTask] OT join @OfficialRequestList w on OT.[ReferenceNumber] = w.[ReferenceNumber] where 
				((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
				and (w.Status <> 107 and w.WorkflowProcess!='SubmissionWorkflow')) or (w.Status= 107  and W.FromEmail= (select OfficialMailId from UserProfile where UserProfileId=@P_UserID)))
			--and OT.OfficialTaskID not in (select OfficialTaskID from Compensation where DeleteFlag!=1 ) 
			 and (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)
		    
		-- For Compensation Request
		    insert into @Result
			SELECT  C.CompensationID,C.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=c.ReferenceNumber)) as DelegateUser
            		,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=c.ReferenceNumber) and Status=108) as Approver
				,(select (case when t.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.ToEmail) 
					when t.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=c.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by q.WorkflowID desc) as t)
          		,1  from [dbo].[Compensation] C join @OfficialRequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   and (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			-- Normal RRC Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID  not in (select UserID from @HRUsers))
	begin
	delete from @Result where ToName != @UserName and StatusCode <> 107 and(( @P_UserID  != DelegateUser) and (@P_UserID != Approver))
	end
	--select * from @Result
	-- HR Managers
	if(@P_UserID in (select ManagerUserID from @HRManagers))
	begin
	delete from @Result where (StatusCode = 7 or StatusCode = 42)
	end

	-- HR Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID in (select UserID from @HRUsers))
	begin
	delete from @Result where (StatusCode = 7 and StatusCode = 42) and (ToName not in (select ManagerUserID from @HRManagers)) 
	and (ToName != @UserName)
	end

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end  

	 if(@P_RequestType !='')
	 begin
		delete from @result where RequestType != (select( case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='HrRequestType' and Module=@P_RequestType)
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
			select * from (SELECT row_number() over (Order By RequestDate desc) as slno, * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestType  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') 
		or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		 (Status  like '%'+@P_SmartSearch+'%')) ) as m where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or  (RequestType  like '%'+@P_SmartSearch+'%') or (Creator  like '%'+@P_SmartSearch+'%') 
		or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		  (Status  like '%'+@P_SmartSearch+'%') ) 
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select * from (select ROW_NUMBER() over (order by RequestDate desc) as slno, * from @Result)as m  
	 where slno between @StartNo and @EndNo
	 Order By UpdatedDateTime desc 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

 END
 
GO
/****** Object:  StoredProcedure [dbo].[Get_NewsAllList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--select * from [dbo].[Workflow]

CREATE PROCEDURE [dbo].[Get_NewsAllList]-- Add the parameters for the stored procedure here

	@P_UserID int = 0,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	if (@P_Method=0)
	begin
	
	 Select * from (SELECT row_number() over (Order By  NewsID) as slno,
    a.NewsID,a.ExpiryDate,
	a.News,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

	from [dbo].News  as a where a.DeleteFlag!=1)as m where m.ExpiryDate >=(select GETUTCDATE()) 
	 end

	 if(@P_Method = 1)
	 begin

	 Select count(*) from (SELECT row_number() over (Order By  NewsID) as slno,
    a.NewsID,a.ExpiryDate,
	a.News,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

	from [dbo].News  as a where a.DeleteFlag!=1)as m where m.ExpiryDate>=(select GETUTCDATE())
	end
	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_NewsByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_NewsByID]
	@P_NewsID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT NewsID,News,ExpiryDate,
	[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime]


 from  [dbo].[News] WHERE NewsID = @P_NewsID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_NewsList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_NewsList]    ******/
CREATE PROCEDURE [dbo].[Get_NewsList]-- [Get_NewsList] 1,1,1,0
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID nvarchar(250) = 0,
	@P_Method int =0,
	@P_Description nvarchar(Max)=null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @result table(
	id int,
	NewsID int,
	ExpiryDate datetime,
	News nvarchar(Max),
	CreatedBy int,
	CreatedDateTime datetime,
	UpdatedBy int,
	UpdatedDateTime Datetime
	)
	
	insert into @result
	 Select * from (SELECT row_number() over (Order By  NewsID) as slno,
    a.NewsID,a.ExpiryDate,
	a.News,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

	from News as a where DeleteFlag!=1)as m


	 if(@P_Description != '' or @P_Description != null)
	 delete from @result where ((select dbo.StripHTML(News))) not like '%'+@P_Description+'%'

	
	 if (@P_Method=0)
	 begin
	 select * from (SELECT row_number() over (Order By NewsID desc ) as slno, * from @result) as  m where slno between @StartNo and @EndNo
	 end

	  if (@P_Method=1)
	 begin
	 select count(*) from @result
	 end

	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_Notification]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_Notification]    ******/
CREATE PROCEDURE [dbo].[Get_Notification] --   [Get_Notification] 1

	@P_ID int = null,
	@P_UserID int = null,
	@P_ToReadAll bit = 0
AS
BEGIN	
	SET NOCOUNT ON;


	Declare @userEmail nvarchar(max) =  null

	select @userEmail= OfficialMailId from UserProfile where UserProfileId = @P_UserID

	if(@P_ToReadAll = 1)
	begin
		Update Notification set IsRead = 1 where ToEmail = @userEmail
	end
	else
	begin
		Update Notification set IsRead = 1 where ID = @P_ID
	end

		Select *,(select UF.EmployeeName from UserProfile as UF where UF.OfficialMailId = N.FromEmail) as FromName,
		(select UT.EmployeeName from UserProfile as UT where UT.OfficialMailId = N.ToEmail) as ToName,
		 (select UF.EmployeeName from UserProfile as UF where UF.OfficialMailId = N.DelegateFromEmail) as DelegateFromName,
		(select UT.EmployeeName from UserProfile as UT where UT.OfficialMailId = N.DelegateToEmail) as DelegateToName from Notification as N where ID = @P_ID

	END
GO
/****** Object:  StoredProcedure [dbo].[Get_NotificationList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_NotificationList] ******/
CREATE PROCEDURE [dbo].[Get_NotificationList] --   [Get_NotificationList] 1,1,2,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID int =0,
	@P_Method int =0,
	@P_NotificationDays int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @count int =0, @NotReadNotification int =0
	,@Usermail nvarchar(max), @TempCount int =0

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select @Usermail = OfficialMailId from UserProfile where UserProfileId= @P_UserID


	Declare @result table(

	id int ,
	ServiceID int,
	ReferenceNumber nvarchar(max),
	Process nvarchar(max),
	Service nvarchar(max),
	IsRead bit,
	LastUpdateDatetime datetime,
	FromName nvarchar(max),
	IsAnonymous bit
	);

	--insert into @result
	--	select N.[ServiceID],N.[ReferenceNumber],null,N.[IsRead],N.[LastUpdateDate] from  (select row_number() over (Order By ServiceID desc)  as slno , * from Notification) as N
	--	where N.ToEmail = @Usermail and N.slno between @StartNo and @EndNo  

	--while(@TempCount<0)
	--begin
		
	--end

	if(@P_Method = 0)
	begin
		insert into @result
		select N.ID,N.[ServiceID],N.[ReferenceNumber],N.Service,N.Process,N.[IsRead],N.[LastUpdateDate], 
		(select UF.EmployeeName from UserProfile as UF where UF.OfficialMailId = N.FromEmail) as FromName ,IsAnonymous
			from  (select row_number() over (Order By ServiceID desc)  as slno , * from Notification 
				where ToEmail = @Usermail  and (SELECT DATEDIFF(DAY,cast(LastUpdateDate as date), cast((select GETUTCDATE()) as Date))) <= @P_NotificationDays) as N
		where  N.slno between @StartNo and @EndNo  
		select * from @result
	end

	else if(@P_Method = 1)
	begin
		set @count = (select Count(*) from Notification where ToEmail = @Usermail)
		set @NotReadNotification = (select Count(*) from Notification where ToEmail = @Usermail and isRead=0 and (SELECT DATEDIFF(DAY,cast(LastUpdateDate as date), cast((select GETUTCDATE()) as Date))) <= @P_NotificationDays)
		select @count as Count  , @NotReadNotification as NotificationCount
	end

	else if(@P_Method = 2)
	begin
		set @count = (select Count(*) from Notification where ToEmail = @Usermail)
		set @NotReadNotification = (select Count(*) from Notification where ToEmail = @Usermail and isRead=0 and (SELECT DATEDIFF(DAY,cast(LastUpdateDate as date), cast((select GETUTCDATE()) as Date))) <= @P_NotificationDays)
		select  @NotReadNotification as NotificationCount
	end
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialMission]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialMission]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[OfficialMission] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialMissionByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialMissionByID]
	@P_OfficialMissionID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[OfficialMission] where DeleteFlag=0 and OfficialMissionID = @P_OfficialMissionID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialMissionList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialMissionList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [OfficialMissionID]) as 
	slno, *
	from [dbo].[OfficialMission] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTask]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialTask]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[OfficialTask] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskByID]   ******/
CREATE PROCEDURE [dbo].[Get_OfficialTaskByID] --  [Get_OfficialTaskByID] 69,21
	@P_OfficialTaskID int = 0,
	@P_UserID int = 0
AS
BEGIN
	SET NOCOUNT ON;

	Declare @UserEmail nvarchar(max) = null

	select @UserEmail= OfficialMailId from UserProfile where UserProfileId=@P_UserID



	declare @P_Status int =0, @P_ReferenceNUmber nvarchar(max) = null;
select @P_ReferenceNUmber =ReferenceNumber  from [dbo].[OfficialTask] as a where a.OfficialTaskID= @P_OfficialTaskID
	set @P_Status = (case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=@P_ReferenceNUmber and d.ToEmail=@UserEmail)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=@P_ReferenceNUmber and d.FromEmail=@UserEmail))
then 107 else 113 end)

If((select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=@P_ReferenceNUmber and d.FromEmail=@UserEmail) =0)
begin
	set @P_Status = 113
end
	--select @P_Status

	SELECT [OfficialTaskID],[ReferenceNumber],[Date],[SourceOU],[SourceName],
[OfficialTaskType],[StartDate],[EndDate],[NumberofDays],[OfficialTaskDescription],[Comments],[DeleteFlag],[CreatedBy],[UpdatedBy],
[CreatedDateTime],[UpdatedDateTime],
 	(select case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=a.ReferenceNumber)=
		(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=a.ReferenceNumber))
		then 107 else 113 end)  as Status,
	(case when ((((select count(*) from Workflow where [ReferenceNumber] = a.[ReferenceNumber] and status = 113 and (ToEmail=@UserEmail or DelegateToEmail=@UserEmail)) >0)
	and ((select Cast (DATEADD(DAY, 5, a.EndDate) as Date)) > (select cast (GETDATE() as Date)))
	 and  ((select count(*) from Compensation as c where c.OfficialTaskID=a.OfficialTaskID and c.CreatedBy=@P_UserID )=0)))
	then 1 else 0 end) as IsCompensationAvailable,
	(case when ((((select count(*) from Workflow where [ReferenceNumber] = a.[ReferenceNumber] and status = 113 and (ToEmail=@UserEmail or DelegateToEmail=@UserEmail)) >0)
	and ((select Cast (DATEADD(DAY, 5, a.EndDate) as Date)) < (select cast (GETDATE() as Date)))
	 and  ((select count(*) from Compensation as c where c.OfficialTaskID=a.OfficialTaskID and c.CreatedBy=@P_UserID )=0)))
	 and @P_Status = 113 then 1 else 0 end) as IsClosed



	 from [dbo].[OfficialTask] as a WHERE OfficialTaskID = @P_OfficialTaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskCommunicationHistory]  ******/
CREATE PROCEDURE [dbo].[Get_OfficialTaskCommunicationHistory]
    @P_OfficialTaskID int =0
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
			select [CommunicationID],[OfficialTaskID],[Message],[ParentCommunicationID],[Action],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  ) as CreatedBy,
		[CreatedDateTime],
		 (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)as PhotoGuid,
	(select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy) as PhotoName   from [dbo].[OfficialTaskCommunicationHistory]  as a
		where OfficialTaskID=@P_OfficialTaskID 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskCreator]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- select * from [Compensation]
CREATE Procedure [dbo].[Get_OfficialTaskCreator]  --[Get_OfficialTaskCreator] 7
@P_CompensationID int = null,
@P_Type int =0
As
Begin

if(@P_Type =1)
begin
	(select O.CreatedBy
from [OfficialTask]  as O inner join [Compensation] as C 
on O.OfficialTaskID = C.OfficialTaskID
where C.CompensationID = @P_CompensationID)
end
else
begin
(select O.CreatedBy
from [OfficialTask]  as O inner join [Compensation] as C 
on O.OfficialTaskID = C.OfficialTaskID
where O.OfficialTaskID = @P_CompensationID)
end

end
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskEmployeeDetails]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[Get_OfficialTaskEmployeeDetails] --[Get_OfficialTaskEmployeeDetails] 40

@P_OfficialTaskID int = null
As
begin
declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	EmployeeID int,
	EmployeeName nvarchar(max),
	EmployeeCode nvarchar(max),
	Grade nvarchar(max),
	EmployeePosition nvarchar(max),
	EmployeeDepartment nvarchar(max))


insert into @Result
			SELECT 
			OT.UserID,
			U.EmployeeName,
			UP.[EmployeeCode],
			UP.[Grade],
			UP.[EmployeePosition],
			(select DepartmentName from M_Department as O where U.DepartmentID = O.DepartmentID)as EmployeeDepartment
	 from UserProfile as UP join [UserProfile]  as U on U.UserProfileId = UP.UserProfileId  join OfficialTaskEmployeeName as OT on OT.UserID = U.UserProfileId
	  where OT.OfficialTaskID = @P_OfficialTaskID

	 select * from @result
	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskEmployeeName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialTaskEmployeeName] --[Get_OfficialTaskEmployeeName] 18
	@P_OfficialTaskID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT a.UserID as OfficialTaskEmployeeID,(select [EmployeeName] from [dbo].[UserProfile] as b where b.UserProfileId=a.UserID)as OfficialTaskEmployeeName 
	
	from [dbo].[OfficialTaskEmployeeName] as a where  OfficialTaskID = @P_OfficialTaskID
	and DeleteFlag=0;
END


GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OfficialTaskUser] -- [Get_OfficialTaskUser] 4
	
	@P_Department nvarchar(max) = null,
	@P_UserID int = 0,
	@P_GetHead bit = 0,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

declare @Result1 table(
	id INT IDENTITY(1, 1) primary key,
	userid int
	 )

	 if(@P_StartDate is null and @P_EndDate is null)
		insert into @Result1
			SELECT (select userid from OfficialTaskEmployeeName where UserID=l.UserID) as userid			
			from [dbo].OfficialTaskEmployeeName as l inner join  OfficialTask as O on L.OfficialTaskID=O.OfficialTaskID
			where  (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) AND (O.[DeleteFlag] is not null or O.[DeleteFlag] !=0)
			AND cast((SELECT GETUTCDATE()) as date)  Between cast(StartDate as date) and cast(EndDate as date)
	 else
		insert into @Result1
			SELECT (select userid from OfficialTaskEmployeeName where UserID=l.UserID) as userid			
			from [dbo].OfficialTaskEmployeeName as l inner join  OfficialTask as O on L.OfficialTaskID=O.OfficialTaskID
			where  (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) AND (O.[DeleteFlag] is not null or O.[DeleteFlag] !=0)
			AND( (@P_StartDate  Between cast(StartDate as date)  and cast(EndDate as date)) or (@P_EndDate  Between cast(StartDate as date)  and cast(EndDate as date))	)

--	select * from @Result1
		if(@P_Department is null and @P_UserID is null or (@P_Department ='')and @P_GetHead != 1)
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 AND UserProfileId not in (select userid from @Result1)

		if(@P_Department is not null and @P_Department != '' and @P_GetHead != 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
		and UserProfileId != @P_UserID and UserProfileId not in (select userid from @Result1)
		and  OrgUnitID in 
		( SELECT value from string_split((replace( (REPLACE((REPLACE(@P_Department, '[', '')),'"','')),']','')),',')) order by [IsOrgHead] desc	
		end

		if(@P_UserID >0 and @P_UserID is not null and @P_GetHead != 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID and UserProfileId not in (select userid from @Result1)
		end

		if(@P_GetHead = 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where OrgUnitID in (select value from string_split(@P_Department , ',')) and [IsOrgHead] = 1 and UserProfileId not in (select userid from @Result1)
		end
	

END
GO
/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskUserAvailability]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_OfficialTaskUserAvailability]  ******/
CREATE PROCEDURE [dbo].[Get_OfficialTaskUserAvailability] -- [Get_OfficialTaskUserAvailability] 4,'2019-11-06T09:56:31.000Z','2019-11-08T09:56:31.000Z'
	@P_UserID nvarchar(max) = 0,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null
AS
BEGIN
	SET NOCOUNT ON;

	declare @Result bit = 0;

	declare @Users table(
	id INT IDENTITY(1, 1) primary key,
	userid int)

	insert into @Users
	select value from string_split(@P_UserID,',')

	declare @NotAvailable table(
	id INT IDENTITY(1, 1) primary key,
	userid int)

	Insert into @NotAvailable
	SELECT (l.UserID) as userid			
			from [dbo].OfficialTaskEmployeeName as l inner join  OfficialTask as O on L.OfficialTaskID=O.OfficialTaskID
			where  (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) AND (O.[DeleteFlag] is not null or O.[DeleteFlag] !=0)
			AND		((@P_StartDate  Between cast(StartDate as date)  and cast(EndDate as date)) or
					 (@P_EndDate  Between cast(StartDate as date)  and cast(EndDate as date))) or 
					 ((cast(StartDate as date)  Between @P_StartDate  and @P_EndDate) or
					 (cast(EndDate as date)  Between @P_StartDate  and @P_EndDate))

	if((select count(*) from @Users U inner Join @NotAvailable Na on U.userid=Na.userid)>0)
	set @Result = 0;
	else
	set @Result = 1;

	select @Result;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Organization]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Organization]
	@P_Language nvarchar(10) = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT DepartmentID as OrganizationID,(case when @P_Language= 'AR' then ArDepartmentName else DepartmentName end)OrganizationUnits 
	 from M_Department where DeleteFlag=0 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_OrganizationEntity]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_OrganizationEntity] --  [Get_MemoByID] 49
	@P_UserID int = null,
	@P_IsGoverenmentEntity bit = null
AS
BEGIN
	
	SET NOCOUNT ON;
	
	if(@P_IsGoverenmentEntity = 1)
	
		select [ContactID],EntityName as UserName,[CreatedBy],[EmailId] from [Contact] where OfficialEntity = 1  and( DeleteFlag = 0 or DeleteFlag is null)
	
END

GO
/****** Object:  StoredProcedure [dbo].[Get_Photo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Photo]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Photo] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotoByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PhotoByID]
	@P_PhotoID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Photo] where DeleteFlag=0 and PhotoID = @P_PhotoID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_Photographers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Photographers]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Photographers] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotographersByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PhotographersByID]
	@P_PhotographersID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Photographers] where DeleteFlag=0 and PhotographersID = @P_PhotographersID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotographersList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PhotographersList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [PhotographersID]) as 
	slno, *
	from [dbo].[Photographers] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotoList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PhotoList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [PhotoID]) as 
	slno, *
	from [dbo].[Photo] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotoRequestCommunicationHistoryById]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_PhotoRequestCommunicationHistoryById]  ******/
CREATE PROCEDURE [dbo].[Get_PhotoRequestCommunicationHistoryById]
    @P_PhotoID int =0
	

	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
   select [CommunicationID],[PhotoID],[Message],[ParentCommunicationID],[Action],
   case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as CreatedBy,
		[CreatedDateTime],
		 case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName from  [dbo].[MediaPhotoRequestCommunicationHistory]  as a
		where a.PhotoID=@P_PhotoID 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotosAllList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--select * from [dbo].[Workflow]

CREATE PROCEDURE [dbo].[Get_PhotosAllList]-- Add the parameters for the stored procedure here

	@P_UserID nvarchar(250) = null,
	@P_Method int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	if (@P_Method=0)
	begin
	
	 Select * from (SELECT row_number() over (Order By  PhotoID) as slno,
    a.PhotoID,a.ExpiryDate,
	a.AttachmentGuid, a.AttachmentName,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

	from [dbo].[Photos] as a where DeleteFlag!=1)as m where m.ExpiryDate>=(Select GETUTCDATE())
  end
	

	 if(@P_Method = 1)
	 begin

	 Select count(*) from (SELECT row_number() over (Order By  PhotoID) as slno,
    a.PhotoID,a.ExpiryDate,
	a.AttachmentGuid, a.AttachmentName,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

	from [dbo].[Photos] as a where DeleteFlag!=1)as m where m.ExpiryDate>=(Select GETUTCDATE())
	end
	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_PhotosByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PhotosByID]--[Get_PhotosByID] 8
	@P_PhotoID int = 0
AS
BEGIN
	
	SET NOCOUNT ON;
		SELECT * from  [dbo].[Photos] WHERE PhotoID = @P_PhotoID 
END

GO
/****** Object:  StoredProcedure [dbo].[Get_PhotosList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_PhotosList]    ******/
CREATE PROCEDURE [dbo].[Get_PhotosList] --[Get_PhotosList]1,11,1,0
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_UserID nvarchar(250) = null,
	@P_Method int =0,
	@P_Description nvarchar(max)=null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;


	declare @result table(
	id int,
	PhotoID int,
	ExpiryDate datetime,
	AttachmentGuid nvarchar(Max),
	AttachmentName nvarchar(Max),
	CreatedBy int,
	CreatedDateTime datetime,
	UpdatedBy int,
	UpdatedDateTime Datetime
	)
	
	insert into @result
	
	 Select * from (SELECT row_number() over (Order By  PhotoID) as slno,
    a.PhotoID,a.ExpiryDate,
	a.AttachmentGuid, a.AttachmentName,a.createdBy,a.CreatedDateTime,a.UpdatedBy, a.UpdatedDateTime

 	from [dbo].[Photos] as a where DeleteFlag!=1)as m

	if(@P_Description != '' or @P_Description != null)
	 delete from @result where AttachmentName not like '%'+@P_Description+'%'

	
	  if (@P_Method=0)
	 begin
	 select * from (SELECT row_number() over (Order By PhotoID desc ) as slno, * from @result) as  m where slno between @StartNo and @EndNo
	 end

	  if (@P_Method=1)
	 begin
	 select count(*) from @result
	 end


	 End  
GO
/****** Object:  StoredProcedure [dbo].[Get_Press]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Press]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Press] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PressByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PressByID]
	@P_PressID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Press] where DeleteFlag=0 and PressID = @P_PressID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_PressList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_PressList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [PressID]) as 
	slno, *
	from [dbo].[Press] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_ProtocolDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_ProtocolDashboardCount]   *****/
CREATE PROCEDURE [dbo].[Get_ProtocolDashboardCount] -- [Get_ProtocolDashboardCount] 17
	-- Add the parameters for the stored procedure here
	
	@P_UserID int = 1
	

	/* RequestType: Photo = 1, Design = 2, PressRelease = 3, Campaign = 4, Photographer = 5, DiwanIdentity = 6	*/
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare @Photo int =0, @Design int =0, @PressRelease int =0, @Campaign int=0, @Photographer int=0,
	@DiwanIdentity int=0, @Media int=0, @Gift int =0, @Calendar int =0,@P_UserEmail nvarchar(max) =null

	select @P_UserEmail=OfficialMailId from UserProfile where UserProfileId=@P_UserID

	  declare @MediaManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @MediaUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET Media managers
	  insert into @MediaManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 4 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET Media users
	  insert into @MediaUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 4 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  declare @UserEmail nvarchar(max)= null
	  select @UserEmail = OfficialMailId from UserProfile where UserProfileId= @P_UserID and (DeleteFlag is null or DeleteFlag = 0)

	declare @RequestList2 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(255))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	SourceOU nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255))

	insert into @RequestList2
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] group by ReferenceNumber) 
	SELECT  @Photo = count(*)
			from [dbo].[MediaPhotoRequest] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
				
			 and	((w.Status =88 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=92) or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT  @Design = count(*)
			from [dbo].[MediaDesignRequest] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
						 and	((w.Status =64 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=68)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
			SELECT @PressRelease = count(*)
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	((w.Status =76 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=80)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT @Campaign = count(*)
			from [dbo].[MediaNewCampaignRequest] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
	 and	((w.Status =82 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow'))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=86)
			   or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT @Photographer = count(*)
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
		 and	((w.Status =70 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=74)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
			SELECT  @DiwanIdentity = count(*)
			from [dbo].[DiwanIdentity] a join @RequestList2 w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
		 and	((w.Status =96 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=100)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
	set @Media = @Photo+@Design+@PressRelease+@Campaign+@Photographer+@DiwanIdentity

	set @Gift = (Select count(*) from [dbo].[Gift] where [CreatedBy]= @P_UserID and (DeleteFlag =0 or DeleteFlag is null))


	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @RequestList1 table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max),
	ParentReferenceNumber1 nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] group by ReferenceNumber) 


	insert into @RequestList1  
	select C.ReferenceNumber,R.WorkflowProcess,R.FromEmail,R.ToEmail,R.Status,R.FromEmail,R.ToEmail,R.DelegateTOEmail,C.ParentReferenceNumber
	 from @RequestList as R right join Calendar c on c.ReferenceNumber = R.ReferenceNumber



	 update a set a.WorkflowProcess= b.WorkflowProcess,a.FromName=b.FromName,a.ToName=b.ToName,a.Status=b.Status
	 ,a.FromEmail=b.FromEmail,a.ToEmail=b.ToEmail,a.DelegateTOEmail=b.DelegateToEmail from @RequestList1 as a  
	 inner join (select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where  WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] where WorkflowProcess='SubmissionWorkflow'  group by ReferenceNumber)) as b on a.ParentReferenceNumber1= b.ReferenceNumber where a.WorkflowProcess is null

	
	
	declare @Count table(
	ReferenceNumber nvarchar(255)
	);

	insert into @Count
	select (case when (ParentReferenceNumber is null or ParentReferenceNumber='' ) then c.ReferenceNumber 
				when (ParentReferenceNumber !=null or ParentReferenceNumber!='') then ParentReferenceNumber end)
            from [dbo].Calendar c join @RequestList1 w on c.[ReferenceNumber] = w.[ReferenceNumber]   where (c.[DeleteFlag] is  null or c.[DeleteFlag] =0) 
            and( (w.Status =120  and @UserEmail=w.ToEmail) 
            or(w.Status=122  and c.CreatedBy = @P_UserID) 
		   or(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=120))

		set @Calendar = (select count(Distinct ReferenceNumber) from @Count);
		delete from @Count

	
	select  @Media as Media, @Gift as Gift, @Calendar as Calendar

END
GO
/****** Object:  StoredProcedure [dbo].[Get_ShareparticipationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_ShareparticipationUsers] --15,null,null,null,0

	
	@P_UserID int = null,
	@P_ServiceId nvarchar(100)= null,
	@P_Type nvarchar(100)= null
	
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	
	
	select * from [dbo].[ShareparticipationUsers] where ServiceID=@P_ServiceId
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_StatusByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_StatusByID]   ******/
CREATE PROCEDURE [dbo].[Get_StatusByID] --[Get_StatusByID] 'Vehicle',50,'Reject'
	-- Add the parameters for the stored procedure here
	@P_Service nvarchar(100)= null,
	@P_ServiceID int =0,
	@P_Action nvarchar(100) = null,
	@P_ApproverId int = null,	
	@P_GiftType int = 0
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	 
	

    -- Insert statements for procedure here
		if(@P_Service='DiwanIdentity'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit') or (@P_Action ='Resubmit') or (@P_Action ='Approve' )or(@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service = 'CitizenAffair')
    begin
    SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate') then 'Waiting for Approval'
       when @P_Action ='Save' then 'Draft' when (@P_Action ='Approve') then 'Approved' when @P_Action ='ReturnForInfo' then 'Pending for Resubmission'
        when @P_Action ='Reject' then 'Rejected' when @P_Action ='Close' then 'Closed' end and Category='Status'
    end

	else if(@P_Service='DiwanIdentity')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaPhotoRequest'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit' or @P_Action ='Approve' or @P_Action ='Resubmit' or @P_Action ='AssignTo'or @P_Action ='AssignToMe') then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaPhotoRequest')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaDesignRequest'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit' or @P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaDesignRequest')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewPhotoGrapherRequest'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewPhotoGrapherRequest')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewPressReleaseRequest'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit' or @P_Action ='Resubmit'or @P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe' ) then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewPressReleaseRequest')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe' ) then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewCampaignRequest'and (@P_ApproverId is null or @P_ApproverId = 0) )
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe' ) then 'Under Process'  when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'  when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='MediaNewCampaignRequest')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe' ) then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service = 'Certificate' or @P_Service = 'Announcement' or @P_Service = 'BabyAddition')
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case  when (@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) or(@P_Action ='Submit') then 'Under Process' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'

	else if(@P_Service='DutyTask')
	begin
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when( @P_Action = 'Submit' or @P_Action='Assign') then 'InProgress'
		when @P_Action ='Completed' then 'Completed' when @P_Action ='Close' then 'Closed' when @P_Action ='Delete' then 'Deleted' end and Category='Status'
	end

	else if(@P_Service = 'Training')
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate') then 'Waiting for Approval'
		when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process' when @P_Action ='ReturnForInfo' then 'Pending for Resubmission' 
		when @P_Action ='Reject' then 'Rejected' when @P_Action ='Close' then 'Closed' end and Category='Status'
	end

	--else if(@P_Service = 'CitizenAffair')
	--begin
	--SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate') then 'Waiting for Approval'
	--	when (@P_Action ='Approve') then 'Approved' when @P_Action ='ReturnForInfo' then 'Pending for Resubmission' 
	--	when @P_Action ='Reject' then 'Rejected' when @P_Action ='Close' then 'Closed' end and Category='Status'
	--end

	else if(@P_Service = 'HRComplaintSuggestions')
	begin
	
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when @P_Action != 'Close' then 'Under Process'
		when @P_Action ='Close' then 'Closed' end and Category='Status'
	end

	else if(@P_Service = 'ITSupport')
	begin
	
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when @P_Action != 'Close' then 'Under Process'
		when @P_Action ='Close' then 'Closed' end and Category='Status'
	end

	else if(@P_Service = 'CAComplaintSuggestions')
	begin
	
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when @P_Action != 'Close' then 'Under Process'
		when @P_Action ='Close' then 'Closed' end and Category='Status'
	end

	else if(@P_Service = 'Maintenance')
	begin
	
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case 
		when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate') then 'Waiting for Approval'
		when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe' or @P_Action ='ReOpen') then 'Under Process'
		when @P_Action ='ReturnForInfo' then 'Pending for Resubmission'
		when @P_Action ='Close' then 'Completed' when @P_Action ='Reject' then 'Rejected' end and Category='Status'
	end

	else if(@P_Service = 'Compensation')
	begin
	
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case 
		when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate') then 'Waiting for Approval'
		when (@P_Action ='Approve' or @P_Action ='AssignTo' or @P_Action ='AssignToMe') then 'Under Process'
		when @P_Action ='ReturnForInfo' then 'Pending for Resubmission'
		when @P_Action ='Close' then 'Closed' when @P_Action ='Reject' then 'Rejected' end and Category='Status'
	end

	else if (@P_Service = 'OfficialTask')
	begin
	Select LookupsID from [M_Lookups] where [Module] =@P_Service and DisplayName = case
	when @P_Action ='Submit' then 'Under Process'
	when @P_Action ='MarkasComplete' then 'Completed' end and Category='Status'
	end

	else if(@P_Service = 'Legal')
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName= case when (@P_Action ='Submit' ) then 'New'
		when ( @P_Action ='AssignTo' or @P_Action ='AssignToMe' or  @P_Action ='ReOpen' or @P_Action ='Resubmit') then 'Under Process' when @P_Action ='ReturnForInfo' then 'Pending for Resubmission' 
		 when @P_Action ='Close' then 'Closed' end and Category='Status'
	end

	else if(@P_Service = 'Circular')
	begin
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
		case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
		 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) then 'Approved' when @P_Action ='Reject'  then 'Rejected'	
		 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
		end  and Category='Status'
	end

		else if(@P_Service = 'Leave')
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) then 'Under Process' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'
	end

	else if(@P_Service = 'Gift')
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Submit' and @P_GiftType =1 then 'Gift Received' when @P_Action ='Submit' and @P_GiftType =2 then 'Gift Purchased'
	when @P_Action ='SendforDelivery' then 'Send for Delivery' when @P_Action ='DeliveryConfirmed' then 'Delivery Confirmed'
	end  and Category='Status'
	end

		else if(@P_Service = 'Meeting')
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when  (@P_Action ='Submit' or @P_Action ='Reschedule' )
	then 'Under Process'  when @P_Action ='cancel'  then 'Cancelled'
	end  and Category='Status'
	end

	else if(@P_Service='Calendar' )
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' ) then 'Approved' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'or @P_Action ='MarkAsCompleted'  then 'Completed'
	end  and Category='Status'

	else if(@P_Service = 'Memo')
	begin
	declare @memoReferenceNumber nvarchar(250)=(select ReferenceNumber from Memo where MemoID=@P_ServiceID)
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
		case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or (@P_Action ='Redirect'and (select top(1)Status from Workflow where ReferenceNumber=@memoReferenceNumber order by WorkflowID desc)=2) )
		 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='Redirect' and (select top(1)Status from Workflow where ReferenceNumber=@memoReferenceNumber order by WorkflowID desc)=3) then 'Under Progress'
		 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'when @P_Action ='Reject'  then 'Rejected'
		end  and Category='Status'
	end	
	else if(@P_Service = 'OutboundLetter')
	begin
	declare @OutboundLetterID nvarchar(250)=(select LetterReferenceID from LettersOutbound where LetterID=@P_ServiceID)
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
		case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or (@P_Action ='Redirect'and (select top(1)Status from Workflow where ReferenceNumber=@OutboundLetterID order by WorkflowID desc)=19) )
		 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='Redirect' and (select top(1)Status from Workflow where ReferenceNumber=@OutboundLetterID order by WorkflowID desc)=20) then 'Under Progress'
		 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission'when @P_Action ='Close'  then 'Closed'when @P_Action ='Reject'  then 'Rejected'
		end  and Category='Status'
	end	
	else if(@P_Service = 'InboundLetter')
	begin
	declare @InboundLetterID nvarchar(250)=(select LetterReferenceID from LettersInbound where LetterID=@P_ServiceID)
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
		case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or (@P_Action ='Redirect'and (select top(1)Status from Workflow where ReferenceNumber=@InboundLetterID order by WorkflowID desc)=25) )
		 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='Redirect' and (select top(1)Status from Workflow where ReferenceNumber=@InboundLetterID order by WorkflowID desc)=26) then 'Under Progress'
		 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed' when @P_Action ='Reject'  then 'Rejected'
		end  and Category='Status'
	end
	
	if(@P_Service = 'Vehicle')
	declare @RequestType int =0	
	set @RequestType=(select RequestType from VehicleRequest where VehicleReqID=@P_ServiceID)
	--select @RequestType

	if(@RequestType =1 or @P_ServiceID=0)
	begin
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Submit' then 'Waiting For Approval' when @P_Action = 'Approve' then 'To be Assigned'  when @P_Action ='Assign' then 'To be Released'
	when @P_Action ='Release' then 'Released' when @P_Action='Return' then 'Returned'
	when @P_Action ='Reject' then 'Rejected' when @P_Action ='Cancel' then 'Cancelled'
	end  and Category='Status'
	end	
		
	else if((@RequestType=2 or @RequestType =3) and @RequestType!=1)
	begin
		SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when  @P_Action ='Submit' then 'Waiting For Approval' when  @P_Action = 'Approve' then 'To be Released' when @P_Action ='Release' then 'Waiting Receiver Confirmation'
	when @P_Action ='ReleaseConfirm' then 'Released' when @P_Action ='Return' then 'Waiting for Return Confirmation'
	when @P_Action='ReturnConfirm' then 'Returned'
	when @P_Action ='Reject' then 'Rejected'when @P_Action ='Cancel' then 'Cancelled'
	end  and Category='Status'
	end

	else 
	begin
	SELECT LookupsID from [M_Lookups] where [Module]=@P_Service and  DisplayName=
	case when @P_Action ='Save' then 'Draft' when (@P_Action ='Submit' or @P_Action ='Resubmit' or @P_Action ='Escalate' or @P_Action ='Redirect' )
	 then 'Waiting for Approval' when (@P_Action ='Approve' )or(@P_Action ='AssignTo' )or(@P_Action ='AssignToMe' ) then 'Under Progress' when @P_Action ='Reject'  then 'Rejected'	
	 when @P_Action ='ReturnForInfo'  then 'Pending for Resubmission' when @P_Action ='Close'  then 'Closed'
	end  and Category='Status'
	end
	

END
GO
/****** Object:  StoredProcedure [dbo].[Get_SubEvent]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_SubEvent]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[SubEvent] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_SubEventByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_SubEventByID]
	@P_SubEventID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[SubEvent] where DeleteFlag=0 and SubEventID = @P_SubEventID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_SubEventList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_SubEventList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [subEventID]) as 
	slno, *
	from [dbo].[SubEvent] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_Task]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_Task]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Task] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TaskByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_TaskByID]
	@P_TaskID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Task] where DeleteFlag=0 and TaskID = @P_TaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TaskList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Get_TaskList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [TaskID]) as 
	slno, *
	from [dbo].[Task] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_Training]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_Training]
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[Training] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TrainingAssigneeID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_TrainingAssigneeID] -- Get_TrainingAssigneeID '030-2019-TR'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare @UserID int = 0;
	set @UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and Status = 43 and ([WorkflowProcess] = 'AssignToMeWorkflow' or [WorkflowProcess] = 'AssignWorkflow') 
	  order by WorkflowID desc) 
	 ))
	 if(@UserID is null)
	 begin
	 set @UserID = 0;
	 select @UserID as UserID
	 end
	 else
	 begin
	 select @UserID as UserID
	 end
	 
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TrainingByApproverId]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_TrainingByApproverId] --  Get_MemoByApproverId '102-2019-M'
	-- Add the parameters for the stored procedure here
	@P_ReferenceNumber nvarchar(max) = 0,
	@P_UserID int=0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 42) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

	declare @result table(
	id int identity(1,1),
	ApproverId int
	);

		insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =@P_ReferenceNumber and (Status = 42) order by WorkflowID desc) 
	 )
	  insert into @result
	 select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 WD.delegateuser from @Workflow WD
	 where WD.ReferenceNumber =@P_ReferenceNumber and (WD.Status = 42)order by WorkflowID desc)  
	 )

	 
	  if((select count(*)from @result) =0)
	 insert into @result
	 select 0;

	 if((select count(*) from @result where ApproverId = @P_UserID)>0)
	select ApproverId from @result where ApproverId = @P_UserID
	else
	select top 1 ApproverId from @result

END


GO
/****** Object:  StoredProcedure [dbo].[Get_TrainingByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_TrainingByID] -- [Get_TrainingByID] 4
	@P_TrainingID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [TrainingID],[TrainingReferenceID],[SourceOU],[SourceName],[TrainingFor],[TraineeName],[TrainingName],[IsNotificationReceived],
	(select DepartmentID from UserProfile where UserProfileId= [TraineeName]) as TraineeDepartmentID,
	(select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	(select top 1 ToEmail from [Workflow] where [ReferenceNumber] =[Training].[TrainingReferenceID] and 
	[FromEmail] = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=[Training].CreatedBy) and (Status = 42) order by [WorkflowID] desc)))  
	  as ApproverID,
	[ApproverDepartmentID],[StartDate],[EndDate],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where [ReferenceNumber] =[Training].[TrainingReferenceID] order by [WorkflowID] desc) as Status,
	  (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (select top 1 FromEmail from [dbo].[Workflow] where [ReferenceNumber] =
	   (select [TrainingReferenceID] from  [dbo].[Training]  WHERE [TrainingID] = @P_TrainingID and [IsHrHeadApproved]=1) 
	   and [WorkflowProcess]= 'ApprovalWorkflow' order by [WorkflowID] desc)) as 'HRManagerUserID' 

	from [dbo].[Training] where DeleteFlag=0 and TrainingID = @P_TrainingID
END

GO
/****** Object:  StoredProcedure [dbo].[Get_TrainingCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_TrainingCommunicationHistory]    ******/
CREATE PROCEDURE [dbo].[Get_TrainingCommunicationHistory]
    @P_TrainingID int =0

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		
			select [CommunicationID],[TrainingID],[Message],[ParentCommunicationID],[Action],
case when [DelegateUser] is null then (select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else concat((select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]), ' on behalf of ',
	(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.CreatedBy  )) end as 
	 CreatedBy,
		[CreatedDateTime],
		case when [DelegateUser] is null then (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoID from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoGuid,
	 case when [DelegateUser] is null then (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]= a.CreatedBy)
	else (select ProfilePhotoName from [dbo].[UserProfile] where [UserProfileId]=[DelegateUser]) end as PhotoName   from [dbo].[TrainingCommunicationHistory]  as a
		where [TrainingID]=@P_TrainingID-- order by [CreatedDateTime] desc

END
GO
/****** Object:  StoredProcedure [dbo].[Get_TrainingList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_TrainingList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [TrainingID]) as 
	slno, *
	from [dbo].[Training] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END

GO
/****** Object:  StoredProcedure [dbo].[Get_TripCoPassengers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_TripCoPassengers]   ******/
CREATE PROCEDURE [dbo].[Get_TripCoPassengers] --[Get_TripCoPassengers] 1,1,1
    @P_VehicleReqID int = null,
    @P_Type int = 0
	
AS
BEGIN
  
    SET NOCOUNT ON;
    if(@P_Type is null or @P_Type =1 or @P_Type =0)
 
	select T.CoPassengerID,T.OtherCoPassengerName,U.EmployeeName as CoPassengerName,O.DepartmentName as CoPassengerDepartment,O.DepartmentID  as CoPassengerDepartmentID 
	from TripCoPassengers as  T join UserProfile as U on (U.UserProfileId=T.CoPassengerID )  join M_Department as O   on U.DepartmentID =O.DepartmentID
	 and T.VehicleReqID =@P_VehicleReqID and T.DeleteFlag=0 Union all select CoPassengerID,OtherCoPassengerName,'','','' as CoPassengerDepartment from TripCoPassengers
	 where (CoPassengerID is null or CoPassengerID=0)  and VehicleReqID =@P_VehicleReqID and DeleteFlag=0
    
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TripType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_TripType]    ******/
CREATE PROCEDURE [dbo].[Get_TripType]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT TripTypeID,TripTypeENValue as TripTypeName from [dbo].[M_TripType] where DeleteFlag=0
	else
	SELECT TripTypeID, TripTypeARValue as TripTypeName  from [dbo].[M_TripType] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_TripVehicleIssues]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_TripVehicleIssues] --[Get_TripVehicleIssues] null,null,null,4
    @P_VehicleReqID int = null,
    @P_Type int = 0,
    @P_UserID nvarchar(100)= null,
	@P_VehicleID int = null
AS
BEGIN
    
    SET NOCOUNT ON;

	if not exists(select * from TripVehicleIssues where VehicleReqID=@P_VehicleReqID) and @P_VehicleID is not null
	begin
		select T.IssueID,@P_VehicleReqID as VehicleReqID,0 as DeleteFlag from TripVehicleIssues as T inner join VehicleRequest as VR on VR.VehicleReqID=T.VehicleReqID
		where T.DeleteFlag = 0 and VR.VehicleID=@P_VehicleID and VR.ReferenceNumber = (
		select max(ReferenceNumber) from TripVehicleIssues as T inner join VehicleRequest as VR on VR.VehicleReqID=T.VehicleReqID
		where T.DeleteFlag = 0 and VR.VehicleID=@P_VehicleID)
	end
	else
	begin
		if(@P_Type is null or @P_Type =1 or @P_Type =0)
		SELECT [IssueID],VehicleReqID,DeleteFlag from [dbo].[TripVehicleIssues] where [VehicleReqID]= @P_VehicleReqID and DeleteFlag=0;
	End
END 
GO
/****** Object:  StoredProcedure [dbo].[Get_TripVehicleIssuesPreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_TripVehicleIssuesPreview] --[Get_TripVehicleIssuesPreview]1
    @P_VehicleReqID int = null,
    @P_Type int = 0,
    @P_UserID nvarchar(100)= null,
	@P_VehicleID int = null,
	@P_PageType int = 0
AS
BEGIN
    
    SET NOCOUNT ON;


	
	
		if(@P_PageType =0)
		select MI.IssueID,MI.IssueARValue as IssueName,T.VehicleReqID as VehicleReqID,0 as DeleteFlag from 
		(select TI.* from TripVehicleIssues as TI where TI.VehicleReqID=@P_VehicleReqID and TI.Type = 0 and TI.DeleteFlag = 0  ) as T 
		right join M_VehicleIssues as MI on MI.IssueID = T.IssueID 

		if(@P_PageType =1)
		select MI.IssueID,MI.IssueARValue as IssueName,T.VehicleReqID as VehicleReqID,0 as DeleteFlag from 
		(select TI.* from TripVehicleIssues as TI where TI.VehicleReqID=@P_VehicleReqID and  TI.DeleteFlag = 0  ) as T 
		right join M_VehicleIssues as MI on MI.IssueID = T.IssueID 

	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_User]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_User]  ******/
CREATE PROCEDURE [dbo].[Get_User] -- [Get_User] '2',9,'',0

@P_Department nvarchar(max) = null,
@P_UserID int = 0,
@P_GetHead bit = 0,
@P_Type int = 0
	

	
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type=0)
	begin

		if(@P_Department is null and @P_UserID is null or (@P_Department ='')and @P_GetHead != 1)
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0

		if(@P_Department is not null and @P_Department != '' and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
		and UserProfileId != @P_UserID 
		and  DepartmentID in 
		( SELECT value from string_split((replace( (REPLACE((REPLACE(@P_Department, '[', '')),'"','')),']','')),',')) order by [IsOrgHead] desc	
		end

		if(@P_UserID >0 and @P_UserID is not null and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID
		end

		if(@P_GetHead = 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DepartmentID in (select value from string_split(@P_Department , ',')) and [IsOrgHead] = 1
		end
	end

	else if(@P_Type=2)
	begin

		if(@P_Department is null and @P_UserID is null or (@P_Department ='')and @P_GetHead != 1)
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0

		if(@P_Department is not null and @P_Department != '' and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
		and UserProfileId != @P_UserID 
		and  OrgUnitID in 
		( SELECT value from string_split((replace( (REPLACE((REPLACE(@P_Department, '[', '')),'"','')),']','')),',')) order by [IsOrgHead] desc	
		end

		if(@P_UserID >0 and @P_UserID is not null and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID
		end

		if(@P_GetHead = 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where OrgUnitID in (select value from string_split(@P_Department , ',')) and [IsOrgHead] = 1
		end
	end

	else
	begin
		if(@P_Department is null and @P_UserID is null or (@P_Department ='')and @P_GetHead != 1)
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0

		if(@P_Department is not null and @P_Department != '' and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
		and UserProfileId != @P_UserID 
		and  UserProfileId in 
		(select M.ApproverID from M_ApproverConfiguration as M where M.DepartmentID in(select value from string_split(@P_Department,','))and M.DeleteFlag=0) order by [IsOrgHead] desc	
		end

		if(@P_UserID >0 and @P_UserID is not null and @P_GetHead != 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID
		end

		if(@P_GetHead = 1)
		begin
		SELECT *,HOD as IsHOD,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] 
		where UserProfileId in (select M.ApproverID from M_ApproverConfiguration as M where M.DepartmentID in(select value from string_split(@P_Department,','))and M.DeleteFlag=0)
		 and [IsOrgHead] = 1
		end
	end
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserByADUserName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_UserByADUserName] -- [Get_UserByADUserName] TestUser1

@P_UserName nvarchar(max) = null
	

	
AS
BEGIN
	
	SET NOCOUNT ON;

	declare @Result table(
	UserID int,
	UnitID int, 
	UnitName nvarchar(max),
	SectionID int, 
	ScetionName nvarchar(max),
	DepartmentID int, 
	DepartmentName nvarchar(max),
	HOU bit,
	HOD bit,
	HOS bit,
	CanRaiseOfficalRequest bit,
	CanManageNews bit,
	CanEditContact bit,
	DisplayName nvarchar(255),
	AttachmentGuid nvarchar(max),
	AttachmentName nvarchar(max),
	InTime datetime,
	OutTime datetime
	);

	insert into @Result (UserID,UnitID,UnitName,SectionID,ScetionName,DepartmentID,DepartmentName,HOU,HOD,HOS,CanRaiseOfficalRequest,
						CanManageNews,CanEditContact,DisplayName,AttachmentGuid,AttachmentName,InTime,OutTime)
	select UserProfileId,OrgUnitID,(select [OrganizationUnits] from [dbo].[Organization] where OrganizationID=OrgUnitID) 
	,SectionID,(select S.SectionName from M_Section as S where S.SectionID=A.SectionID),
	DepartmentID,(select D.DepartmentName from M_Department as D where D.DepartmentID=a.DepartmentID)
	,IsOrgHead as HOU,HOD,HOS,CanRaiseOfficalRequest,CanManageNews,CanEditContact,EmployeeName,ProfilePhotoID,ProfilePhotoName
	,InTime,OutTime from UserProfile as A where [ADUserName]=@P_UserName

	select * from @Result
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserByID]
	@P_UserID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT * from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserByUnits]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[Get_UserByUnits] -- [Get_User] '2',9,'',0

@P_Department nvarchar(max) = null,
@P_UserID int = 0,
@P_GetHead bit = 0,
@P_Type int = 0
	

	
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type=0)
	begin

		if(@P_Department is null and @P_UserID is null or (@P_Department ='')and @P_GetHead != 1)
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0

		if(@P_Department is not null and @P_Department != '' and @P_GetHead != 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0  
		and UserProfileId != @P_UserID 
		and  OrgUnitID in 
		( SELECT value from string_split((replace( (REPLACE((REPLACE(@P_Department, '[', '')),'"','')),']','')),',')) order by [IsOrgHead] desc	
		end

		if(@P_UserID >0 and @P_UserID is not null and @P_GetHead != 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where DeleteFlag=0 and UserProfileId = @P_UserID
		end

		if(@P_GetHead = 1)
		begin
		SELECT *,[NotificationPreferencesEmail] as CanSendEmail,[NotificationPreferencesSMS] as CanSendSMS,UserProfileId as UserID,[OfficialMailId] as OfficialEmailID from [dbo].[UserProfile] where OrgUnitID in (select value from string_split(@P_Department , ',')) and [IsOrgHead] = 1
		end
	end
	
	
END
/****** Object:  StoredProcedure [dbo].[Get_UserByADUserName]    Script Date: 14/8/2019 11:10:36 AM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Get_UserList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserList] 
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	select * from (select row_number() over(Order By [UserProfileId]) as 
	slno, *
	from [dbo].[UserProfile] where  DeleteFlag=0 )m where slno between @StartNo and @EndNo 

END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_UserProfileByID] ******/
CREATE PROCEDURE [dbo].[Get_UserProfileByID]
        @P_UserProfileId int = null
AS
BEGIN
	SET NOCOUNT ON;
	select  [UserProfileId],[ReferenceNumber],[EmployeeName] ,[EmployeeCode] ,[OfficialMailId]
		   ,[PersonalMailId],[DepartmentID] as OrgUnitID,[IsOrgHead],[Gender],[BirthDate],[Age],[CountryofResidence]
		   ,[MobileNumber],[EmployeePhoneNumber] ,[Religion] ,[Nationality],[PreviousNationality]
		   ,[JoinDate],[Title] ,[Grade] ,[EmployeePosition] ,[EmploymentStatus]
		   ,[Resigned],[ResignationDate],[BalanceLeave],(case when [NotificationPreferencesEmail] =1 then 'Email' else null end) as [NotificationPreferencesEmail]
		   ,(case when [NotificationPreferencesSMS] = 1 then 'SMS' else null end) as [NotificationPreferencesSMS],[PassportNumber]
		   ,[PassportIssuePlace],[PassportIssueDate],[PassportExpiryDate],[VisaNumber],[VisaIssueDate]
		   ,[VisaExpiryDate],[EmiratesIdNumber],[EmiratesIdIssueDate] ,[EmiratesIdExpiryDate]
		   ,[InsuranceNumber],[InsuranceIssueDate] ,[InsuranceExpiryDate] ,[LabourContractNumber]
		   ,[LabourContractIssueDate] ,[LaborContractExpiryDate],[CreatedBy],[UpdatedBy]
		   ,[CreatedDatetime],[UpdatedDatetime],[DeleteFlag],[LoginUser],[RoleId]
		   ,[EmployeePhoto] ,[ResidenceNumber],[ResidenceIssuePlace],[ResidenceIssueDate],[EnteringDate],[WorkAddress],[GraduationDate],[BirthPlace],[Salary] ,[ContractTypes]
		   ,[ProfilePhotoID],[ProfilePhotoName],[ADUserName],[HOD],[HOS],[CanRaiseOfficalRequest]
		   ,[CanManageNews],[DepartmentID],[SectionID],[CanEditContact],[SignaturePhoto],[SignaturePhotoID]
	 from [dbo].[UserProfile] where UserProfileId=@P_UserProfileId and DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserProfileDashboardCount] 
	-- Add the parameters for the stored procedure here
	@P_UserID int =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		declare @EmployeesRegistered int = 0, @ExpiredPassportNumber int =0, @ExpiredInsuranceNumber int =0, @ExpiredEmiratesID int = 0, @ExpiredLabourContract int =0, @ExpiredVisa int =0

	set @EmployeesRegistered = (SELECT count(*)
					from [dbo].[UserProfile] where DeleteFlag = 0)

	set @ExpiredPassportNumber = (SELECT count(*)
					from [dbo].[UserProfile] as DT 
					where getdate() > DT.PassportExpiryDate and DeleteFlag = 0)
									
	set @ExpiredInsuranceNumber = (SELECT count(*)
					from [dbo].[UserProfile] as DT 
					where getdate() > DT.InsuranceExpiryDate and DeleteFlag = 0)

	set @ExpiredEmiratesID = (SELECT count(*)
					from [dbo].[UserProfile] as DT 
					where getdate() > DT.EmiratesIdExpiryDate and DeleteFlag = 0)

	set @ExpiredLabourContract = (SELECT count(*)
					from [dbo].[UserProfile] as DT 
					where getdate() > DT.LaborContractExpiryDate and DeleteFlag = 0)

	set @ExpiredVisa = (SELECT count(*)
					from [dbo].[UserProfile] as DT 
					where getdate() > DT.VisaExpiryDate and DeleteFlag = 0)

	select @EmployeesRegistered as EmployeesRegistered,@ExpiredPassportNumber as ExpiredPassportNumber,@ExpiredInsuranceNumber as ExpiredInsuranceNumber,@ExpiredEmiratesID as ExpiredEmiratesID,@ExpiredLabourContract as ExpiredLabourContract,@ExpiredVisa as ExpiredVisa
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileEducation]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserProfileEducation]
   @P_UserProfileId int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT * from [dbo].[UserProfileEducation] where  UserProfileId = @P_UserProfileId and DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_UserProfileList]   ******/
CREATE PROCEDURE [dbo].[Get_UserProfileList] -- [Get_UserProfileList] 1,10,0
-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int = 0,
	@P_UserName nvarchar(max) = null,
	@P_OrgDepartmentID int= 0,
	@P_SmartSearch nvarchar(max) = '',
	@P_JobTitle nvarchar(max) = null,
	@P_Type int =0,
	@P_Language nvarchar(10)= 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
	id int,
	ReferenceNumber nvarchar(255),
	UserProfileId int,
	DepartmentName nvarchar(255),
	EmployeeName nvarchar(max),
	JobTitle nvarchar(max),
	PassportExpiryDate datetime,
	InsurenceExpiryDate datetime,
	EmiratesExpiryDate datetime,
	LabourcontactExpiryDate datetime,
	VisaExpiryDate datetime,
	CreatedDateTime datetime
	);

    -- Insert statements for procedure here
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	insert into @result  
	SELECT row_number() over (Order By  UP.[UserProfileId]) as slno,up.ReferenceNumber,
	UP.[UserProfileId],
	(select ( case when @P_Language='AR' then ArDepartmentName else DepartmentName end) 
		from [dbo].M_Department as OU where DepartmentID = UP.OrgUnitID ) as DepartmentName,
	UP.[EmployeeName],
	 (select STUFF((SELECT ',' + CAST(E.JobTitle AS nVARCHAR(max)) AS [text()]
    FROM  [UserProfileWorkExperience] as E where E.UserProfileId = UP.[UserProfileId] and (E.DeleteFlag=0 or E.DeleteFlag is null)
    FOR XML PATH('')), 1, 1, NULL))as JobTitle	
	, PassportExpiryDate,InsuranceExpiryDate,EmiratesIdExpiryDate,LaborContractExpiryDate,VisaExpiryDate,CreatedDatetime
	from [dbo].[UserProfile] as UP 
	--select * from @result --where id between 1 and 3 

	if(@P_UserName != '')
	 delete from @result where EmployeeName not like '%'+@P_UserName+'%'  or EmployeeName is null

	 if(@P_OrgDepartmentID != '') 
	 delete from @result where DepartmentName !=  (select ( case when @P_Language='AR' then ArDepartmentName else DepartmentName end)
		 from M_Department where DepartmentID = @P_OrgDepartmentID)or DepartmentName is null

	if(@P_JobTitle != '') 
	begin

	 delete from @result where JobTitle not like '%'+@P_JobTitle+'%' or JobTitle is null

	 end

	
	if(@P_Type = 1)
	 begin
		delete from @result where PassportExpiryDate > (select GETDATE())
	 end

	 if(@P_Type = 2)
	 begin
		delete from @result where InsurenceExpiryDate > (select GETDATE())
	 end

	 if(@P_Type = 3)
	 begin
		delete from @result where EmiratesExpiryDate > (select GETDATE())
	 end

	 if(@P_Type = 4)
	 begin
		delete from @result where LabourcontactExpiryDate > (select GETDATE())
	 end

	  if(@P_Type = 5)
	 begin
		delete from @result where VisaExpiryDate > (select GETDATE())
	 end

	if(@P_SmartSearch is not null and @P_Method = 0 )
	  begin
	 select * from (SELECT row_number() over (Order By  CreatedDateTime desc) as slno,
		 * from @result as m  where ((ReferenceNumber  like '%'+@P_SmartSearch+'%')or(EmployeeName  like '%'+@P_SmartSearch+'%') or (JobTitle like '%'+@P_SmartSearch+'%') or
		  (DepartmentName  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(PassportExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(InsurenceExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(VisaExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(LabourcontactExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(EmiratesExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.PassportIssueDate as date), 103) from UserProfile as a where a.UserProfileId=m.UserProfileId )  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast(a.VisaIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId )  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.EmiratesIdIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast(a.LabourContractIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.InsuranceIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  (a.PassportNumber) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT  a.PassportIssuePlace  from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')	     or	((SELECT  a.LabourContractNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT  a.InsuranceNumber  from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')    or	((SELECT  a.VisaNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT a.EmiratesIdNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') or			
		(((select count(CONVERT(nvarchar(10), cast(K.StartDate as date), 103)) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and CONVERT(nvarchar(10), cast(k.StartDate as date), 103) like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.TrainingName) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.TrainingName like '%'+@P_SmartSearch+'%')>0))
		or  (((select count(K.StartDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (  CONVERT(nvarchar(10), cast(K.StartDate as date), 103) )  like '%'+@P_SmartSearch+'%')>0)) 
		or
			  (((select count(K.EndDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (CONVERT(nvarchar(10), cast(K.EndDate as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		     or (((select count(K.EndDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (CONVERT(nvarchar(10), cast(K.EndDate as date), 103) )  like '%'+@P_SmartSearch+'%')>0))
		 		     or (((select count(K.TimePeriodFrom) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and ( CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), K.TimePeriodFrom)) as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		   		     or (((select count(K.TimePeriodTo) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), K.TimePeriodFrom)) as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.City) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.City like '%'+@P_SmartSearch+'%')>0))
			  or  (((select count(K.Company) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.Company like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.JobTitle) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.JobTitle like '%'+@P_SmartSearch+'%')>0))
			  or  (((select count(K.SchoolCollege) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.SchoolCollege like '%'+@P_SmartSearch+'%')>0))
			 or  (((select count(K.FieldStudy) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
		and k.FieldStudy like '%'+@P_SmartSearch+'%')>0))
			 or  (((select count(K.Degree) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and  (select case when @P_Language = 'AR' then ArEducationName else EducationName end from M_Education where EducationID = k.Degree)  = @P_SmartSearch)>0))
 		or( (select a.OfficialMailId from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')
		or( (select a.PersonalMailId from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	
		or( (select a.EmployeeCode from UserProfile as a  where a.UserProfileId=m.UserProfileId) = @P_SmartSearch)	
		or( (select a.age from UserProfile as a  where a.UserProfileId=m.UserProfileId)like '%' +@P_SmartSearch+ '%')	
		or( (select a.MobileNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	or( (select a.EmployeePhoneNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	or( (select a.EmployeePosition from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')
		or( (select a.BalanceLeave from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	  or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.ResignationDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
		 or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.JoinDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.BirthDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
		   	or ((select count(K.Religion) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then ReligionName else ArReligionName end)from M_Religion as c where c.ReligionID=k.Religion) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.CountryofResidence) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then CountryName else ArCountryName end)from M_Country as c where c.CountryID=k.CountryofResidence) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.Nationality) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then NationalityName else ArNationalityName end)from M_Nationality as c where c.NationalityID=k.Nationality) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.PreviousNationality) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then NationalityName else ArNationalityName end)from M_Nationality as c where c.NationalityID=k.PreviousNationality) like '%'+@P_SmartSearch+'%')>0)
		or( (select (case when a.NotificationPreferencesEmail=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=163))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId  ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.NotificationPreferencesSMS=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=164))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Title =0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=165))
			when a.Title=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=166))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Gender=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=167))
			when a.Gender=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=168))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Resigned=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=169))
			when a.Resigned=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=170))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.EmploymentStatus=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=182))
			when a.EmploymentStatus=2 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=183))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.CreatedDatetime)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
			or  (((select count(CONVERT(nvarchar(10), cast(K.TimePeriodFrom as date), 103)) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and CONVERT(nvarchar(10), cast(k.TimePeriodFrom as date), 103) like '%'+@P_SmartSearch+'%')>0))
		  
		 ) ) as m where  slno between @StartNo and @EndNo 
	 end


		 if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as m where ((ReferenceNumber  like '%'+@P_SmartSearch+'%')or(EmployeeName  like '%'+@P_SmartSearch+'%') or (JobTitle like '%'+@P_SmartSearch+'%') or
		  (DepartmentName  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(PassportExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(InsurenceExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(VisaExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(LabourcontactExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')or	((SELECT  CONVERT(nvarchar(10), cast(EmiratesExpiryDate as date), 103))  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.PassportIssueDate as date), 103) from UserProfile as a where a.UserProfileId=m.UserProfileId )  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast(a.VisaIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId )  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.EmiratesIdIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast(a.LabourContractIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast(a.InsuranceIssueDate as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  (a.PassportNumber) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT  a.PassportIssuePlace  from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')	     or	((SELECT  a.LabourContractNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT  a.InsuranceNumber  from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')    or	((SELECT  a.VisaNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')
		 or	((SELECT a.EmiratesIdNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') or			
		(((select count(CONVERT(nvarchar(10), cast(K.StartDate as date), 103)) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and CONVERT(nvarchar(10), cast(k.StartDate as date), 103) like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.TrainingName) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.TrainingName like '%'+@P_SmartSearch+'%')>0))
		or  (((select count(K.StartDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (  CONVERT(nvarchar(10), cast(K.StartDate as date), 103) )  like '%'+@P_SmartSearch+'%')>0)) 
		or
			  (((select count(K.EndDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (CONVERT(nvarchar(10), cast(K.EndDate as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		     or (((select count(K.EndDate) from UserProfileTrainingCertifications as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (CONVERT(nvarchar(10), cast(K.EndDate as date), 103) )  like '%'+@P_SmartSearch+'%')>0))
		 		     or (((select count(K.TimePeriodFrom) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and ( CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), K.TimePeriodFrom)) as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		   		     or (((select count(K.TimePeriodTo) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), K.TimePeriodFrom)) as date), 103))  like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.City) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.City like '%'+@P_SmartSearch+'%')>0))
			  or  (((select count(K.Company) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.Company like '%'+@P_SmartSearch+'%')>0))
		  or  (((select count(K.JobTitle) from UserProfileWorkExperience as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.JobTitle like '%'+@P_SmartSearch+'%')>0))
			  or  (((select count(K.SchoolCollege) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and k.SchoolCollege like '%'+@P_SmartSearch+'%')>0))
			 or  (((select count(K.FieldStudy) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
		and k.FieldStudy like '%'+@P_SmartSearch+'%')>0))
			 or  (((select count(K.Degree) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and (select case when @P_Language = 'AR' then ArEducationName else EducationName end from M_Education where EducationID = k.Degree) = @P_SmartSearch)>0))
 		or( (select a.OfficialMailId from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')or( (select a.PersonalMailId from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	
		or( (select a.EmployeeCode from UserProfile as a  where a.UserProfileId=m.UserProfileId) = @P_SmartSearch)	or( (select a.age from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	
		or( (select a.MobileNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	or( (select a.EmployeePhoneNumber from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	or( (select a.EmployeePosition from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')
		or( (select a.BalanceLeave from UserProfile as a  where a.UserProfileId=m.UserProfileId) like '%' +@P_SmartSearch+ '%')	  or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.ResignationDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
		 or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.JoinDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%')   or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.BirthDate)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
		   	or ((select count(K.Religion) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then ReligionName else ArReligionName end)from M_Religion as c where c.ReligionID=k.Religion) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.CountryofResidence) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then CountryName else ArCountryName end)from M_Country as c where c.CountryID=k.CountryofResidence) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.Nationality) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then NationalityName else ArNationalityName end)from M_Nationality as c where c.NationalityID=k.Nationality) like '%'+@P_SmartSearch+'%')>0)
		  	or ((select count(K.PreviousNationality) from UserProfile as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then NationalityName else ArNationalityName end)from M_Nationality as c where c.NationalityID=k.PreviousNationality) like '%'+@P_SmartSearch+'%')>0)
		or( (select (case when a.NotificationPreferencesEmail=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=163))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId  ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.NotificationPreferencesSMS=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=164))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Title =0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=165))
			when a.Title=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=166))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Gender=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=167))
			when a.Gender=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=168))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.Resigned=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=169))
			when a.Resigned=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=170))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when a.EmploymentStatus=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=182))
			when a.EmploymentStatus=2 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=183))
			end) from UserProfile as a where a.UserProfileId=m.UserProfileId   ) like  '%'+@P_SmartSearch+'%')
		  or	((SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), a.CreatedDatetime)) as date), 103) from UserProfile as a  where a.UserProfileId=m.UserProfileId)  like '%'+@P_SmartSearch+'%') 
			or  (((select count(CONVERT(nvarchar(10), cast(K.TimePeriodFrom as date), 103)) from UserProfileEducation as K where K.UserProfileId=m.UserProfileId and (K.DeleteFlag=0 or K.DeleteFlag is null)
			and CONVERT(nvarchar(10), cast(k.TimePeriodFrom as date), 103) like '%'+@P_SmartSearch+'%')>0))
		  
		 )
		
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  [UserProfileId] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

 END 
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileTrainingCertifications]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserProfileTrainingCertifications]
   @P_UserProfileId int = null
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT * from [dbo].[UserProfileTrainingCertifications] where  UserProfileId = @P_UserProfileId and DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_UserProfileWorkExperience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Get_UserProfileWorkExperience]
	-- Add the parameters for the stored procedure here
	   @P_UserProfileId int = null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT * from [dbo].[UserProfileWorkExperience] where  UserProfileId = @P_UserProfileId and DeleteFlag=0;
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VechicalByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VechicalByID] ******/
CREATE PROCEDURE [dbo].[Get_VechicalByID] 
@P_VehicleID int = null
AS
BEGIN

SET NOCOUNT ON;
SELECT [VehicleID],[PlateNumber],[PlateColor],[VehicleMake],[VehicleModel],[YearofManufacture],[CarCompanyID],[ContractNumber]
,[ContractDuration],[ContractStartDate],[ContractEndDate],[VehicleRegistrationNumber],[VehicleRegistrationExpiry]
,[NextService],[TyreChange],[Notes],[DeleteFlag],[CreatedBy],[UpdatedBy],[CreatedDateTime]
,[UpdatedDateTime] , 
(Select DepartmentID from UserProfile Where UserProfileId=V.CreatedBy) as CreatedDepartment
,VehicleName,CurrentMileage,IsAlternativeVehicle
from [dbo].[Vehicles] as V WHERE VehicleID = @P_VehicleID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VechilePlateNumberColor]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VechilePlateNumberColor]   ******/
Create PROCEDURE [dbo].[Get_VechilePlateNumberColor] --[Get_VechilePlateNumberColor]1
	
	@P_Type int = null,
	@P_Language nvarchar(10) =null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	if(@P_Type = 1)
	select distinct(PlateNumber) as DisplayName from [dbo].[Vehicles] where PlateNumber is not null

	if(@P_Type = 2)
	select distinct(PlateColor) as DisplayName from [dbo].[Vehicles] where PlateNumber is not null

End
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicalFineReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicalFineReport]   ******/
	CREATE PROCEDURE [dbo].[Get_VehicalFineReport]
	@P_UserID int = 0,	
	@P_Status nvarchar(50)=null,
	@P_IssuedAgainstDepartment nvarchar(Max)=null,
	@P_PlateNumber nvarchar(Max)=null,
	@P_IssuedAgainstName nvarchar(Max)=null,
	@P_FineDateTo datetime=null,
	@P_FineDateFrom datetime=null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null
	AS
	BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	

	declare @result table
	(
	 VehicleFineID int,
	 Time datetime,
	 Status  nvarchar(250),
	 PlateNumber nvarchar(max),
	 IssuedAgainstDepartment  nvarchar(max),
	 IssuedAgainstName  nvarchar(max),
	 VehicleModel nvarchar(max),
	 FineNumber nvarchar(max),
	 Location nvarchar(max),
	 BlackPoints nvarchar(max),
	 FineDesciption nvarchar(max),
	 FineTime time,
	 VehicleMake nvarchar(max),
	 PlateColor nvarchar(max),
	 serverTime nvarchar(max)
	 )

	  if(@P_IssuedAgainstDepartment ='Protocol')
	set @P_IssuedAgainstDepartment = (select DepartmentName from M_Department where DepartmentID=1)


	insert into @result

	select F.VehicleFineID,(SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    F.FinedDate), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET())))),(select (case when @P_Language ='EN' then StatusENValue else StatusARValue end) from M_VehicleRequestStatus
		 where StatusID = F.Status) as Status,(select V.PlateNumber from Vehicles as V where V.VehicleID=F.VehicleID ),
		 (select (case when @P_Language ='EN' then D.DepartmentName else D.ArDepartmentName end) from [dbo].[M_Department] as D 
		 where D.DepartmentID = (select UP.DepartmentID from UserProfile as UP where UP.UserProfileId=F.DriverID)),
		 (select UP.EmployeeName from UserProfile as UP where UP.UserProfileId=F.DriverID),
		 F.VehicleModelID, F.FineNumber,F.Location,F.BlackPoints,F.Description,
		 (SELECT CONVERT(time,  SWITCHOFFSET(CONVERT(datetimeoffset, F.FinedDate), DATENAME(TzOffset, SYSDATETIMEOFFSET())))),
		 (select VH.VehicleMake from Vehicles as VH where Vh.VehicleID = F.VehicleID),
		 (select VH.PlateColor from Vehicles as VH where Vh.VehicleID = F.VehicleID),
		 (select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    F.FinedDate), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),',',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    F.FinedDate), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100))))) from VehicleFines as F  where F.DeleteFlag = 0 
	

	if(@P_Status is not null and @P_Status != 'All')
	delete  from @Result where Status !=@P_Status or Status is null

	 if(@P_FineDateFrom is not null)
	 delete from @result where cast( Time as date) < cast(@P_FineDateFrom as date)

	 if(@P_FineDateTo is not null)
	 delete from @result where cast( Time as date) > cast(@P_FineDateTo as date)

	 if(@P_PlateNumber is not null)
	 delete from @result where PlateNumber !=@P_PlateNumber or PlateNumber is null

	 if(@P_IssuedAgainstDepartment is not null and @P_IssuedAgainstDepartment != 'All')
	 delete from @result where IssuedAgainstDepartment !=@P_IssuedAgainstDepartment or IssuedAgainstDepartment is null

	 if(@P_IssuedAgainstName is not null and @P_IssuedAgainstName != 'All')
	 delete from @result where IssuedAgainstName !=@P_IssuedAgainstName or IssuedAgainstName is null

	

	if(@P_SmartSearch is not null )
	begin
	select * from (SELECT row_number() over (Order By  [VehicleFineID] desc) as slno,
		* from @result) as m where 
		( (Status  like '%'+@P_SmartSearch+'%') or
		(serverTime  like '%'+@P_SmartSearch+'%')  
		or (IssuedAgainstDepartment like '%'+@P_SmartSearch+'%')or (PlateNumber like '%'+@P_SmartSearch+'%')or
		(IssuedAgainstName like '%'+@P_SmartSearch+'%') or (VehicleModel like '%'+@P_SmartSearch+'%')
		or (FineNumber like '%'+@P_SmartSearch+'%') or  (Location like '%'+@P_SmartSearch+'%')
		or (BlackPoints like '%'+@P_SmartSearch+'%') or (FineDesciption like '%'+@P_SmartSearch+'%')
		or (FineTime like '%'+@P_SmartSearch+'%') or (PlateColor like '%'+@P_SmartSearch+'%')
		or (VehicleMake like '%'+@P_SmartSearch+'%')  )
	end

	if(@P_SmartSearch is null)
	begin
	select * from @result
		
	end
End
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicalReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[[Get_VehicalReport]]   ******/
CREATE PROCEDURE [dbo].[Get_VehicalReport] 
	@P_UserID int = 0,
	@P_ContractEndDate datetime=null,
	@P_PlateNumber nvarchar(50)=null,
	@P_PlateColor nvarchar(50)=null,
	@P_VehicleModel nvarchar(50)=null,
	@P_NextService int =0,
	@P_TyreChange int=0,
	@P_VehicleRegistrationExpiry datetime=null,
	@P_DepartmentOffice nvarchar(100)=null,
	@P_Destination nvarchar(100)=null,
	@P_RequestorDepartment nvarchar(100)=null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null,
	@P_IsAlternativeVehicle bit = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
		set @P_DepartmentOffice =(select Case when @P_Language='EN' then DepartmentName else ArDepartmentName end from M_Department where DepartmentID = @P_DepartmentOffice)

	declare @result table
	(
	 VehicleID int,
	 PlateNumber nvarchar(250),
	 PlateColor  nvarchar(250),
	 vehicleModel  nvarchar(250),
	 NextService int,
	 TyreChange int,
	 ContractEndDate datetime,
	 VehicleRegistrationExpiry datetime,
	 CreatedDepartment nvarchar(250),
	 CreatedBy int,
	 CurrentMileage nvarchar(max),
	 Nameofuser  nvarchar(max),
	 NameofDepartment  nvarchar(max),
	 vehicleMake  nvarchar(250),
	 YearOfManufature  nvarchar(250),
	 ContractNumber  nvarchar(250),
	 ContractStartDate datetime,
	 VehicleRegistrationNumber  nvarchar(250),
	 RentaCarCompany nvarchar(max),
	  IsAlternativeVehicle bit,
	 Notes nvarchar(max),
	 CreatorName nvarchar(max))

	insert into @result
	select VehicleID,PlateNumber,PlateColor,vehicleModel,NextService,TyreChange,ContractEndDate,
	VehicleRegistrationExpiry ,(Select(case when @P_Language='EN' then D.DepartmentName else D.ArDepartmentName end) from UserProfile as U  inner join 
	M_Department as D on U.DepartmentID= D.DepartmentID Where U.UserProfileId=V.CreatedBy) 
	as CreatedDepartment, CreatedBy,CurrentMileage,(Select U.EmployeeName from UserProfile as U  Where U.UserProfileId=V.RequestorID),
	(Select(case when @P_Language='EN' then D.DepartmentName else D.ArDepartmentName end) from UserProfile as U  inner join 
	M_Department as D on U.DepartmentID= D.DepartmentID Where U.UserProfileId=V.RequestorID),
	V.VehicleMake,V.YearofManufacture,V.ContractNumber,V.ContractStartDate,V.VehicleRegistrationNumber,
	(select C.CompanyName from CarCompany as C where C.CarCompanyID  = V.CarCompanyID),IsAlternativeVehicle,Notes,
	(select Up.EmployeeName from UserProfile as Up where Up.UserProfileId= V.CreatedBy)     from Vehicles as V where DeleteFlag = 0 
	

	if(@P_IsAlternativeVehicle is not null and @P_IsAlternativeVehicle !='')
	begin
	
		delete from @result where IsAlternativeVehicle != @P_IsAlternativeVehicle or IsAlternativeVehicle = null
	end

	 if(@P_PlateNumber is not null and @P_PlateNumber != '' and @P_PlateNumber != 'All')
	delete  from @Result where PlateNumber !=@P_PlateNumber or PlateNumber is null

	if(@P_PlateColor is not null and @P_PlateColor != '' and @P_PlateColor != 'All')
	 delete from @result where PlateColor != @P_PlateColor or PlateColor is null

	if(@P_DepartmentOffice is not null and @P_DepartmentOffice != '' and @P_DepartmentOffice != 'All')
	 delete from @result where NameofDepartment != @P_DepartmentOffice or NameofDepartment is null


	 if(@P_SmartSearch is not null )
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleID] desc) as slno,
		 * from @result) as m where 
		(((select (Case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where Category='Private' and Module=IsAlternativeVehicle)like @P_SmartSearch) or  
		(PlateNumber  like '%'+@P_SmartSearch+'%') or (PlateColor  like '%'+@P_SmartSearch+'%') or
		(vehicleModel  like '%'+@P_SmartSearch+'%') or ((SELECT  CONVERT(nvarchar(100), cast(ContractEndDate as date), 103)) like '%'+@P_SmartSearch+'%')
		or ((SELECT  CONVERT(nvarchar(100), cast(VehicleRegistrationExpiry as date), 103))  like '%'+@P_SmartSearch+'%')or
		 (NextService  like '%'+@P_SmartSearch+'%') or  (TyreChange  like '%'+@P_SmartSearch+'%')or (NameofDepartment  like '%'+@P_SmartSearch+'%')
		 or(((select(case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where LookupsID= 225) like '%'+@P_SmartSearch+'%') and ContractEndDate is null)
		 or (Nameofuser  like '%'+@P_SmartSearch+'%')or (vehicleMake  like '%'+@P_SmartSearch+'%')or (YearOfManufature  like '%'+@P_SmartSearch+'%')
		 or (ContractNumber  like '%'+@P_SmartSearch+'%')or (VehicleRegistrationNumber  like '%'+@P_SmartSearch+'%') or (RentaCarCompany  like '%'+@P_SmartSearch+'%')
		or (Notes  like '%'+@P_SmartSearch+'%')or  (CreatedDepartment  like '%'+@P_SmartSearch+'%') or (CreatorName  like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast(ContractStartDate as date), 103))  like @P_SmartSearch+'%'))
	 end

	  if(@P_SmartSearch is null  )
	 begin
		select * from @result
		
	 end
End
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicelByPlateNumber]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicelByPlateNumber]    ******/
CREATE PROCEDURE [dbo].[Get_VehicelByPlateNumber] --[Get_VehicelList]1,10,1,TestUser18
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_PlateNumber nvarchar(50)=null,
	@P_VehicleID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	declare @result table
	(
	 VehicleMake nvarchar(max),
	 VehicleName nvarchar(max),
	 PlateColour nvarchar(max),
	 PlateNumber nvarchar(max),
	 [VehicleID] int,
	 ModelName nvarchar(max),
	 CurrentMileage nvarchar(max)
	)

	insert into @result
	select VehicleMake,V.VehicleName,PlateColor,PlateNumber, [VehicleID],V.VehicleModel,V.CurrentMileage from Vehicles as V where DeleteFlag = 0 
	

	if(@P_PlateNumber is not null and @P_PlateNumber != 'All')
	delete  from @Result where PlateNumber !=@P_PlateNumber or PlateNumber is null

	if(@P_VehicleID is not null and @P_VehicleID >0)
	delete  from @Result where VehicleID != @P_VehicleID or VehicleID is null


	 if(@P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleID] desc) as slno,
		 * from @result) as m 
	 end

	 if(@P_Method = 1 )
	 select count(*) from @result 

	 End
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicelFineList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicelFineList]   ******/
CREATE PROCEDURE [dbo].[Get_VehicelFineList] --[Get_VehicelFineList]1,10,1
	@P_PageNumber int =0,
	@P_PageSize int =0,	
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_Status nvarchar(50)=null,
	@P_IssuedAgainstDepartment nvarchar(max)=null,
	@P_IssuedAgainstName nvarchar(100)=null,
	@P_FineDateTo datetime=null,
	@P_FineDateFrom datetime=null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) =null,
	@P_PlateNumber nvarchar(max)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @RefCout int =0,@StartNo int =0 , @EndNo int =0 
	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;

	declare @result table
	(
	 VehicleFineID int,
	 Time datetime,
	 Status  nvarchar(250),
	 PlateNumber nvarchar(max),
	 IssuedAgainstDepartment  nvarchar(max),
	 IssuedAgainstName  nvarchar(max),
	 VehicleModel nvarchar(max),
	 FineNumber nvarchar(max),
	 Location nvarchar(max),
	 BlackPoints nvarchar(max),
	 FineDesciption nvarchar(max),
	 FineTime time,
	 VehicleMake nvarchar(max),
	 PlateColor nvarchar(max),
	 DriverID int,
	 DriverMailID nvarchar(max),
	 ServerTime nvarchar(max)
	 )

	 if(@P_IssuedAgainstDepartment ='Protocol')
	set @P_IssuedAgainstDepartment = (select DepartmentName from M_Department where DepartmentID=1)

	insert into @result
	select F.VehicleFineID, F.FinedDate 
                           ,(select (case when @P_Language ='EN' then StatusENValue else StatusARValue end) from M_VehicleRequestStatus
		 where StatusID = F.Status) as Status,(select V.PlateNumber from Vehicles as V where V.VehicleID=F.VehicleID ),
		 (select (case when @P_Language ='EN' then D.DepartmentName else D.ArDepartmentName end) from [dbo].[M_Department] as D 
		 where D.DepartmentID = (select UP.DepartmentID from UserProfile as UP where UP.UserProfileId=F.DriverID)),
		 (select UP.EmployeeName from UserProfile as UP where UP.UserProfileId=F.DriverID),
		 F.VehicleModelID, F.FineNumber,F.Location,F.BlackPoints,F.Description,
		 (SELECT CONVERT(time,  SWITCHOFFSET(CONVERT(datetimeoffset, F.FinedDate), DATENAME(TzOffset, SYSDATETIMEOFFSET())))),
		 (select VH.VehicleMake from Vehicles as VH where Vh.VehicleID = F.VehicleID),
		 (select VH.PlateColor from Vehicles as VH where Vh.VehicleID = F.VehicleID),
		  (select UP.UserProfileId from UserProfile as UP where UP.UserProfileId=F.DriverID), (select UP.OfficialMailId from UserProfile as UP where UP.UserProfileId=F.DriverID) 
		  ,(select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    F.FinedDate), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),',',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    F.FinedDate), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))from VehicleFines as F  where F.DeleteFlag = 0 
	

	if(@P_Status is not null and @P_Status != '' and @P_Status != 'All')
	delete  from @Result where Status !=@P_Status or Status is null

	 if(@P_FineDateFrom is not null and @P_FineDateFrom != '')
	 delete from @result where cast( Time as date) < cast(@P_FineDateFrom as date)

	 if(@P_FineDateTo is not null and @P_FineDateTo != '')
	 delete from @result where cast( Time as date) > cast(@P_FineDateTo as date)

	 if(@P_PlateNumber is not null and @P_PlateNumber != '')
	  delete from @result where PlateNumber !=@P_PlateNumber or PlateNumber is null

	 if(@P_IssuedAgainstDepartment is not null and @P_IssuedAgainstDepartment != '')
	 delete from @result where IssuedAgainstDepartment !=@P_IssuedAgainstDepartment or IssuedAgainstDepartment is null

	 if(@P_IssuedAgainstName is not null and @P_IssuedAgainstName != '')
	 delete from @result where IssuedAgainstName !=@P_IssuedAgainstName or IssuedAgainstName is null

	


	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleFineID] desc) as slno,
		 * from @result where( (Status  like '%'+@P_SmartSearch+'%') or
	(ServerTime  like '%'+@P_SmartSearch+'%')  
		or (IssuedAgainstDepartment like '%'+@P_SmartSearch+'%')or (PlateNumber like '%'+@P_SmartSearch+'%')or 
		(IssuedAgainstName like '%'+@P_SmartSearch+'%') or (VehicleModel like '%'+@P_SmartSearch+'%')
		or (FineNumber like '%'+@P_SmartSearch+'%') or  (Location like '%'+@P_SmartSearch+'%')
		or (BlackPoints like '%'+@P_SmartSearch+'%') or (FineDesciption like '%'+@P_SmartSearch+'%')
		or (FineTime like '%'+@P_SmartSearch+'%') or (PlateColor like '%'+@P_SmartSearch+'%')
		or (VehicleMake like '%'+@P_SmartSearch+'%')  )) as m   where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where ( (Status  like '%'+@P_SmartSearch+'%') or
		(ServerTime  like '%'+@P_SmartSearch+'%')  
		or (IssuedAgainstDepartment like '%'+@P_SmartSearch+'%')or  (PlateNumber like '%'+@P_SmartSearch+'%')or
		(IssuedAgainstName like '%'+@P_SmartSearch+'%') or (VehicleModel like '%'+@P_SmartSearch+'%')
		or (FineNumber like '%'+@P_SmartSearch+'%') or  (Location like '%'+@P_SmartSearch+'%')
		or (BlackPoints like '%'+@P_SmartSearch+'%') or (FineDesciption like '%'+@P_SmartSearch+'%')
		or (FineTime like '%'+@P_SmartSearch+'%') or (PlateColor like '%'+@P_SmartSearch+'%')
		or (VehicleMake like '%'+@P_SmartSearch+'%')  )
		
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleFineID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result 

 End
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicelList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[[Get_VehicelList]]   ******/
CREATE PROCEDURE [dbo].[Get_VehicelList] --[Get_VehicelList] null,1,10,1,0
	@P_IsAlternativeVehicle nvarchar(255) = null,
	@P_PageNumber int =0,
	@P_PageSize int =0,	
	@P_UserID int = 0,
	@P_Method int =0,	
	@P_PlateNumber nvarchar(255)=null,
	@P_PlateColor nvarchar(255)=null,
	@P_DepartmentOffice nvarchar(255)=null,
	@P_Destination nvarchar(255)=null,
	@P_RequestorDepartment nvarchar(255)=null,
	@P_SmartSearch nvarchar(Max) = null,
	@P_Language nvarchar(10) ='EN'
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @RefCout int =0,@StartNo int =0 , @EndNo int =0 
	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;

	set @P_DepartmentOffice =(select Case when @P_Language='EN' then DepartmentName else ArDepartmentName end from M_Department where DepartmentID = @P_DepartmentOffice)

	declare @result table
	(
	 VehicleID int,
	 PlateNumber nvarchar(250),
	 PlateColor  nvarchar(250),
	 vehicleModel  nvarchar(250),
	 NextService int,
	 TyreChange int,
	 ContractEndDate datetime,
	 VehicleRegistrationExpiry datetime,
	 CreatedDepartment nvarchar(250),
	 CreatedBy int,
	 CurrentMileage nvarchar(max),
	 Nameofuser  nvarchar(max),
	 NameofDepartment  nvarchar(max),
	 vehicleMake  nvarchar(250),
	 YearOfManufature  nvarchar(250),
	 ContractNumber  nvarchar(250),
	 ContractStartDate datetime,
	 VehicleRegistrationNumber  nvarchar(250),
	 RentaCarCompany nvarchar(max),
	 IsAlternativeVehicle bit,
	 Notes nvarchar(max),
	 CreatorName nvarchar(max))

	insert into @result
	select VehicleID,PlateNumber,PlateColor,vehicleModel,NextService,TyreChange,ContractEndDate,
	VehicleRegistrationExpiry ,(Select(case when @P_Language='EN' then D.DepartmentName else D.ArDepartmentName end) from UserProfile as U  inner join 
	M_Department as D on U.DepartmentID= D.DepartmentID Where U.UserProfileId=V.CreatedBy) 
	as CreatedDepartment, CreatedBy,CurrentMileage,(Select U.EmployeeName from UserProfile as U  Where U.UserProfileId=V.RequestorID),
	(Select(case when @P_Language='EN' then D.DepartmentName else D.ArDepartmentName end) from UserProfile as U  inner join 
	M_Department as D on U.DepartmentID= D.DepartmentID Where U.UserProfileId=V.RequestorID),
	V.VehicleMake,V.YearofManufacture,V.ContractNumber,V.ContractStartDate,V.VehicleRegistrationNumber,
	(select C.CompanyName from CarCompany as C where C.CarCompanyID  = V.CarCompanyID),IsAlternativeVehicle,Notes,
	(select Up.EmployeeName from UserProfile as Up where Up.UserProfileId= V.CreatedBy)   from Vehicles as V where DeleteFlag = 0 
	
	if(@P_IsAlternativeVehicle is not null and @P_IsAlternativeVehicle !='')
	begin
	
		delete from @result where IsAlternativeVehicle != @P_IsAlternativeVehicle or IsAlternativeVehicle = null
	end

	if(@P_PlateNumber is not null and @P_PlateNumber !='' and @P_PlateNumber != 'All')
	delete  from @Result where PlateNumber !=@P_PlateNumber or PlateNumber is null

	if(@P_PlateColor is not null and @P_PlateColor !='' and @P_PlateColor != 'All')
	 delete from @result where PlateColor != @P_PlateColor or PlateColor is null

	if(@P_DepartmentOffice is not null and @P_DepartmentOffice !='' and @P_DepartmentOffice != 'All')
	 delete from @result where NameofDepartment != @P_DepartmentOffice or NameofDepartment is null


	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleID] desc) as slno,
		 * from @result) as m where 
		(((select (Case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where Category='Private' and Module=IsAlternativeVehicle)like @P_SmartSearch) or  
		(PlateNumber  like '%'+@P_SmartSearch+'%') or (PlateColor  like '%'+@P_SmartSearch+'%') or
		(vehicleModel  like '%'+@P_SmartSearch+'%') or ((SELECT  CONVERT(nvarchar(100), cast(ContractEndDate as date), 103)) like '%'+@P_SmartSearch+'%')
		or ((SELECT  CONVERT(nvarchar(100), cast(VehicleRegistrationExpiry as date), 103))  like '%'+@P_SmartSearch+'%')or
		 (NextService  like '%'+@P_SmartSearch+'%') or  (TyreChange  like '%'+@P_SmartSearch+'%')or (NameofDepartment  like '%'+@P_SmartSearch+'%')
		 or(((select(case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where LookupsID= 225) like '%'+@P_SmartSearch+'%') and ContractEndDate is null)
		 or (Nameofuser  like '%'+@P_SmartSearch+'%')or (vehicleMake  like '%'+@P_SmartSearch+'%')or (YearOfManufature  like '%'+@P_SmartSearch+'%')
		 or (ContractNumber  like '%'+@P_SmartSearch+'%')or (VehicleRegistrationNumber  like '%'+@P_SmartSearch+'%') or (RentaCarCompany  like '%'+@P_SmartSearch+'%')
		or (Notes  like '%'+@P_SmartSearch+'%')or  (CreatedDepartment  like '%'+@P_SmartSearch+'%') or (CreatorName  like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast(ContractStartDate as date), 103))  like @P_SmartSearch+'%')) and slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		(((select (Case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where Category='Private' and Module=IsAlternativeVehicle)like @P_SmartSearch) or  
		(PlateNumber  like '%'+@P_SmartSearch+'%') or (PlateColor  like '%'+@P_SmartSearch+'%') or
		(vehicleModel  like '%'+@P_SmartSearch+'%') or ((SELECT  CONVERT(nvarchar(100), cast(ContractEndDate as date), 103)) like '%'+@P_SmartSearch+'%')
		or ((SELECT  CONVERT(nvarchar(100), cast(VehicleRegistrationExpiry as date), 103))  like '%'+@P_SmartSearch+'%')or
		 (NextService  like '%'+@P_SmartSearch+'%') or  (TyreChange  like '%'+@P_SmartSearch+'%')or (NameofDepartment  like '%'+@P_SmartSearch+'%')
		 or (Nameofuser  like '%'+@P_SmartSearch+'%')or (vehicleMake  like '%'+@P_SmartSearch+'%')or (YearOfManufature  like '%'+@P_SmartSearch+'%')
		 or (ContractNumber  like '%'+@P_SmartSearch+'%')or (VehicleRegistrationNumber  like '%'+@P_SmartSearch+'%') or (RentaCarCompany  like '%'+@P_SmartSearch+'%')
		or (Notes  like '%'+@P_SmartSearch+'%')or  (CreatedDepartment  like '%'+@P_SmartSearch+'%') or (CreatorName  like '%'+@P_SmartSearch+'%')
		 or(((select(case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where LookupsID= 225) like '%'+@P_SmartSearch+'%')and ContractEndDate is null)
		 or ((SELECT  CONVERT(nvarchar(100), cast(ContractStartDate as date), 103))  like '%'+@P_SmartSearch+'%'))
	
		
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 begin
	 select * from (SELECT row_number() over (Order By  [VehicleID] desc) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result 

	 End 
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleAutoComfirm]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_VehicleAutoComfirm]
	-- Add the parameters for the stored procedure here
AS
BEGIN

		declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		WorkflowProcess nvarchar(max),
		DelegateTOEmail nvarchar(max),
		CreatedDateTime datetime
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,WorkflowProcess,DelegateToEmail,CreatedDateTime from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		select V.ReferenceNumber as ReferenceNumber,w.Status as Status,V.VehicleReqID as VehicleReqID,w.CreatedDateTime from VehicleRequest as V inner join @Workflow as W on V.ReferenceNumber = w.ReferenceNumber 
		where w.Status=215 and  w.CreatedDateTime > (SELECT DATEADD(DAY, 3, GETUTCDATE()) AS DateAdd)

END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleDriverTrips]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[CVBankReport]    ******/
CREATE procedure [dbo].[Get_VehicleDriverTrips] --  [CVBankReport]1,10,2,3,'','','','','','',''
	@P_Driver int =0,
	@P_Language nvarchar(10)='EN',
	@P_VehicleID int =0
as
begin
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		WorkflowProcess nvarchar(max),
		DelegateTOEmail nvarchar(max)
		);

		declare @TripDateFrom dateTime, @TripDateTo datetime = null

		select @TripDateFrom= TripPeriodFrom,@TripDateTo =TripPeriodTo from VehicleRequest where VehicleReqID= @P_VehicleID

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,WorkflowProcess,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

select V.TripPeriodFrom as TripTimeFrom,V.TripPeriodTo as TripTimeTo,(select (case when @P_Language ='EN' then MC.CityName else MC.ArCityName end) from M_City as MC where MC.CityID=V.City) as City,
(case  when V.Destination =0 then V.DestinationOthers else (select (case when @P_Language='EN' then MD.TripDestinationENValue else MD.TripDestinationARValue end) from M_TripDestination as MD 
where MD.TripDestinationID = V.Destination) end) as Destination, 
(select EmployeeName from UserProfile UP where Up.UserProfileId=V.Requestor) as Requestor from VehicleRequest as V inner join @Workflow as W on V.ReferenceNumber=W.ReferenceNumber
where @P_Driver = (case when V.DriverID is null then V.TobeDrivenbyDriverID else V.DriverID end) and 
(((cast(v.TripPeriodFrom as date) between cast(@TripDateFrom as Date) and cast(@TripDateTo as Date))or (cast(v.TripPeriodTo as Date) between cast(@TripDateFrom as Date) and cast(@TripDateTo as Date)))
or 
((cast(@TripDateFrom as date) between cast(v.TripPeriodFrom as Date) and cast(v.TripPeriodTo as Date))or (cast(@TripDateTo as Date) between cast(v.TripPeriodFrom as Date) and cast(v.TripPeriodTo as Date))))
 end
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleFineByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_VehicleFineByID] 
	@P_VehicleFineID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT 
	[VehicleFineID],
	[ReferenceNumber]

      ,[VehicleModelID]
      ,[FineNumber]
      ,[FinedDate]
      ,[Location]
      ,[BlackPoints]
      ,[Status]
      ,[Description]
      ,[EmailTo]
      ,[EmailCCDepartmentID]
      ,[EmailCCUserID]
      ,[DeleteFlag]
      ,[CreatedBy]
      ,[UpdatedBy]
      ,[CreatedDateTime]
      ,[UpdatedDateTime]
	  ,VehicleID
	  ,DriverID
	 from [dbo].[VehicleFines]  WHERE VehicleFineID = @P_VehicleFineID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleIssuesByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleIssuesByID]   ******/
CREATE PROCEDURE [dbo].[Get_VehicleIssuesByID] --Get_VehicleIssuesByID 55
	@P_VehicleID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT distinct (I.IssueID) from VehicleRequest as VR join TripVehicleIssues as I on I.VehicleReqID=VR.VehicleReqID
	join Vehicles as V on V.VehicleID = VR.VehicleID where VR.DeleteFlag=0 and V.VehicleID =@P_VehicleID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleList]   ******/
CREATE PROCEDURE [dbo].[Get_VehicleList]  --[Get_VehicleList] 1,2550,0,35,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Type int =0,
	@P_UserID int= 0,
	@P_Method int = 0,	
	@P_Status nvarchar(250)=null,
	@P_RequestType nvarchar(250) = null,
	@P_Requestor nvarchar(250) = null,		
	@P_TripDateFrom datetime = null,
	@P_TripDateTo datetime = null,
	@P_Destination nvarchar(250) =null,
	@P_RequestorOfficeDepartment nvarchar(250)=null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10)= 'AR'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 

	  declare @VehicleUsers table(
	  UserID int,
	  UserEmail nvarchar(250)) 

	  --GET HR users
	  insert into @VehicleUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 3
	  --select * from @HRUsers


	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	VehicleReqID int ,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(50),
	RequestorName nvarchar(50),
	RequestorOfficeDepartment nvarchar(50),
	TripDateFrom datetime,
	TripDateTo datetime,
	City nvarchar(50),
	Destination nvarchar(50),
	Status nvarchar(max),
	RequestDate datetime,	
	StatusCode int,
	UpdatedDateTime datetime,
	createdby int,
	TripTimeFrom nvarchar(255),
	TripTimeTo nvarchar(255),
	RequestTypeName nvarchar(255),
	Emirites nvarchar(255),
	RequestDateTime nvarchar(max),
	Approver nvarchar(max),
	TripType nvarchar(max),
	TripTypeOther nvarchar(max),
	Notes nvarchar(max),
	Requestor int )

 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		WorkflowProcess nvarchar(max),
		DelegateTOEmail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,WorkflowProcess,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		--select * from @Workflow

   --My Pending Request
   if(@P_Type=1 or @P_Type=0)
  
   insert into @Result

   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,
		 ( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination, (select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
  ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
   ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end)  from M_Emirates where EmiratesID=V.Emirates),
   (select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                     V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))as RequestDateTime
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	, (select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID) 
	,TripTypeOthers,V.Notes,V.Requestor from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where     
        (  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail and r.Status!=217 and r.Status != 224 and r.Status!=213 and r.Status!=212 and r.Status!= 211  ))
		or (@P_UserID in (select UserProfileId from dbo.UserProfile where OrgUnitID=13) and 
		(r.Status!=218 and r.Status !=214 and r.Status!=215 and r.Status!=216 and r.Status!=217 and r.Status != 224) )) order by V.[VehicleReqID] desc
		 

   --My Own Requests
   if(@P_Type=2 or @P_Type=0)

    insert into @Result

   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination,(select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
  ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
    ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end) from M_Emirates where EmiratesID=V.Emirates)
	,(select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                      V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	,(select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID)
	,TripTypeOthers,V.Notes,V.Requestor from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where   @P_UserID=V.CreatedBy order by V.[VehicleReqID] desc
	 
	 --My Processed Request

 if(@P_Type=3 or @P_Type=0)

	  insert into @Result

   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination,(select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	   ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
	     ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end) from M_Emirates where EmiratesID=V.Emirates)
		 ,(select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                      V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	,(select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID)
	,TripTypeOthers,V.Notes,V.Requestor	from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] 
   where  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where 
   OfficialMailId in(select w.FromEmail from Workflow as w where w.ReferenceNumber= v.ReferenceNumber and w.WorkflowProcess !='SubmissionWorkflow') )) order by V.[VehicleReqID] desc

   if(@P_Language='AR')
   begin
		Update @Result set TripTimeFrom = REPLACE(TripTimeFrom,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set TripTimeFrom = REPLACE(TripTimeFrom,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
		Update @Result set TripTimeTo = REPLACE(TripTimeTo,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set TripTimeTo = REPLACE(TripTimeTo,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
   end
   else
	begin
	if(@P_RequestorOfficeDepartment ='Protocol')
	set @P_RequestorOfficeDepartment = (select DepartmentName from M_Department where DepartmentID=1)
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'AM',' AM')
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'PM',' PM')
	end

   ;WITH RelatedLetter AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY VehicleReqID desc
		) RowNumber
		FROM  @Result
		)
		DELETE FROM RelatedLetter WHERE RowNumber > 1
		
		  if(@P_Status!='' and @P_Status is not null)
		  delete from @Result where Status != @P_Status
		  
		  if(@P_RequestType!='' and @P_RequestType is not null)
		  delete from @Result where RequestTypeName !=@P_RequestType

		  if(@P_Requestor !='' and @P_Requestor is not null)
		  delete from @Result where RequestorName!=@P_Requestor

		  if(@P_Destination !='' and @P_Destination is not null)
		  delete from @Result where Destination !=@P_Destination

		  if(@P_RequestorOfficeDepartment !=''and @P_RequestorOfficeDepartment is not null)
		  delete from @Result where RequestorOfficeDepartment !=@P_RequestorOfficeDepartment

		  if(@P_TripDateFrom is not null)
	      delete from @result where (SELECT CONVERT(date, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  < cast(@P_TripDateFrom as date)

	     if(@P_TripDateTo is not null)
	     delete from @result where (SELECT CONVERT(date, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  > cast(@P_TripDateTo as date)


		   
 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestorName  like '%'+@P_SmartSearch+'%') or (RequestorOfficeDepartment like '%'+@P_SmartSearch+'%') or
		( City like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or(RequestTypeName  like @P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103)) like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103))  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(Destination like '%'+@P_SmartSearch+'%')or (Emirites like '%'+@P_SmartSearch+'%') or  (RequestDateTime like '%'+@P_SmartSearch+'%')
       or(Approver like '%'+@P_SmartSearch+'%')or(TripTimeFrom like '%'+@P_SmartSearch+'%')or(TripTimeTo like '%'+@P_SmartSearch+'%')
		or (TripType like '%'+@P_SmartSearch+'%')or (TripTypeOther like '%'+@P_SmartSearch+'%')or (Notes like '%'+@P_SmartSearch+'%')))
	as m	where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
	((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestorName  like '%'+@P_SmartSearch+'%') or (RequestorOfficeDepartment like '%'+@P_SmartSearch+'%') or
		( City like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or(RequestTypeName  like @P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103)) like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103))  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(Destination like '%'+@P_SmartSearch+'%') or  (RequestDateTime like '%'+@P_SmartSearch+'%')
        or(Approver like '%'+@P_SmartSearch+'%')or(TripTimeFrom like '%'+@P_SmartSearch+'%')or(TripTimeTo like '%'+@P_SmartSearch+'%')
		or (TripType like '%'+@P_SmartSearch+'%')or (TripTypeOther like '%'+@P_SmartSearch+'%')or (Notes like '%'+@P_SmartSearch+'%'))
     end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select  * from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @Result
 
  end 
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleListCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleListCount] ******/
CREATE PROCEDURE [dbo].[Get_VehicleListCount]  --[Get_VehicleListCount] 25
	-- Add the parameters for the stored procedure here
	
	@P_UserID int= 0
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	
	 

	  declare @VehicleUsers table(
	  UserID int,
	  UserEmail nvarchar(250)) 

	  --GET HR users
	  insert into @VehicleUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 3
	  --select * from @HRUsers
 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		WorkflowProcess nvarchar(max),
		DelegateTOEmail nvarchar(max)
		);
		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,WorkflowProcess,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
		declare @VehicleRequest int=0,@Fine int=0,@DriverManagement int =0, @OwnRequest int=0, @RentedCar int =0, @MyProcessedRequest int =0,
				@VehicleOnTrip int =0, @VehicleOfTrip int=0,@DriversOnTrip int=0,@DriversOfTrip int=0;

 set @VehicleRequest =(Select Count(*) from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber]  where (  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail and r.Status!=217  and r.Status != 224 and r.Status!=213  and r.Status!=212 and r.Status!= 211 ))
		or (@P_UserID in (select UserProfileId from dbo.UserProfile where OrgUnitID=13) and (r.Status!=218 and r.Status !=214 and r.Status!=215 and r.Status!=216 and r.Status!=217 and r.Status != 224 and r.Status!=213) )) )

set @OwnRequest =(Select Count(*) from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where V.[DeleteFlag] !=1
				and V.CreatedBy=@P_UserID )


set @Fine = (select count(*) from VehicleFines where DeleteFlag is null or DeleteFlag =0)
Set @DriverManagement =(select count(*) from Drivers where DeleteFlag is null or DeleteFlag =0)
Set @RentedCar =(select count(*) from CarCompany where DeleteFlag is null or DeleteFlag =0)
Set @MyProcessedRequest =(select Count(*)from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber]  where
					  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId in(select w.FromEmail 
					  from Workflow as w where w.ReferenceNumber= v.ReferenceNumber and w.WorkflowProcess !='SubmissionWorkflow') ))) 

select @DriversOnTrip = count(*) from VehicleRequest  as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where GETUTCDATE() between V.TripPeriodFrom and V.TripPeriodTo and V.DriverID is not null and r.Status<216
select @DriversOfTrip = Count(*) from UserProfile where IsDriver = 1 and UserProfileId not in (select DriverID from VehicleRequest as V  join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber]where GETUTCDATE() between V.TripPeriodFrom and V.TripPeriodTo and V.DriverID is not null and  r.Status<216)
select @VehicleOnTrip = count(*) from VehicleRequest as VR join @Workflow r on r.[ReferenceNumber] =VR.[ReferenceNumber] where GETUTCDATE() between VR.TripPeriodFrom and VR.TripPeriodTo and VR.VehicleID is not null and  r.Status<216
select @VehicleOfTrip = Count(*) from Vehicles as V where (V.DeleteFlag= 0 or V.DeleteFlag is null) or V.VehicleID not in 
	(select VR.VehicleID from VehicleRequest as VR join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where GETUTCDATE() between VR.TripPeriodFrom and VR.TripPeriodTo and VR.VehicleID is not null and  r.Status<216)
select @VehicleRequest as Vehicle,@Fine as Fine,@DriverManagement as Driver , @OwnRequest as OwnRequest
		,@MyProcessedRequest as MyProcessedRequest, @RentedCar as RentedCar,@DriversOnTrip as DriversOnTrip,
		@DriversOfTrip as DriversOffTrip,@VehicleOnTrip as VehicleOnTrip,@VehicleOfTrip as VehicleOffTrip
  
  end 
GO
/****** Object:  StoredProcedure [dbo].[Get_VehiclePreview]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Get_VehiclePreview] --  [Get_VehiclePreview] 1
	-- Add the parameters for the stored procedure here
	@P_VehicleRequestID int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @result table(
		id int identity(1,1),
		PlateNumber nvarchar(max),
		PlateCode nvarchar(max),
		VehicleMake nvarchar(max),
		VehicleModel nvarchar(max),
		DriverName nvarchar(max),
		ReleaseDate nvarchar(max),
		ReleaseTime nvarchar(max),
		ReleaseLocation nvarchar(max),
		LastMileageOnRelease nvarchar(max),
		ReturnDate nvarchar(max),
		ReturnTime nvarchar(max),
		ReturnLocation nvarchar(max),
		LastMileageOnReturn nvarchar(max),
		YearOfManufacture nvarchar(max),
		VehicleID int,
		ReleasedBy nvarchar(max),
		ReturnedBy nvarchar(max),
		Note nvarchar(max),
		PersonalBelonging nvarchar(max),
		ReferenceNumber nvarchar(max))


	insert into @result
    select V.PlateNumber,V.PlateColor,V.VehicleMake,V.VehicleModel,(select UP.EmployeeName from UserProfile as UP where UP.UserProfileId= (case when VR.DriverID is null then VR.TobeDrivenbyDriverID else VR.DriverID end)) 
	,(select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime,  SWITCHOFFSET(CONVERT(datetimeoffset,  VR.ReleaseDateTime),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as Date), 103)))
	,(select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime,  SWITCHOFFSET(CONVERT(datetimeoffset,  VR.ReleaseDateTime),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as Time), 100)))
	,(select ArDisplayName from M_Lookups as M where M.Module='VehicleLocation' and M.Category=VR.ReleaseLocationID)
	,VR.LastMileageReading
	,(select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime,  SWITCHOFFSET(CONVERT(datetimeoffset,  VR.ReturnDateTime),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as Date), 103)))
	,(select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime,  SWITCHOFFSET(CONVERT(datetimeoffset,  VR.ReturnDateTime),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as Time), 100)))
	,(select ArDisplayName from M_Lookups as M where M.Module='VehicleLocation' and M.Category=VR.ReturnLocationID)
	,VR.LastMileageReading
	,VR.VehicleID
	,YearofManufacture,(select Up.EmployeeName from UserProfile as UP where Up.UserProfileId = (select  VH.ActionBy from VehicleHistory as VH where VH.Action = 'Release' and VH.VehiclReqID=@P_VehicleRequestID))
	,(select Up.EmployeeName from UserProfile as UP where Up.UserProfileId = (select VH.ActionBy from VehicleHistory as VH where VH.Action = 'Return' and VH.VehiclReqID=@P_VehicleRequestID))
	,VR.Notes,VR.PersonalBelongingsText,VR.ReferenceNumber from VehicleRequest as VR left join Vehicles as V on Vr.VehicleID= V.VehicleID where VR.VehicleReqID=@P_VehicleRequestID

	Update @Result set ReturnTime = REPLACE(ReturnTime,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
	Update @Result set ReturnTime = REPLACE(ReturnTime,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
	Update @Result set ReleaseTime = REPLACE(ReleaseTime,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
	Update @Result set ReleaseTime = REPLACE(ReleaseTime,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))

	select * from @result

END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleRequestByID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleRequestByID]    ******/
CREATE PROCEDURE [dbo].[Get_VehicleRequestByID] --Get_VehicleRequestByID 14 
	@P_VehicleReqID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT [VehicleReqID],[ReferenceNumber],[RequestType],[Requestor],[RequestDateTime],
	(select UserProfileId from [UserProfile]  where UserprofileID=DriverID)as DriverID ,
	(TobeDrivenbyDepartmentID) as TobeDrivenbyDepartmentID ,
	(select UserProfileId from [UserProfile] where UserprofileID=TobeDrivenbyDriverID)as TobeDrivenbyDriverID,
	(select TripTypeID from [M_TripType] as M where M.TripTypeID = V.TripTypeID) as TripTypeID,
	TripTypeOthers,
	(Select EmiratesID from M_Emirates where EmiratesID =Emirates) as Emirates,
	(select CityID from M_City where CityID = City) as City,
	(Select TripDestinationID from M_TripDestination where TripDestinationID = Destination) as Destination,
	DestinationOthers,TripPeriodFrom,TripPeriodTo,
	(select VehicleModelID from M_VehicleModel where VehicleModelID=V.VehicleModelID) as VehicleModelID,
	(select DepartmentID from M_Department where DepartmentID = ApproverDepartment) as ApproverDepartment,
	(Select UserProfileID from UserProfile where UserProfileId = ApproverName) as ApproverName,
	ReleaseDateTime,LastMileageReading,
	(select ReleaseLocationID from M_TripReleaseLocation as M where M.ReleaseLocationID=V.ReleaseLocationID) as ReleaseLocationID,
	[ReturnDateTime],CurrentMileageReading,HavePersonalBelongings,PersonalBelongingsText,	
	[VehicleID],Notes,
	[DeleteFlag],
	[CreatedBy] 
	 ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime],
	 (select top 1 Status from [Workflow] 
	 where ReferenceNumber =V.ReferenceNumber order by WorkflowID desc) as Status
	 ,ReturnLocationID
	 from [dbo].[VehicleRequest] as V  WHERE V.VehicleReqID= @P_VehicleReqID
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleRequestStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleRequestStatus]   ******/
CREATE PROCEDURE [dbo].[Get_VehicleRequestStatus]
	@P_Language nvarchar(10) =0
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Language = 'EN') 
	SELECT StatusID,StatusENValue as StatusName from [dbo].[M_VehicleRequestStatus] where DeleteFlag=0
	else
	SELECT StatusID, StatusARValue as StatusName  from [dbo].[M_VehicleRequestStatus] where DeleteFlag=0
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleSericeLog]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleSericeLog]  ******/
CREATE PROCEDURE [dbo].[Get_VehicleSericeLog]
	-- Add the parameters for the stored procedure here
	@P_VehicleID int =0,
	@P_Type int =0 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	if(@P_Type=0)
    select  *,(SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103)) Date  from VehicleLogs where VehicleID=@P_VehicleID
	if(@P_Type!=0)
    select  *,(SELECT  CONVERT(nvarchar(10), cast(CreatedDateTime as date), 103)) Date  from VehicleLogs where VehicleID=@P_VehicleID and LogType = @P_Type
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleSericeLogReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleSericeLogReport] ******/
Create PROCEDURE [dbo].[Get_VehicleSericeLogReport]-- 4,0
	-- Add the parameters for the stored procedure here
	@P_VehicleID int =0,
	@P_Language nvarchar(max)= 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
    select  CurrentMileage,NextMileage,CreatedDateTime as Date,(select (case when @P_Language ='EN' then LogTypeENValue
		else LogTypeARValue end) from M_LogType where LogTypeID = VehicleLogs.LogType) as ServiceType 
		from VehicleLogs where VehicleID=@P_VehicleID
	
END
GO
/****** Object:  StoredProcedure [dbo].[Get_VehicleTripOnSameDayPeriod]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Get_VehicleTripOnSameDayPeriod]  ******/
CREATE PROCEDURE [dbo].[Get_VehicleTripOnSameDayPeriod] --158
	-- Add the parameters for the stored procedure here
	@P_VehicleID int = null,
	@P_Language nvarchar(10) = null
AS
BEGIN

	SET NOCOUNT ON;
	Declare @Result table(
	Requestor nvarchar(max),
	DriverName nvarchar(max),
	Destination nvarchar(max),
	CoPassenger nvarchar(max)
	);
	
	Declare @TripPeriodFrom datetime = null, @TripPeriodTo datetime = null, @City int = null
	
	select @TripPeriodFrom =cast(TripPeriodFrom as datetime),@TripPeriodTo =cast(TripPeriodTo as datetime), @City=City
	from VehicleRequest where VehicleReqID =@P_VehicleID
	
	select  (select EmployeeName from UserProfile where UserProfileId=Requestor) as Requestor,
		(select EmployeeName from UserProfile where UserProfileId=(Case when DriverID is null then TobeDrivenbyDriverID else DriverID end)) as DriverName,
		case when Destination = 0 then DestinationOthers else 
		(select (case when @P_Language ='EN' then TR.TripDestinationENValue else TR.TripDestinationARValue end) from M_TripDestination as TR where TR.TripDestinationID=Destination) end as Destination,
		 (select STUFF(replace(((SELECT ',' + 
		CAST( (case when T.CoPassengerID is null then T.OtherCoPassengerName else (select EmployeeName from UserProfile where UserProfileId=T.CoPassengerID) end)  AS nvarchar(max)) AS [text()]
		FROM  [dbo].TripCoPassengers as T where T.VehicleReqID =V.VehicleReqID
		FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL))  as CoPassenger from VehicleRequest as V where @TripPeriodFrom=cast( TripPeriodFrom as datetime)  and @City= City
	--and @TripPeriodTo=cast( TripPeriodFrom as date) 
	

END
GO
/****** Object:  StoredProcedure [dbo].[GetDepartmentGroupMailID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[GetOrganisationGroupMailID]   ******/
CREATE PROCEDURE [dbo].[GetDepartmentGroupMailID] 
	-- Add the parameters for the stored procedure here
	@P_DepartmentID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [GroupMailID] from [dbo].M_Department where DepartmentID = @P_DepartmentID
END
GO
/****** Object:  StoredProcedure [dbo].[GetOrganisationGroupMailID]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetOrganisationGroupMailID] 
	-- Add the parameters for the stored procedure here
	@P_OrganisationID int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	select [GroupMailID] from [dbo].[Organization] where [OrganizationID] = @P_OrganisationID
END
GO
/****** Object:  StoredProcedure [dbo].[GetUsersWithDeptName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[GetUsersWithDeptName]    ******/
CREATE PROCEDURE [dbo].[GetUsersWithDeptName] --GetUsersWithDeptName 63
	-- Add the parameters for the stored procedure here
	@P_LetterID int = null,
	@P_Method int = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    
select C.UserName,(select DepartmentName from M_Department as D where D.DepartmentID=C.Department)as DepartmentName
,C.PhoneNumber,C.ProfilePhotoID,C.ProfilePhotoName
 from Contact C join LettersOutboundDestinationEntity as DE  
  on C.ContactID=DE.EntityID where( DE.DeleteFlag = 0 or DE.DeleteFlag is null) and LetterID=@P_LetterID

END
GO
/****** Object:  StoredProcedure [dbo].[GlobalSearch]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[GlobalSearch]    ******/
CREATE  PROCEDURE [dbo].[GlobalSearch] 
	-- Add the parameters for the stored procedure here
	@P_UserID int = 1, 
	@P_Search nvarchar(max) = null,
	@P_Type int =0,
	@P_Language nvarchar(10)= 'EN',
	@P_Method int= 0,
	@P_PageNumber int =1,
	@P_PageSize int =10
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0;

	declare @Memos int =0, @Letters int =0,@DutyTask int =0,@Meetings int =0,@Circulars int =0
	,@Legal int =0,@Protocol int =0,@HR int =0,@CitizenAffair int =0,@Maintenance int =0,@IT int =0
	,@UserEmail nvarchar(max)=null

	select @UserEmail= OfficialMailId from UserProfile where UserProfileId=@P_UserID

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @Workflow table(
		ID int,
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max));


    Declare @result table(
	ID int ,
	ReferenceNumber nvarchar(max),
	Title nvarchar(max),
	Type int,
	CanEdit bit default(0)
	);

	--Memo List
	if(@P_Type = 1 or @P_Type = 0)
	begin
		declare @Memoresult table(
		[MemoID] int,
		[ReferenceNumber] [nvarchar](250) NULL,
		[Title] [nvarchar](max) NULL,
		[SourceName] [nvarchar](250) NULL,
		SourceUserName nvarchar(max),
		Details nvarchar(max),
		[Destination] [nvarchar](max) NULL,
		[Status] [nvarchar](250) NULL,
		[CreationDate] datetime null,
		[Private] [nvarchar](250) NULL,
		[Priority] [nvarchar](250) NULL,
		[Creator] nvarchar(max) null,
		[Destinator]  nvarchar(max) null,
		[Receiver] nvarchar(max) null,
		ApproverDepartment nvarchar(255),
		ApproverName nvarchar(255));

		insert into @Memoresult 
		Exec [MemoReport] @P_Language= @P_Language,@P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @Memos = (Select count(*) from @Memoresult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select MemoID, ReferenceNumber,Title,1 from @Memoresult

	end
	

	--Letters
	 if(@P_Type = 2 or @P_Type = 0)
	begin
		declare @LetterResult table(
		id int,
		LetterID int,
		ReferenceNumber nvarchar(255),
		Title nvarchar(255),
		SourceOU nvarchar(max),
		Destination nvarchar(max),
		UserName nvarchar(max),
        SourceName nvarchar(max),
		LinkToOtherLetter nvarchar(250) ,
		SenderName nvarchar(250),
		Status nvarchar(255),
		CreatedDateTime datetime,
		Replied nvarchar(255),
		Priority nvarchar(255),
		LetterType nvarchar(255));

		insert into @LetterResult
		Exec [Get_LetterReportList] @P_Language= @P_Language,@P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @Letters = (Select count(*) from @LetterResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select LetterID, ReferenceNumber,Title,case when LetterType='OutboundLetter' then 3 else 2 end from @LetterResult
	end


	--DutyTask
	 if(@P_Type = 3 or @P_Type = 0)
	begin
		declare @DutyTaskResult table(
		id int,
		TaskID int,
		TaskReferenceNumber nvarchar(255),
		Title nvarchar(255),
		Creator nvarchar(max),
		SourceOU nvarchar(max),
		Assignee nvarchar(max),
		AssigneeDepartment nvarchar(max),
		Details nvarchar(max),
		Status nvarchar(255),
		Priority nvarchar(255),
		CreationDate datetime,
		DueDate datetime,
		LastUpdate datetime,
		Participants nvarchar(100),
	  RemindMeAt datetime,
	  ParticipantUsers nvarchar(100));

		insert into @DutyTaskResult
		Exec [Get_DutyTaskReport] @P_Language= @P_Language,@P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @DutyTask = (Select count(*) from @DutyTaskResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select TaskID, TaskReferenceNumber,Title,4 from @DutyTaskResult
	end

			


	--Meetings
	 if(@P_Type = 4 or @P_Type = 0)
	begin
		declare @MeetingsResult table(
		MeetingID int,
		ReferenceNumber nvarchar(255),
		Subject nvarchar(255),
		Location nvarchar(max),
		MeetingType nvarchar(255),
		Invitees nvarchar(Max),
		UserName nvarchar(255),
		InternalInvitees int,
		ExternalInvitees int,
		startDateTime datetime,
		EndDateTime datetime,
		OrganizerDepartment nvarchar(max),
		OrganizerName nvarchar(max) );

		insert into @MeetingsResult
		Exec [MeetingReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language=@P_Language

		set @Meetings = (Select count(*) from @MeetingsResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select  MeetingID, ReferenceNumber,Subject,5 from @MeetingsResult
	end


	

	--Circular
	 if(@P_Type = 5 or @P_Type = 0)
	begin
		declare @CircularResult table(
		id int,
		CircularID int,
		ReferenceNumber nvarchar(255),
		Title nvarchar(255),
		Source nvarchar(max),
		Destination nvarchar(max),
		Status nvarchar(255),
		CreatedDateTime datetime,
		Priority nvarchar(255),
		UpdatedDateTime datetime);

		insert into @CircularResult
		Exec [CircularReport] @P_Language= @P_Language,@P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @Circulars = (Select count(*) from @CircularResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select  CircularID, ReferenceNumber,Title, 6 from @CircularResult
	end


	--Legal
	 if(@P_Type = 6 or @P_Type = 0)
	begin
		declare @LegalResult table(
		[LegalID] int,
		[ReferenceNumber] [nvarchar](250) NULL,
		[SourceOU] [nvarchar](250) NULL,
		[Subject] [nvarchar](max) NULL,
		[Status] [nvarchar](250) NULL,
		[RequestDate] datetime null,
		[AttendedBy] [nvarchar](250) NULL,
		[CreatedBy] [nvarchar](250) NULL,
		[ApprovedBy] [nvarchar](250) NULL);

		insert into @LegalResult
		Exec [LegalReport] @P_Language= @P_Language,@P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @Legal = (Select count(*) from @LegalResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select LegalID, ReferenceNumber,Subject,7 from @LegalResult
	end


	--CA
	 if( @P_Type = 9 or @P_Type = 0)
	begin
	declare @CitizenAffairResult table(
	slno int,
	id INT ,
	CitizenAffairID int,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max),
	PersonalLocationName nvarchar(max),
	PhoneNumber nvarchar(max),
	Status nvarchar(max),
	RequestedDateTime datetime,
	AttendedBy nvarchar(250),
	AssignedTo nvarchar(255),
	SourceOU nvarchar(max),
	Creator nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	Subject nvarchar(max))

		insert into @CitizenAffairResult
		Exec [CitizenAffairReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @CitizenAffair = (Select count(*) from @CitizenAffairResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select [CitizenAffairID], [ReferenceNumber],Subject,case when RequestType='Complaint' then 9 else 8 end from @CitizenAffairResult
	end


	--Maintenance
	 if(@P_Type = 10 or @P_Type = 0)
	begin
		declare @MaintenaceResult table(
		[MaintenanceID] int,
		[ReferenceNumber] [nvarchar](250) NULL,
		[SourceOU] [nvarchar](250) NULL,
		[Subject] [nvarchar](max) NULL,
		[Status] [nvarchar](250) NULL,
		[RequestedDateTime] datetime null,
		[AttendedBy] [nvarchar](250) NULL,
		[Priority] [nvarchar](250) NULL);

		insert into @MaintenaceResult
		Exec [MaintenanceReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language = @P_Language

		set @Maintenance = (Select count(*) from @MaintenaceResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select [MaintenanceID], [ReferenceNumber],[Subject],10 from @MaintenaceResult
	end


	--HR
	 if((@P_Type = 8) or @P_Type = 0)
	begin
		 declare @HRResult table(
			id INT ,
			ReferenceNumber nvarchar(max),
			Creator nvarchar(max),
			RequestType nvarchar(max),
			Status nvarchar(max),
			RequestDate datetime,
			RequestID int);

		insert into @HRResult
		Exec [HRReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language = @P_Language


		set @HR = (Select count(*) from @HRResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select RequestID, [ReferenceNumber],null,(select ModuleID from M_Module where ModuleName=RequestType) from @HRResult
	end


	--Protocol
	 if((@P_Type = 7) or @P_Type = 0)
	begin
		 declare @MediaResult table(
			[RefID] int ,
			[ReferenceNumber] [nvarchar](250) NULL,
			[SourceOU] [nvarchar](250) Null,
			[SourceName] [nvarchar](250) Null,
			[Status] [nvarchar](250) NULL,
			RequestDate datetime,
			RequestType nvarchar(max),
			MediaDate datetime,
			EventName nvarchar(max),
			Languages nvarchar(max),
			Location nvarchar(max),
			Assignee nvarchar(255),
			Subject nvarchar(max))


		insert into @MediaResult
		Exec [MediaReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language = @P_Language

		

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select [RefID], [ReferenceNumber],Subject,(select ModuleID from M_Module where ModuleName=RequestType) from @MediaResult

		declare @CalendarResult table(
			CalendarID int ,
			ReferenceNumber nvarchar(255),
			EventType nvarchar(255),
			EventRequestor nvarchar(max),
			Datefrom datetime,
			DateTo dateTime,
			Location nvarchar(255),
			UserName nvarchar(255),
			Status nvarchar(255),
			ApproverName nvarchar(max),
			City nvarchar(max))


		insert into @CalendarResult
		Exec [CalendarReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language =@P_Language

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select CalendarID, [ReferenceNumber],EventType,12 from @CalendarResult

		declare @GiftResult table(
			GiftID int,
			ReferenceNumber nvarchar(255),
			GiftType nvarchar(255),
			PurchasedBy nvarchar(255),
			Status nvarchar(255),
			CreatedBy nvarchar(255) )


		insert into @GiftResult
		Exec [Get_GiftReportList] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search,@P_Language = @P_Language

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select GiftID, [ReferenceNumber],GiftType,11 from @GiftResult

		set @Protocol = ((Select count(*) from @MediaResult )+(Select count(*) from @GiftResult)+(Select count(*) from @CalendarResult))
	end

	if((@P_Type = 11) or @P_Type = 0)
	begin
		 declare @ITResult table(
			id int,
			RequestID int,
			ReferenceNumber nvarchar(max),
			RequestType nvarchar(max),
			SourceOU nvarchar(max),
			Subject nvarchar(max),
			Priority nvarchar(max),
			Status nvarchar(max),
			RequestDate datetime,
			StatusCode int,
			Creator nvarchar(255))

		insert into @ITResult
		Exec [ITReport] @P_UserID = @P_UserID,@P_SmartSearch=@P_Search

		set @IT = (Select count(*) from @ITResult )

		insert into @result (ID,ReferenceNumber ,Title ,Type )
		select RequestID, [ReferenceNumber],Subject,27 from @ITResult
	end

	;WITH CTE AS 
		(
		SELECT  ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		)as RowNumber,WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,DelegateToEmail 
		FROM  Workflow where ReferenceNumber In (select R.ReferenceNumber from @result as R)
		)
		insert into @Workflow
		select * FROM CTE WHERE RowNumber = 1

	--all modules expect Dutytask
	Update a set a.CanEdit=1 from @result as a inner join @Workflow as b on a.ReferenceNumber=b.ReferenceNumber
	and b.ToEmail=@UserEmail and b.Status in (select M.LookupsID from M_Lookups as M where M.DisplayName='Pending for Resubmission')

	-- for Duty Task update in insert into @result
	 

	if(@P_Method =0 and @P_Type != 0)
	select * from (select *,row_number() over (Order By  id desc) as slno from @result) as a where a.slno between @StartNo and @EndNo 
	else if(@P_Type != 0)
	select count(*) from @result
	else if(@P_Type =0)
	select  @Memos as Memos , @Letters as Letters ,@DutyTask as DutyTask ,@Meetings as Meetings ,@Circulars  as Circulars
	,@Legal as Legal ,@Protocol as Protocol ,@HR as HR ,@CitizenAffair as CitizenAffair ,@Maintenance  as Maintenance, @IT as IT 

END
GO
/****** Object:  StoredProcedure [dbo].[HRDashboardList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[HRDashboardList]    ******/
CREATE PROCEDURE [dbo].[HRDashboardList] --  HRDashboardList 1,20,7,5,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_RequestType nvarchar(250) = 0,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10)= 'EN'

	/* RequestType: Announcement = 1, BabyAddition = 2, SalaryCertificate = 3, ExperienceCertificate = 4, CVBank = 5, Leave = 6,
	OfficialTask = 7, Training = 8, UserProfile = 9, CompliantSuggestions = 10 
	*/
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)



	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers
	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255),
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit,
	AssignedTo nvarchar(255),
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	IsCompensationRequest bit
	 )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 


	 declare @RequestList1 table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255)
	)
	insert into @RequestList1
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] 
	where Service='OfficialTask' and ((WorkflowProcess='SubmissionWorkflow' and ToName=@UserName)or(WorkflowProcess='CloseWorkflow' and FromName=@UserName))
	--select * from @RequestList1
--	select * from @RequestList

	if(@P_RequestType = 1 or @P_RequestType is null or @P_RequestType ='') --Announcement
	begin
		
			insert into @Result
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			( case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null
			,0 from [dbo].[Announcement] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
		or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	end

	 if(@P_RequestType = 2 or @P_RequestType is null or @P_RequestType ='') --BabyAddition
	begin
		
			insert into @Result
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  t where t.ReferenceNumber=b.ReferenceNumber and t.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by t.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
			,0 from [dbo].[BabyAddition] b join @RequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
				and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
		or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	end
	
	 if(@P_RequestType = 3 or @P_RequestType is null or @P_RequestType ='') --SalaryCertificate
	begin
		
			insert into @Result
			SELECT  s.CertificateID,s.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=s.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
			,0 from [dbo].[Certificate] s join @RequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' 	
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
		or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))

		
	end

	 if(@P_RequestType = 4 or @P_RequestType is null or @P_RequestType ='') --ExperienceCertificate
	begin
		
			insert into @Result
			SELECT  e.CertificateID,e.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=e.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null
			
			,0 from [dbo].[Certificate] e join @RequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' 
				and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
		or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			)or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))

		
	end

	 if(@P_RequestType = 6 or @P_RequestType is null or @P_RequestType ='') --Leave
	begin
		
			insert into @Result
			SELECT  l.LeaveID,l.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= l.ApproverDepartmentID) as ApproverDepartment

			,0 from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and( ((w.Status = 7 and w.ToEmail = @UserEmail) or
				(w.Status = 8 and (l.IsHrHeadApproved = 0 or l.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
				(w.Status = 8 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and l.IsHrHeadApproved = 1 and 
					(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
					(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=7))
					or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))

	end

	 if(@P_RequestType = 8 or @P_RequestType is null or @P_RequestType ='') --Training
	begin
		
			insert into @Result
			SELECT  t.TrainingID,t.[TrainingReferenceID],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.[TrainingReferenceID] and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 42 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	  (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= t.ApproverDepartmentID) as ApproverDepartment

		,0	from [dbo].[Training] t join @RequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and (((w.Status = 42 and w.ToEmail = @UserEmail) or
				(w.Status = 43 and (t.IsHrHeadApproved = 0 or t.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
				(w.Status = 43 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and t.IsHrHeadApproved = 1 and 
					(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
					(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9))) or
					(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=42))
					or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))

		
	end
	
	 if(@P_RequestType = 10 or @P_RequestType is null or @P_RequestType ='') --CompliantSuggestions
	begin
		
			insert into @Result
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
	
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			null,l.Source as SourceName ,null,null
			
			,0 from [dbo].[HRComplaintSuggestions] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
				and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
		or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9)))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	end

		 if(@P_RequestType = 7 or @P_RequestType is null or @P_RequestType ='') --OfficialTask/Compensation
	begin
		
			insert into @Result
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = (case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and d.ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and d.FromName=@UserName))
then 107 else 113 end)) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and d.ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and d.FromName=@UserName))
then 107 else 113 end) as StatusCode,
			(case when w.WorkflowProcess='SubmissionWorkflow' then (select w.ToEmail) else null end),
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
				(((select top 1[FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107) = @UserEmail
				and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0)))
				then 1 else 0 end),null,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
			,0 from [dbo].[OfficialTask] OT join @RequestList1 w on OT.[ReferenceNumber] = w.[ReferenceNumber]  
			 where (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)  and
			 ((@P_UserID in (select E.UserID from OfficialTaskEmployeeName as E where E.OfficialTaskID = OT.OfficialTaskID) 
				))and (w.Status=(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
then 107 else 113 end))--)) or (w.Status= 107  and W.FromEmail= (select OfficialMailId from UserProfile where UserProfileId=@P_UserID))
			
	--Compensation 
		
			insert into @Result
			SELECT  C.CompensationID,C.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
		,0,
			(select (case when q.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.ToEmail) 
					when q.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=c.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as q) ,
				
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
				(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,
	 
	   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
	 )))
	  as ApproverDepartment
		,1	from [dbo].[Compensation] C join @RequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   where (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and ( ((w.Status = 108 and w.ToEmail=@UserEmail )
			 or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow'or w.WorkflowProcess !='CloseWorkflow')
				and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 ) and C.IsHrHeadApproved =1  )
			 or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow'or w.WorkflowProcess !='CloseWorkflow')
				and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 and IsOrgHead = 1 ) and (C.IsHrHeadApproved <>1 or C.IsHrHeadApproved is null)  )
			 or ((w.status =109 and w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')or(w.Status =110 and w.WorkflowProcess = 'ReturnWorkflow')
			    and ( (@P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9)) or w.ToEmail = @UserEmail) ) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=108) )

				or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
				end





	if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end 

	if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (select row_number() over (Order By ReferenceNumber desc ) as slno, * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests'and IsCompensationRequest = 'false' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID= (select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID) and  a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests'and IsCompensationRequest = 'true' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
				or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
	or a.AssignedTo like '%'+@P_SmartSearch+'%' 
	or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
)) as m
		 where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%')
			or(SourceName  like '%'+@P_SmartSearch+'%')or(ApproverName  like '%'+@P_SmartSearch+'%')or(ApproverDepartment  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), ( cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()), l.Birthday) as date)), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests' and IsCompensationRequest = 'false' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=a.RequestID and a.RequestType='Official Requests'and IsCompensationRequest = 'false' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID= (select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID) and  a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests' and IsCompensationRequest = 'true' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.OfficialTaskID=(select c.OfficialTaskID from Compensation as c where c.CompensationID=a.RequestID)  and a.RequestType='Official Requests'and IsCompensationRequest = 'true' and (select EmployeeCode from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			 or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
			or((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or a.AssignedTo like '%'+@P_SmartSearch+'%' 
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
)
	 end

	 declare @LatestResult table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	UpdatedDateTime datetime,
	AssignedTo nvarchar(255),
	IsCompensationRequest bit)

	insert into @LatestResult 
	select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate,UpdatedDateTime,AssignedTo,IsCompensationRequest from @Result order by UpdatedDateTime desc



	 if(@P_Method = 0 and @P_SmartSearch is null)
	select * from ( select row_number() over (Order By ReferenceNumber desc ) as slno, id,ReferenceNumber,Creator,RequestType,Status,RequestDate,RequestID,AssignedTo,IsCompensationRequest from @LatestResult ) as a 
	where a.slno between @StartNo and @EndNo 
	

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result

END
GO
/****** Object:  StoredProcedure [dbo].[HRDashboardListCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[HRDashboardListCount]  ******/
CREATE PROCEDURE [dbo].[HRDashboardListCount] --  HRDashboardList 1,20,7,4,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =1,
	@P_PageSize int =11,
	@P_RequestType nvarchar(250) = 3,
	@P_UserID int = 0,
	@P_Method int = 1,
	@P_Username nvarchar(250) = null,
	
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10)= null

	/* RequestType: Announcement = 1, BabyAddition = 2, SalaryCertificate = 3, ExperienceCertificate = 4, CVBank = 5, Leave = 6,
	OfficialTask = 7, Training = 8, UserProfile = 9, CompliantSuggestions = 10 
	*/
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers
	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255),
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit,
	AssignedTo nvarchar(255) )

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber) 

	 declare @LeaveRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @CertificateRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @BabyAdditionRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @TrainingRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @AnnouncementRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @OfficialRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @ComplaientRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	
		;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Leave'
		)
	insert into @LeaveRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Certificate'
		)
	insert into @CertificateRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='BabyAddition'
		)
	insert into @BabyAdditionRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Training'
		)
	insert into @TrainingRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Announcement'
		)
	insert into @AnnouncementRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='HRComplaintSuggestions'
		)
	insert into @ComplaientRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	
	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service in ('Compensation','OfficialTask')
		)
	insert into @OfficialRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1



--	select * from @RequestList

	if(@P_RequestType = 1 or @P_RequestType is null or @P_RequestType ='') --Announcement
	begin
		
			insert into @Result
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			( case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and ((w.WorkflowProcess  in ('CloseWorkflow') and (@UserEmail = W.ToEmail))
				or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','SubmissionWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))))
				and w.Status != 38
	end

	 if(@P_RequestType = 2 or @P_RequestType is null or @P_RequestType ='') --BabyAddition
	begin
		
			insert into @Result
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  t where t.ReferenceNumber=b.ReferenceNumber and t.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by t.WorkflowID desc) as c)
			from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
				and ((w.WorkflowProcess  in ('CloseWorkflow') and (@UserEmail = W.ToEmail))
				or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','SubmissionWorkflow') and 
				(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))) and w.Status != 41 
	end
	
	 if(@P_RequestType = 3 or @P_RequestType is null or @P_RequestType ='') --SalaryCertificate
	begin
		
			insert into @Result
			SELECT  s.CertificateID,s.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=s.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' 	
			and ((w.WorkflowProcess  in ('CloseWorkflow') and (@UserEmail = W.ToEmail))
				or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','SubmissionWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))))
				and w.Status != 35 

		
	end

	 if(@P_RequestType = 4 or @P_RequestType is null or @P_RequestType ='') --ExperienceCertificate
	begin
		
			insert into @Result
			SELECT  e.CertificateID,e.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=e.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' 
				and ((w.WorkflowProcess  in ('CloseWorkflow') and (@UserEmail = W.ToEmail))
				or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','SubmissionWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))) 
				and w.Status != 35 

		
	end

	 if(@P_RequestType = 6 or @P_RequestType is null or @P_RequestType ='') --Leave
	begin
			insert into @Result
			SELECT  l.LeaveID,l.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and(((w.Status = 7 or w.Status = 10) and w.ToEmail = @UserEmail) or
				(w.Status = 8 and (l.IsHrHeadApproved = 0 or l.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
				(w.Status = 8 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and l.IsHrHeadApproved = 1 and 
					(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
					(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=7)) and w.Status != 11
					

	end

	 if(@P_RequestType = 8 or @P_RequestType is null or @P_RequestType ='') --Training
	begin
		
			insert into @Result
			SELECT  t.TrainingID,t.[TrainingReferenceID],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.[TrainingReferenceID] and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[Training] t join @TrainingRequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and (((w.Status = 42 or w.Status = 44) and w.ToEmail = @UserEmail) or
				(w.Status = 43 and (t.IsHrHeadApproved = 0 or t.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
				(w.Status = 43 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and t.IsHrHeadApproved = 1 and 
					(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
				(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
					(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9))) or
					(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=42))and w.Status != 45
					

		
	end
	
	 if(@P_RequestType = 10 or @P_RequestType is null or @P_RequestType ='') --CompliantSuggestions
	begin
		
			insert into @Result
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
	
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c)
			from [dbo].[HRComplaintSuggestions] l join @ComplaientRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
				and ((w.WorkflowProcess  in ('CloseWorkflow') and (@UserEmail = W.ToEmail))
				or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','SubmissionWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))) 
				and w.Status != 49
	end

		 if(@P_RequestType = 7 or @P_RequestType is null or @P_RequestType ='') --OfficialTask/Compensation
	begin
		
			insert into @Result
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='SubmissionWorkflow' then (select w.ToEmail) else null end),
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
				(((select top 1[FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107) = @UserEmail
				and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0)))
				then 1 else 0 end),null
			from [dbo].[OfficialTask] OT join @OfficialRequestList w on OT.[ReferenceNumber] = w.[ReferenceNumber]  
			 where (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)  and
			 ((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
				and (w.Status <> 107)) or (w.Status= 107  and W.FromEmail= (select OfficialMailId from UserProfile where UserProfileId=@P_UserID))) and W.Status!=107
			
	--Compensation 
		
			insert into @Result
			SELECT  C.CompensationID,C.[ReferenceNumber],
	
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
				(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
		,0,
			(select (case when q.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.ToEmail) 
					when q.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=c.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as q)
			from [dbo].[Compensation] C join @OfficialRequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   where (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and ((w.Status = 108 and w.ToEmail=@UserEmail )
			 or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow' or w.WorkflowProcess !='CloseWorkflow')
				and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 ) and C.IsHrHeadApproved =1  )
			 or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow' or w.WorkflowProcess !='CloseWorkflow')
				and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 and IsOrgHead = 1 ) and (C.IsHrHeadApproved <>1 or C.IsHrHeadApproved is null)  )
			 or ((w.status =109 and w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')or(w.Status =110 and w.WorkflowProcess = 'ReturnWorkflow')
			    and ( (@P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9)) or w.ToEmail = @UserEmail) ) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=108) )
				and w.Status !=111
				end





	if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end 

	if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (select row_number() over (Order By ReferenceNumber desc ) as slno, * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  )) as m
		 where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  ) 
	 end

	 declare @LatestResult table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	UpdatedDateTime datetime)

	insert into @LatestResult 
	select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate,UpdatedDateTime from @Result order by UpdatedDateTime desc



	 if(@P_Method = 0 and @P_SmartSearch is null)
	select * from ( select row_number() over (Order By ReferenceNumber desc ) as slno, id,ReferenceNumber,Creator,RequestType,Status,RequestDate,RequestID from @LatestResult ) as a 
	where a.slno between @StartNo and @EndNo 
	

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
END
GO
/****** Object:  StoredProcedure [dbo].[HRReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[HRReport]  ******/
CREATE PROCEDURE [dbo].[HRReport] --HRReport 1,10,0,1,'','',
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int = 0,
	@P_UserID int = 0,
	@P_Username nvarchar(max) = null ,
	@P_Creator nvarchar(max) = null,
	@P_Status nvarchar(max) = null,
	@P_RequestType nvarchar(250) = 0,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10) ='AR'
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null, @P_OrgUnit int = 0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;


	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_OrgUnit = (Select OrgUnitID from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	  if(@P_Status='All' or @P_Status='الكل')
	  set @P_Status= null

	  declare @HRManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @HRUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  insert into @HRManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and [IsOrgHead] = 1

	  insert into @HRUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 9 and ([IsOrgHead] is null or [IsOrgHead] =0)

	 declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime)

	 declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] group by ReferenceNumber)


		 declare @LeaveRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @CertificateRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @BabyAdditionRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @TrainingRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @AnnouncementRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @OfficialRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	declare @ComplaientRequestList table(	
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max))

	
		;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Leave'
		)
	insert into @LeaveRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Certificate'
		)
	insert into @CertificateRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='BabyAddition'
		)
	insert into @BabyAdditionRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Training'
		)
	insert into @TrainingRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='Announcement'
		)
	insert into @AnnouncementRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service='HRComplaintSuggestions'
		)
	insert into @ComplaientRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1


	
	;WITH CTE AS 
		(
		SELECT *, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  Workflow where Service in ('Compensation','OfficialTask')
		)
	insert into @OfficialRequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],FromEmail,ToEmail,[Status],DelegateTOEmail
	from CTE where RowNumber=1

	

	 declare @MyOwnResult table(
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	UpdatedDateTime datetime,
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max)
	)

	--Get own request 
		insert into @MyOwnResult
	select distinct t.TrainingID,t.[TrainingReferenceID],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = t.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end)  from [dbo].[M_Lookups] where Module = 'Training' AND Category = 'Status' AND LookupsID = w.Status)as Status,
	t.[CreatedDateTime],
	(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 42 ) order by WorkflowID desc) 
	 ))
	  as ApproverName,( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.ApproverDepartmentID)
	  as ApproverDepartment
		from [dbo].[Training] t join @TrainingRequestList w on t.TrainingReferenceID = w.ReferenceNumber and t.DeleteFlag is not null and t.CreatedBy = @P_UserID and w.Status!=44

	insert into @MyOwnResult
	select distinct l.LeaveID,l.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = l.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Leave' AND Category = 'Status' AND LookupsID = w.Status ) as Status,
	l.[CreatedDateTime],
	(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime,( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	 (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
	 ))as ApproverName,
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID=l.ApproverDepartmentID ) as ApproverDepartment
	from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.ReferenceNumber and l.DeleteFlag is not null and l.CreatedBy = @P_UserID and w.Status != 10

	insert into @MyOwnResult
	select distinct b.BabyAdditionID,b.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = b.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'BabyAddition' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	b.[CreatedDateTime],
	(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
	from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.ReferenceNumber and b.DeleteFlag is not null and b.CreatedBy = @P_UserID

	insert into @MyOwnResult
	select distinct s.CertificateID,s.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = s.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Certificate' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	s.[CreatedDateTime],
	(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
	from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.ReferenceNumber and s.DeleteFlag is not null 
	and s.CreatedBy = @P_UserID and s.CertificateType = 'Salary'
	
	insert into @MyOwnResult
	select distinct e.CertificateID, e.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = e.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Certificate' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	e.[CreatedDateTime],
	(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null
	from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.ReferenceNumber and e.DeleteFlag is not null 
	and e.CreatedBy = @P_UserID and e.CertificateType = 'Experience'
	
	insert into @MyOwnResult
	select distinct h.HRComplaintSuggestionsID,h.[ReferenceNumber],
	case when h.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = h.[CreatedBy]) end as Creator,
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'HRComplaintSuggestions' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	h.[CreatedDateTime],
	(case when (h.UpdatedDateTime is null) then h.[CreatedDateTime] else h.UpdatedDateTime end) as UpdatedDateTime,
	null,h.Source as SourceName ,null,null
	from [dbo].[HRComplaintSuggestions] h join @ComplaientRequestList w on h.[ReferenceNumber] = w.ReferenceNumber and h.DeleteFlag is not null 
	and h.CreatedBy = @P_UserID 

	insert into @MyOwnResult
	select distinct a.AnnouncementID,a.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = a.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Announcement' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	a.[CreatedDateTime],
	(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime,
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null	
	from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.ReferenceNumber and a.DeleteFlag is not null 
	and a.CreatedBy = @P_UserID 

		insert into @MyOwnResult
	select distinct OT.OfficialTaskID,OT.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = OT.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'OfficialTask' AND Category = 'Status' AND LookupsID = 	(select case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber))
	then 107 else 113 end) ) as Status,
	OT.[CreatedDateTime],
	(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
	from [dbo].[OfficialTask] as OT join @OfficialRequestList w on OT.[ReferenceNumber] = w.ReferenceNumber and OT.DeleteFlag is not null 
	and OT.CreatedBy = @P_UserID 

	insert into @MyOwnResult
	select distinct C.CompensationID,C.[ReferenceNumber],
	(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = C.[CreatedBy]),
	(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149),
	(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where Module = 'Compensation' AND Category = 'Status' AND LookupsID = w.Status) as Status,
	C.[CreatedDateTime],
	(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime ,			
	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
	( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
	 ))as ApproverName,
	 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
	  (select top 1 ToEmail from @OfficialRequestList
	 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
	 ))) as ApproverDepartment
	from [dbo].[Compensation] as C join @OfficialRequestList w on C.[ReferenceNumber] = w.ReferenceNumber --and C.DeleteFlag is not null 
	and C.CreatedBy = @P_UserID and w.WorkflowProcess !='ReturnWorkflow'


	insert into @Result
	select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @MyOwnResult	
	
	
	 declare @MyProcessedResult table(
		RequestID int ,
		ReferenceNumber nvarchar(max),
		Creator nvarchar(max),
		RequestType nvarchar(max),
		Status nvarchar(max),
		RequestDate datetime,
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		StatusCode int,
		UpdatedDateTime datetime,
		IsCompensationAvaliable bit ,
		DelegateUser int,
    	Approver int,
		AssignedTo nvarchar(max))

	insert into @MyProcessedResult
			SELECT  t.TrainingID,t.[TrainingReferenceID],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID)) as DelegateUser
           	,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID and Status=42) ) as Approver
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.TrainingReferenceID and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c)
            from [dbo].[Training] t join @TrainingRequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and( (	 @P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))

		
			insert into @MyProcessedResult
			SELECT  a.AnnouncementID,a.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c)
			from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

		insert into @MyProcessedResult
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime		
			,0,0,0 
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c)
			from [dbo].[HRComplaintSuggestions] l join @ComplaientRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

		insert into @MyProcessedResult
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,0 ,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=b.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c)
			from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

		insert into @MyProcessedResult
			SELECT  e.CertificateID,e.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			 ,0,0,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=e.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c)
			from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			insert into @MyProcessedResult
			SELECT  s.CertificateID,s.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=s.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c)
			from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

		insert into @MyProcessedResult
			SELECT  l.LeaveID,l.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=l.ReferenceNumber)) as DelegateUser
 			,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=l.ReferenceNumber) and status=7) as Approver
            ,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=l.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c)
            from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and(@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))
		
			insert into @MyProcessedResult
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
			(((select top 1[FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107) = @UserEmail
			and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) ) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0))
			then 1 else 0 end),0,0,null
			from [dbo].[OfficialTask] OT join @OfficialRequestList w on OT.[ReferenceNumber] = w.[ReferenceNumber] where 
			((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
			and (w.Status <> 107 and w.WorkflowProcess!='SubmissionWorkflow')) or (w.Status= 107  and W.FromEmail= (select OfficialMailId from UserProfile where UserProfileId=@P_UserID)))
			 and (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)
		    
		    insert into @MyProcessedResult
			SELECT  C.CompensationID,C.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=c.ReferenceNumber)) as DelegateUser
            ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=c.ReferenceNumber) and Status=108) as Approver
			,(select (case when t.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.ToEmail) 
			when t.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=c.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as t)
          	from [dbo].[Compensation] C join @OfficialRequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   and (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			-- Normal RRC Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID  not in (select UserID from @HRUsers))
	begin
	delete from @MyProcessedResult where ToName != @UserName and StatusCode <> 107 and(( @P_UserID  != DelegateUser) and (@P_UserID != Approver))
	end
	--select * from @Result
	-- HR Managers
	if(@P_UserID in (select ManagerUserID from @HRManagers))
	begin
	delete from @MyProcessedResult where (StatusCode = 7 or StatusCode = 42)
	end

	-- HR Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID in (select UserID from @HRUsers))
	begin
	delete from @MyProcessedResult where (StatusCode = 7 and StatusCode = 42) and (ToName not in (select ManagerUserID from @HRManagers)) 
	and (ToName != @UserName)
	end	
	
	insert into @Result
	select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @MyProcessedResult



	declare @MyPengdingResult table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int ,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	StatusCode int,
	UpdatedDateTime datetime,
	IsCompensationAvaliable bit ,
	DelegateUser int,
    	Approver int,
	AssignedTo nvarchar(max),
	SourceOU nvarchar(max),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max)
    )


	 declare @RequestList1 table(
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max),
	FromEmail nvarchar(255))

	insert into @RequestList1
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[ToEmail],[Status],DelegateTOEmail,FromEmail
	from [dbo].[Workflow] 
	where Service='OfficialTask' and ((WorkflowProcess='SubmissionWorkflow' and ToName=@UserName)or(WorkflowProcess='CloseWorkflow' and FromName=@UserName))
	--select * from @RequestList1
	-- For Training Request
	insert into @MyPengdingResult
			SELECT  t.TrainingID,t.[TrainingReferenceID],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID)) as DelegateUser
           	 ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=t.TrainingReferenceID and Status=42) ) as Approver
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.TrainingReferenceID and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from [Workflow]
			 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
			)) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= t.ApproverDepartmentID) as ApproverDepartment
			from [dbo].[Training] t join @TrainingRequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and( (((w.Status = 42 or w.Status = 43 or w.Status = 44) and w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))
			or (( @UserEmail = w.ToEmail or 
		   @UserEmail = W.DelegateTOEmail)
			and w.Status=42)))
		
--	select * from @Result
	-- For Announcements Request

			insert into @MyPengdingResult
			SELECT  a.AnnouncementID,a.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null
			from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and ((w.Status = 36 or w.Status = 37))

	-- For HRComplaintSuggestions Request

		insert into @MyPengdingResult
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime		
			,0,0,0 
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			null,l.Source as SourceName ,null,null
			from [dbo].[HRComplaintSuggestions] l join @ComplaientRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and ((w.Status = 47 or w.Status = 48))

	-- For Baby Addition Request

			insert into @MyPengdingResult
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,0 ,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=b.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
			from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and( (w.Status = 39 or w.Status = 40))

	-- For Experience Certificate Request

		insert into @MyPengdingResult
			SELECT  e.CertificateID,e.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			 ,0,0,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=e.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null
			from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' and ((w.Status = 33 or w.Status = 34))


	-- For Salary Certificate Request

			insert into @MyPengdingResult
			SELECT  s.CertificateID,s.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,0,0
			,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=s.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
			from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' and ((w.Status = 33 or w.Status = 34))
			

	-- For Leave Request

		insert into @MyPengdingResult
			SELECT  l.LeaveID,l.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=l.ReferenceNumber)) as DelegateUser
 			,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=l.ReferenceNumber) and status=7) as Approver
            ,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=l.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
			))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= l.ApproverDepartmentID) as ApproverDepartment
			from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and ( ((( @UserEmail = w.ToEmail or @UserEmail = W.DelegateTOEmail)
			and w.Status=7) or ((w.Status = 7 or w.Status = 8 or w.Status =10)and
			 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))) )
		
		--select * from @Result 	
		-- For OfficialTask Request
			insert into @MyPengdingResult
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
			then 107 else 113 end) as StatusCode,
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
			(((select [FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107 and FromName=@UserName) = @UserEmail
			and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) ) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0))
			then 1 else 0 end),0,0,null,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
			from [dbo].[OfficialTask] OT join @RequestList1 w on OT.[ReferenceNumber] = w.[ReferenceNumber] where 
			((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
			and 
			(w.Status=(case when ((select count(*) from Workflow as d where d.status=113 and d.ReferenceNumber=OT.ReferenceNumber and ToName=@UserName)=(select count(*) from Workflow as d where d.status=107 and d.ReferenceNumber=OT.ReferenceNumber and FromName=@UserName))
			then 107 else 113 end))))
			 and (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)
		    
		-- For Compensation Request
		    insert into @MyPengdingResult
			SELECT  C.CompensationID,C.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,(select UserProfileId from UserProfile where OfficialMailId=(Select DelegateTOEmail from @RequestList where ReferenceNumber=c.ReferenceNumber)) as DelegateUser
            ,(select UserProfileId from UserProfile where OfficialMailId=(Select ToEmail from @RequestList where ReferenceNumber=c.ReferenceNumber) and Status=108) as Approver
			,(select (case when t.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.ToEmail) 
			when t.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = t.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  q where q.ReferenceNumber=c.ReferenceNumber and q.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by q.WorkflowID desc) as t) ,( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from [Workflow]
			where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
			 ))as ApproverName,
			 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
			 )))as ApproverDepartment
          	 from [dbo].[Compensation] C join @OfficialRequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]  
			and( (( ( @UserEmail = w.ToEmail or 
			@UserEmail = W.DelegateTOEmail)
			 and w.Status =108)or ((w.Status = 108 or w.Status = 109 or w.Status =110)and
			 w.ToEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId =@P_UserID))))

	-- Normal RRC Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID  not in (select UserID from @HRUsers))
	begin
	delete from @MyPengdingResult where ToName != @UserName and StatusCode <> 107 and(( @P_UserID  != DelegateUser) and (@P_UserID != Approver))
	end
	--select * from @Result
	-- HR Managers
	if(@P_UserID in (select ManagerUserID from @HRManagers))
	begin
	delete from @MyPengdingResult where (StatusCode = 7 or StatusCode = 42)
	end

	-- HR Users
	if(@P_UserID not in (select ManagerUserID from @HRManagers) and @P_UserID in (select UserID from @HRUsers))
	begin
	delete from @MyPengdingResult where (StatusCode = 7 and StatusCode = 42) and (ToName not in (select ManagerUserID from @HRManagers)) 
	and (ToName != @UserName)
	end


		insert into @Result
		select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @MyPengdingResult	


	if(@P_OrgUnit = 9)
	begin

		declare @HRResult table(
		RequestID int,
		ReferenceNumber nvarchar(max),
		Creator nvarchar(max),
		RequestType nvarchar(max),
		Status nvarchar(max),
		RequestDate datetime,
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		StatusCode int,
		Assignee nvarchar(255),
		UpdatedDateTime datetime,
		IsCompensationAvaliable bit,
		AssignedTo nvarchar(255),
		SourceOU nvarchar(max),
		SourceName nvarchar(max),
		ApproverName nvarchar(max),
		ApproverDepartment nvarchar(max))

					insert into @HRResult
			SELECT  a.AnnouncementID,a.[ReferenceNumber],
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 147) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			( case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (a.UpdatedDateTime is null) then a.[CreatedDateTime] else a.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = a.SourceName) as SourceName ,null,null
			from [dbo].[Announcement] a join @AnnouncementRequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   and (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
			or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	
			insert into @HRResult
			SELECT  b.BabyAdditionID,b.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = b.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 146) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			b.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (b.UpdatedDateTime is null) then b.[CreatedDateTime] else b.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  t where t.ReferenceNumber=b.ReferenceNumber and t.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by t.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = b.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = b.SourceName) as SourceName ,null,null
			from [dbo].[BabyAddition] b join @BabyAdditionRequestList w on b.[ReferenceNumber] = w.[ReferenceNumber]   and (b.[DeleteFlag] is not null or b.[DeleteFlag] !=0) 
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
			or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	 
			insert into @HRResult
			SELECT  s.CertificateID,s.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = s.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 144) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			s.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (s.UpdatedDateTime is null) then s.[CreatedDateTime] else s.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=s.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = s.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = s.SourceName) as SourceName ,null,null
			from [dbo].[Certificate] s join @CertificateRequestList w on s.[ReferenceNumber] = w.[ReferenceNumber]   and (s.[DeleteFlag] is not null or s.[DeleteFlag] !=0) 
			and s.[CertificateType] = 'Salary' 	
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
			or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
		
			insert into @HRResult
			SELECT  e.CertificateID,e.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = e.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 145) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			e.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (e.UpdatedDateTime is null) then e.[CreatedDateTime] else e.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=e.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = e.SourceOU) as SourceOU ,
			(select EmployeeName from UserProfile  where UserProfileId = e.SourceName) as SourceName ,null,null
			from [dbo].[Certificate] e join @CertificateRequestList w on e.[ReferenceNumber] = w.[ReferenceNumber]   and (e.[DeleteFlag] is not null or e.[DeleteFlag] !=0) 
			and e.[CertificateType] = 'Experience' 
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
			or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 )))
			)or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
		
			insert into @HRResult
			SELECT  l.LeaveID,l.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 143) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = l.SourceName) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = l.SourceOU) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from [Workflow]
			 where ReferenceNumber =l.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=l.CreatedBy) and (Status = 7 or Status = 8) order by WorkflowID desc) 
			 ))as ApproverName, (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= l.ApproverDepartmentID) as ApproverDepartment
			from [dbo].[Leave] l join @LeaveRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and( ((w.Status = 7 and w.ToEmail = @UserEmail) or
			(w.Status = 8 and (l.IsHrHeadApproved = 0 or l.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
			(w.Status = 8 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and l.IsHrHeadApproved = 1 and 
			(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
			(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
			(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
			(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=7))
			or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
		
			insert into @HRResult
			SELECT  t.TrainingID,t.[TrainingReferenceID],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = t.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 148) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			t.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (t.UpdatedDateTime is null) then t.[CreatedDateTime] else t.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=t.[TrainingReferenceID] and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = t.SourceOU) as SourceOU ,
			(select EmployeeName from UserProfile  where UserProfileId = t.SourceName) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from [Workflow]
			 where ReferenceNumber =t.TrainingReferenceID and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=t.CreatedBy) and (Status = 42 ) order by WorkflowID desc) 
			))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= t.ApproverDepartmentID) as ApproverDepartment
			from [dbo].[Training] t join @TrainingRequestList w on t.[TrainingReferenceID] = w.[ReferenceNumber]   and (t.[DeleteFlag] is not null or t.[DeleteFlag] !=0) 
			and (((w.Status = 42 and w.ToEmail = @UserEmail) or
			(w.Status = 43 and (t.IsHrHeadApproved = 0 or t.IsHrHeadApproved is null) and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 and US.IsOrgHead =1))) or
			(w.Status = 43 and w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and t.IsHrHeadApproved = 1 and 
			(@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9 ))) or
			(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow','ReturnWorkflow') and (@UserEmail = W.ToEmail)) or 
			(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in 
			(select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9))) or
			(( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=42))
			or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
	
			insert into @HRResult
			SELECT  l.HRComplaintSuggestionsID,l.[ReferenceNumber],
			case when l.RequestCreatedBy=0 then (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)else 
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = l.[CreatedBy]) end as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 150) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			l.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (l.UpdatedDateTime is null) then l.[CreatedDateTime] else l.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=l.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			null,l.Source as SourceName ,null,null
			from [dbo].[HRComplaintSuggestions] l join @ComplaientRequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
			and (((w.WorkflowProcess not in ('AssignToMeWorkflow','AssignWorkflow','CloseWorkflow') and  (@P_UserID in (select U.UserProfileId from UserProfile as U where U.OrgUnitID = 9))) 
			or(w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@UserEmail = W.ToEmail))
			or (w.WorkflowProcess  in ('AssignToMeWorkflow','AssignWorkflow') and (@P_UserID in (select US.UserProfileId from UserProfile as US where US.OrgUnitID = 9)))
			) or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
		
			insert into @HRResult
			SELECT  OT.OfficialTaskID,OT.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 149) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			OT.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='SubmissionWorkflow' then (select w.ToEmail) else null end),
			(case when (OT.UpdatedDateTime is null) then OT.[CreatedDateTime] else OT.UpdatedDateTime end) as UpdatedDateTime
			,(case when 
			(((select top 1[FromEmail] from Workflow where [ReferenceNumber] = OT.[ReferenceNumber] and status = 107) = @UserEmail
			and DATEADD(DAY, 5, OT.CreatedDateTime) > (select GETDATE()) and ((select count(*) from Compensation where OfficialTaskID=OT.OfficialTaskID)=0)))
			then 1 else 0 end),null,	( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ot.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = ot.SourceName) as SourceName ,null,null
			from [dbo].[OfficialTask] OT join @OfficialRequestList w on OT.[ReferenceNumber] = w.[ReferenceNumber]  
			 where (OT.[DeleteFlag] is not null or OT.[DeleteFlag] !=0)  and
			 ((@P_UserID in (select UserID from OfficialTaskEmployeeName where OfficialTaskID = OT.OfficialTaskID) 
			and (w.Status <> 107)) or (w.Status= 107  and W.FromEmail= (select OfficialMailId from UserProfile where UserProfileId=@P_UserID)))
			
			insert into @HRResult
			SELECT  C.CompensationID,C.[ReferenceNumber],(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator,
			(select (case when @P_Language= 'AR' then ArDisplayName else DisplayName end)  from M_Lookups where LookupsID = 186) as RequestType,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			C.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.Status as StatusCode,
			(case when w.WorkflowProcess='AssignToMeWorkflow' then (select w.FromEmail)  when w.WorkflowProcess ='AssignWorkflow' then (select w.ToEmail) else null end),
			(case when (C.UpdatedDateTime is null) then C.[CreatedDateTime] else C.UpdatedDateTime end) as UpdatedDateTime
			,0,
			(select (case when q.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.ToEmail) 
			when q.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = q.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=c.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as q) ,
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = c.SourceOU) as SourceOU ,
			( select EmployeeName from UserProfile  where UserProfileId = c.SourceName) as SourceName ,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from [Workflow]
			 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108 ) order by WorkflowID desc) 
			 )) as ApproverName,
			 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = ( select OrgUnitID from [UserProfile] where OfficialMailId=(
				(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =c.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=c.CreatedBy) and (Status = 108)) 
			 )))as ApproverDepartment
			from [dbo].[Compensation] C join @OfficialRequestList w on C.[ReferenceNumber] = w.[ReferenceNumber]   where (C.[DeleteFlag] is not null or C.[DeleteFlag] !=0) 
			and ( ((w.Status = 108 and w.ToEmail=@UserEmail )
			or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow'or w.WorkflowProcess !='CloseWorkflow')
			and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 ) and C.IsHrHeadApproved =1  )
			or (w.status =109 and( w.WorkflowProcess != 'AssignToMeWorkflow' or  w.WorkflowProcess !='AssignWorkflow'or w.WorkflowProcess !='CloseWorkflow')
			and @P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9 and IsOrgHead = 1 ) and (C.IsHrHeadApproved <>1 or C.IsHrHeadApproved is null)  )
			or ((w.status =109 and w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')or(w.Status =110 and w.WorkflowProcess = 'ReturnWorkflow')
			and ( (@P_UserID in(select UserProfileId from [UserProfile] where OrgUnitID =9)) or w.ToEmail = @UserEmail) ) or (( @UserEmail = w.ToEmail or @UserEmail = w.DelegateTOEmail)and w.Status=108) )
			or (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))))
			--select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @HRResult
	
		insert into @Result
		select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @HRResult	
	end										  
		 --select * from @Result  where RequestType='Leave Requests'

	 ; With CTE_Duplicates as
	(select row_number() over(partition by ReferenceNumber order by ReferenceNumber ) rownumber 
	from @Result  )
	 delete from CTE_Duplicates where rownumber!=1

	 if(@P_RequestDateFrom != '')
	 delete from @Result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_Creator != '')
	 delete from @Result where Creator not like  '%'+@P_Creator+'%'

	 if(@P_RequestDateTo is not null)
	 delete from @Result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_RequestType !='' and @P_RequestType is not null)
	 begin
		delete from @result where RequestType != (select( case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='HrRequestType' and Module=@P_RequestType)
		
		-- (case when(@P_RequestType = 1) then 'Announcement Requests' when(@P_RequestType = 2) then 'New Baby Addition'
		--when(@P_RequestType = 3) then 'Salary Certificate' when(@P_RequestType = 4) then 'Experience Certificate' when(@P_RequestType = 6) then 'Leave Requests' 
		--when(@P_RequestType = 7) then 'OfficalTask Request' when(@P_RequestType = 8) then 'Training Requests'  when(@P_RequestType = 10) then 'Raise Complaints/Suggestions'
		--end)
	 end

	 if(@P_Status !='' and @P_Status is not null and @P_Status not like 'الكل')
	 begin
		delete from @Result where Status not like  '%'+@P_Status+'%'
	 end
	 
	 if(@P_Creator !='')
	 begin
		delete from @result where Creator !=  @P_Creator and Creator != (select( case when @P_Language='EN' then M.DisplayName else M.ArDisplayName end)  from M_Lookups as M where M.Category='CreatedBy' and M.Module=1)
	 end 

	

	 /* if(@P_RequestType !='')
	 begin
		delete from @result where RequestType !=  @P_RequestType
	 end */

		if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select id,ReferenceNumber,Creator,RequestType,Status,RequestDate,RequestID from (select row_number() over (Order By ReferenceNumber desc ) as slno, * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') 
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.Birthday as date), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')
			or ((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
)) as m
		 --where m.slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Creator like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')
			or((select (case when l.RequestCreatedBy=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177) 
			when l.RequestCreatedBy=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=171)end) from HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select EmployeeName from UserProfile join Leave as l on UserProfileId=l.DOANameID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then DepartmentName else ArDepartmentName end) from M_Department join Leave as l on DepartmentID=l.DOADepartmentID where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.LeaveType=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=174) 
			when l.LeaveType=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=175)end) from Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Leave as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Leave as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.TraineeName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.TrainingName from  Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Training as l where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select (case when l.TrainingFor=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=176) 
			when l.TrainingFor=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=177)end) from Training as l  where l.TrainingReferenceID=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join OfficialTask as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from OfficialTask as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 
			or((select l.NumberofDays from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.OfficialTaskDescription from  OfficialTask as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.AnnouncementType) from Announcement as K where K.AnnouncementID=a.RequestID and a.RequestType='Announcement Requests' and (select (case when @P_Language ='EN' then AnnouncementTypeName  end) from AnnouncementTypeAndDescription as d where d.AnnouncementTypeID= K.AnnouncementType )like '%'+@P_SmartSearch+'%')>0)
			or((select l.AnnouncementDescription from  Announcement as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.BabyName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select l.HospitalName from  BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(l.Birthday as date), 103)from BabyAddition as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or ((select count(K.CityofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CityName else ArCityName  end) from M_City as d where cast(d.CityID as Nvarchar(max))= K.CityofBirth )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.CountryofBirth) from BabyAddition as K where K.BabyAdditionID=a.RequestID and a.RequestType='New Baby Addition' and (select (case when @P_Language ='EN' then CountryName else ArCountryName  end) from M_Country as d where d.CountryID= K.CountryofBirth )like '%'+@P_SmartSearch+'%')>0)
			or((select (case when l.Gender=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=167) 
			when l.Gender=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=168)end) from BabyAddition as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select l.Reason from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')or((select(l.CertificateType) from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select [To] from  Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select EmployeeName from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select Grade from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			or ((select count(K.UserID) from OfficialTaskEmployeeName as K where K.UserID=a.RequestID and a.RequestType='Official Requests' and (select EmployeePosition from UserProfile as d where d.UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
			  or((select (case when @P_Language='EN' then OfficialTaskRequestName else ArOfficialTaskRequestName end) from M_OfficialTaskRequest join Compensation as l on OfficialTaskRequestID=l.OfficialTaskType where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
				or( (select (case when m.NeedCompensation=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=178))
			when m.NeedCompensation=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=179))
			end) from Compensation as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
				or	((SELECT  CONVERT(nvarchar(10), cast(l.StartDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
			or	((SELECT  CONVERT(nvarchar(10), cast(l.EndDate as date), 103)from Compensation as l where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%') 	
		or((select l.Subject from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		or((select l.Details from  HRComplaintSuggestions as l  where l.ReferenceNumber=a.ReferenceNumber and l.HRComplaintSuggestionsID=a.RequestID)like '%'+@P_SmartSearch+'%')
		
			or((select l.NumberofDays from  Compensation as l  where l.ReferenceNumber=a.ReferenceNumber)like '%'+@P_SmartSearch+'%')or 
			((select (case when l.Attention=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=203) 
			when l.Attention=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=204)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
			or((select (case when l.SalaryCertificateClassification=0 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=205) 
			when l.SalaryCertificateClassification=1 then (select  (case when @P_Language='EN' then DisplayName else ArDisplayName end)from M_Lookups where LookupsID=206)end) from Certificate as l  where l.ReferenceNumber=a.ReferenceNumber)  like '%'+@P_SmartSearch+'%')
)
	 end

	 declare @LatestResult table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime
	)

	insert into @LatestResult 
	select RequestID,ReferenceNumber,Creator,RequestType,Status,RequestDate from @Result order by RequestID desc



	 if(@P_Method = 0 and @P_SmartSearch is null)
	select id,ReferenceNumber,Creator,RequestType,Status,RequestDate,RequestID from ( select row_number() over (Order By ReferenceNumber desc ) as slno, id,ReferenceNumber,Creator,RequestType,Status,RequestDate,RequestID from @LatestResult ) as a 
	--where a.slno between @StartNo and @EndNo 
	

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
	 
END
GO
/****** Object:  StoredProcedure [dbo].[InternalContactReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[InternalContactReport]    ******/
CREATE procedure [dbo].[InternalContactReport] --  [ContactReport]1,10,2,2


    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_Department nvarchar(250) = null ,
	@P_UserName nvarchar(250) = null,	
	@P_Designation nvarchar(250)= null,
	@P_EmailId nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_SmartSearch nvarchar(max)= null,
	@P_Language nvarchar(max)= null
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	print @startNo
	print @endno

  	declare @result table
	(
	id int,
	ContactID int ,
	ReferenceNumber nvarchar(250),
	Department nvarchar(250),
	UserName nvarchar(255),	
	Designation nvarchar(250),
	EmailId nvarchar(max),
	PhoneNumber nvarchar(max)
	
	
	);

	if(@P_Department is not null and @P_Department !='')
	set @P_Department =( select case when @P_Language='EN' then DepartmentName else ArDepartmentName end from M_Department where DepartmentID=  @P_Department)
 Insert into @result

 	
	select
	 row_number() over (Order By  C.[ContactID]) as slno,
	
	C.ContactID,
	C.ReferenceNumber,
	(select case when @P_Language='EN' then DepartmentName else ArDepartmentName end from M_Department where DepartmentID=  C.[Department]) ,
	C.[UserName],	
	C.[Designation],
	C.[EmailId],
	C.[PhoneNumber] from Contact C where C.DeleteFlag= 0 and C.Type='Internal'

	
 if(@P_Department != '')
	 delete from @result where Department != @P_Department
	 	
	 if(@P_UserName  != '') 
	 delete from @result where UserName not like '%'+@P_UserName+'%'



	if(@P_Designation  != '') 
	 delete from @result where Designation not like '%'+@P_Designation+'%'
	 	 
	if(@P_EmailId  != '') 
	 delete from @result where EmailId not like '%'+@P_EmailId+'%'
	    	 
	if(@P_PhoneNumber  != '') 
	 delete from @result where PhoneNumber not like '%'+@P_PhoneNumber+'%'
     end



 if(@P_Method = 0 )
	 begin
	 select * from (SELECT row_number() over (Order By  [ContactID]) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 
	 end

	 if(@P_Method = 1 )
	 select count(*) from @result


	 if(@P_Method = 2 and  @P_SmartSearch is not null)
	 begin
		select * from @result where 
		((Department  like '%'+@P_SmartSearch+'%') or (UserName  like '%'+@P_SmartSearch+'%') or
		 (Designation  like '%'+@P_SmartSearch+'%') or
		(EmailId like '%'+@P_SmartSearch+'%') or (PhoneNumber  like '%'+@P_SmartSearch+'%'))
		 and id between @StartNo and @EndNo 
	 end


	 if(@P_Method = 2 and  @P_SmartSearch is  null)
	 begin
		select * from @result
 end
GO
/****** Object:  StoredProcedure [dbo].[ITDashboardList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[ITDashboardList]   ******/
CREATE PROCEDURE [dbo].[ITDashboardList] -- ITDashboardList  1,10,null,4,0,'TestUser4'
	-- Add the parameters for the stored procedure here
		@P_PageNumber int =1,
	@P_PageSize int =10,
	@P_RequestType nvarchar(250) = null,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_Priority  nvarchar(250)=null,
	@P_Subject nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = '',
	@P_Language nvarchar(max) = null,
	@p_Type int =0 --Type = 0 MyOwn request; Type =1 My Closed request

	as
	begin
declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max),
	SourceOU nvarchar(max),
	Subject nvarchar(max),
	Priority int,	
	Status nvarchar(max),
	RequestDate datetime,
	StatusCode int,
	SourceName nvarchar(max),
	Requestor nvarchar(max),
	RequestorDepartment nvarchar(max),
	Details nvarchar(max))


	if((select OrgUnitID from UserProfile where UserProfileId = @P_UserID)=11)
		begin
			insert into @Result
			SELECT  a.ITSupportID,a.[ReferenceNumber],
			( select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID =  case when a.RequestType=1 then 140 when a.RequestType=2 then 141 else 142 end),
			(select (case when @P_Language = 'AR' then ArDepartmentName else DepartmentName end)  from M_Department where DepartmentID = a.SourceOU) as SourceOU
			,a.Subject as Subject ,
			 a.Priority  as Priority ,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID =
				 (case when a.status = 0 and a.ServiceDeskId is not null then 94 when a.status = 0 and a.ServiceDeskId is  null then 202 else 95 end)) as Status,
			a.[CreatedDateTime] as RequestDate,
			(case when a.status = 0 and ServiceDeskId is null then 202 when a.status = 0 and ServiceDeskId is not null then 94 else 95 end) as StatusCode,
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from UserProfile where UserProfileId=a.RequestorName) as RequestorName,
			(select (case when @P_Language = 'AR' then ArDepartmentName else DepartmentName end)  from M_Department where DepartmentID = a.RequestorDepartment) as RequestorDepartment,
			a.RequestDetails from [dbo].[ITSupport] a 
			where (( @P_RequestType = 0 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)) or
				  (a.RequestType=1 and @P_RequestType = 1 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=1 and @P_RequestType = 2 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=1 and @P_RequestType = 3 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ) or
				  (a.RequestType=2 and @P_RequestType = 4 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=2 and @P_RequestType = 5 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=2 and @P_RequestType = 6 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ) or
				  (a.RequestType=3 and @P_RequestType = 7 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=3 and @P_RequestType = 8 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=3 and @P_RequestType = 9 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ))
		end

	else
		begin
			insert into @Result
			SELECT  a.ITSupportID,a.[ReferenceNumber],
			( select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID =  case when a.RequestType=1 then 140 when a.RequestType=2 then 141 else 142 end),
			(select (case when @P_Language = 'AR' then ArDepartmentName else DepartmentName end)  from M_Department where DepartmentID = a.SourceOU) as SourceOU
			,a.Subject as Subject ,
			 a.Priority  as Priority ,
			(select  (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID =
				 (case when a.status = 0 and a.ServiceDeskId is not null then 94 when a.status = 0 and a.ServiceDeskId is  null then 202 else 95 end)) as Status,
			a.[CreatedDateTime] as RequestDate,
			(case when a.status = 0 and ServiceDeskId is null then 202 when a.status = 0 and ServiceDeskId is not null then 94 else 95 end) as StatusCode,
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from UserProfile where UserProfileId=a.RequestorName) as RequestorName,
			(select (case when @P_Language = 'AR' then ArDepartmentName else DepartmentName end)  from M_Department where DepartmentID = a.RequestorDepartment) as RequestorDepartment,
			a.RequestDetails from [dbo].[ITSupport] a 
			where((@P_RequestType = 0 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)) or
				  (a.RequestType=1 and @P_RequestType = 1 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=1 and @P_RequestType = 2 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=1 and @P_RequestType = 3 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =1 and a.Status =1 ) or
				  (a.RequestType=2 and @P_RequestType = 4 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=2 and @P_RequestType = 5 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=2 and @P_RequestType = 6 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =1 and a.Status =1 ) or
				  (a.RequestType=3 and @P_RequestType = 7 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=3 and @P_RequestType = 8 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=3 and @P_RequestType = 9 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =1 and a.Status =1 ) or
				   (( @P_RequestType is null or @P_RequestType= '') and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =0 and a.Status =0 ) or
				  ((@P_RequestType is null or @P_RequestType ='') and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and @p_Type =1 and a.Status =1 ))
		end
			
	  ;With CTE_Duplicates as
   (select  row_number() over(partition by RequestID order by RequestID ) rownumber 
   from @Result  )
   delete from CTE_Duplicates where rownumber!=1
   

	if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	if(@P_Status !='' and @P_Status IS NOT NULL)
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_SourceOU !='' AND @P_SourceOU IS NOT NULL)
	 begin
		delete from @result where SourceOU !=  @P_SourceOU
	 end
	 	if(@P_Subject !=null or @P_Subject !='')
	 begin
		delete from @result where Subject !=  @P_Subject
	 end
	 	if(@P_Priority != '' AND @P_Priority IS NOT NULL)
	 begin
		delete from @result where Priority !=  @P_Priority
	 end

	if(@P_SmartSearch !='' and @P_Method = 0 )
	 begin
		select * from (select row_number() over (Order By RequestDate desc ) as slno, * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (SourceOU like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%') or (Subject like '%'+@P_SmartSearch+'%') or (Priority like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (SourceName like '%'+@P_SmartSearch+'%')or (Details like '%'+@P_SmartSearch+'%')
			or (Requestor like '%'+@P_SmartSearch+'%')or (RequestorDepartment like '%'+@P_SmartSearch+'%') 
			or( (select (case when m.Priority=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=181))
			when m.Priority=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=180))
			end) from ITSupport as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%'))) as m
		 where m.slno between @StartNo and @EndNo 
	 end
	
	  if(@P_SmartSearch !='' and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (SourceOU like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%')or (Subject like '%'+@P_SmartSearch+'%') or (Priority like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or( (select (case when m.Priority=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=181))
			when m.Priority=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=180))
			end) from ITSupport as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%') ) 
	 end

	 if(@P_Method = 0 and  @P_SmartSearch='')
	select * from ( select row_number() over (Order By  ReferenceNumber desc ) as slno, id,ReferenceNumber,SourceOU,Priority,RequestType,Subject,Status,RequestDate,RequestID from @result) as a where a.slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch='')
	 select count(*) from @result
	 end
GO
/****** Object:  StoredProcedure [dbo].[ITReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[ITReport]    Script Date: 22/10/2019 9:15:27 PM ******/
CREATE PROCEDURE [dbo].[ITReport] --HRReport 0,0,2,1
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int = 0,
	@P_UserID int = 1,
	@P_RequestType nvarchar(250) = '',
	@P_Username nvarchar(250) = null ,
	@P_SourceOU nvarchar(250) = null,
	@P_Priority  nvarchar(250)='',
	@P_Subject nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_Language nvarchar(max) = null,
	@P_SmartSearch nvarchar(max) = ''
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;


	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)



	 declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max),
	SourceOU nvarchar(max),
	Subject nvarchar(max),
	Priority nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	StatusCode int,
	Creator nvarchar(255))




		if((select OrgUnitID from UserProfile where UserProfileId = @P_UserID)=11)
		begin
			insert into @Result
			SELECT  a.ITSupportID,a.[ReferenceNumber],
			( select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID =  case when a.RequestType=1 then 140 when a.RequestType=2 then 141 else 142 end),
			a.SourceOU as SourceOU,a.Subject as Subject ,
			case when a.Priority = 1 then 'High' else  'Low' end as Priority ,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID =
				 (case when a.status = 0 and a.ServiceDeskId is not null then 94 when a.status = 0 and a.ServiceDeskId is  null then 194 else 95 end))as Status,
			a.[CreatedDateTime] as RequestDate,	
			(case when a.status = 0 and ServiceDeskId is null then 194 when a.status = 0 and ServiceDeskId is not null then 94 else 95 end) as StatusCode,
		    (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=a.CreatedBy)
			from [dbo].[ITSupport] a
			where (( @P_RequestType = 0 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)) or
				  (a.RequestType=1 and @P_RequestType = 1 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or 
				  (a.RequestType=1 and @P_RequestType = 2 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=1 and @P_RequestType = 3 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ) or
				  (a.RequestType=2 and @P_RequestType = 4 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=2 and @P_RequestType = 5 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=2 and @P_RequestType = 6 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ) or
				  (a.RequestType=3 and @P_RequestType = 7 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=3 and @P_RequestType = 8 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=3 and @P_RequestType = 9 and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =1 ) or(@P_RequestType = '' or @P_RequestType is null ))
	end
	else
	begin
		insert into @Result
			SELECT  a.ITSupportID,a.[ReferenceNumber],
			( select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from M_Lookups where LookupsID =  case when a.RequestType=1 then 140 when a.RequestType=2 then 141 else 142 end),
			a.SourceOU as SourceOU,a.Subject as Subject ,
			case when a.Priority = 1 then 'High' else  'Low' end as Priority ,
			(select (case when @P_Language='AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID =
				 (case when a.status = 0 and a.ServiceDeskId is not null then 94 when a.status = 0 and a.ServiceDeskId is  null then 194 else 95 end))as Status,
			a.[CreatedDateTime] as RequestDate,	
			(case when a.status = 0 and ServiceDeskId is null then 194 when a.status = 0 and ServiceDeskId is not null then 94 else 95 end) as StatusCode,
		    (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=a.CreatedBy)
			from [dbo].[ITSupport] a
			where((@P_RequestType = 0 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)) or
				  (a.RequestType=1 and @P_RequestType = 1 and(a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) and  a.Status =0 and ServiceDeskId is null) or 
				  (a.RequestType=1 and @P_RequestType = 2 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=1 and @P_RequestType = 3 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =1 ) or
				  (a.RequestType=2 and @P_RequestType = 4 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=2 and @P_RequestType = 5 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=2 and @P_RequestType = 6 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =1 ) or
				  (a.RequestType=3 and @P_RequestType = 7 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =0 and ServiceDeskId is null) or
				  (a.RequestType=3 and @P_RequestType = 8 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =0 and ServiceDeskId is not null) or
				  (a.RequestType=3 and @P_RequestType = 9 and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID) and (a.[DeleteFlag] is null or a.[DeleteFlag] =0) and a.Status =1 ) or
				  ((@P_RequestType = '' or @P_RequestType is null) and (a.CreatedBy=@P_UserID or a.RequestorName=@P_UserID)  and (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) ))
	end
	



	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	if(@P_SourceOU !='')
	 begin
		delete from @result where SourceOU !=  @P_SourceOU
	 end
	 	if(@P_Subject !='')
	 begin
		delete from @result where Subject !=  @P_Subject
	 end
	 	if(@P_Priority != '')
	 begin
		delete from @result where Priority !=  @P_Priority
	 end

	

	

	 if( @P_SmartSearch is not null and @P_SmartSearch !='')
	 begin
		select 	id ,RequestID ,ReferenceNumber,RequestType,SourceOU,Subject,
		Priority,Status ,RequestDate ,StatusCode ,Creator from (select row_number() over (Order By ReferenceNumber ) as slno, * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (SourceOU like '%'+@P_SmartSearch+'%') or (RequestType like '%'+@P_SmartSearch+'%') or 
		(Subject like '%'+@P_SmartSearch+'%') or (Priority like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  )) as m
		 
	 end
	 else
	 select * from @Result
END
GO
/****** Object:  StoredProcedure [dbo].[ITSupportDashboardListCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[ITSupportDashboardListCount]    ******/
CREATE PROCEDURE [dbo].[ITSupportDashboardListCount]  
	@P_UserID int = 0
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	declare @Request table(
	ReferenceNumber nvarchar(max),
	RequestType nvarchar(max)
	)
	

	
	 declare @P_NonUsers int=0
	 SET @P_NonUsers= (select count(*) from [dbo].[UserProfile] where [OrgUnitID] != 11 and UserProfileId = @P_UserID)

DECLARE @ServicesNew int =0, @ServicesInProgress int =0,@ServicesClose int =0,@SupportNew int=0,@SupportInprogress int=0,@SupportClose int=0,
@ComponentsNew int=0,@ComponentsInprogress int=0,@ComponentsClose int=0,@MyOwnRequest int=0,@MyClosedRequest int=0
  
set  @ServicesClose=( select count(*) from ITSupport  as IT 
	 where IT.RequestType=2 and IT.Status=1  );

	 set  @ServicesNew=(select count(*) from ITSupport  as IT 
	 where IT.RequestType=2 and  IT.Status=0 and ServiceDeskId is null );

	  set  @ServicesInProgress=(select count(*) from ITSupport  as IT 
	 where IT.RequestType=2 and  IT.Status=0 and ServiceDeskId is not null );

    set  @SupportClose=(select count(*) from ITSupport  as IT 
	 where IT.RequestType=1 and IT.Status=1 );

	  set  @SupportInprogress= ( select count(*) from ITSupport  as IT 
	 where IT.RequestType=1 and IT.Status=0  and ServiceDeskId is not null); 

    set  @SupportNew= ( select count(*) from ITSupport  as IT 
	 where IT.RequestType=1 and IT.Status=0  and ServiceDeskId is null); 

    set  @ComponentsClose= ( select count(*) from ITSupport  as IT 
	 where IT.RequestType=3 and IT.Status=1 );
	 
	  set  @ComponentsInprogress=( select count(*) from ITSupport  as IT 
	 where IT.RequestType=3 and IT.Status=0  and ServiceDeskId is not null);

	 set  @ComponentsNew=( select count(*) from ITSupport  as IT 
	 where IT.RequestType=3 and IT.Status=0  and ServiceDeskId is null);

	  set  @MyClosedRequest=( select count(*) from ITSupport  as IT 
	 where IT.Status=1 and (IT.CreatedBy = @P_UserID or IT.RequestorName=@P_UserID));

	   set  @MyOwnRequest=( select count(*) from ITSupport  as IT 
	 where  IT.Status=0 and (IT.CreatedBy = @P_UserID or IT.RequestorName=@P_UserID));

--	end
    select @ServicesNew as ServicesNew,@ServicesInProgress as ServicesInProgress,@ServicesClose as ServicesClose,@SupportNew  as SupportNew,
	@SupportInprogress as SupportInprogress,@SupportClose as SupportClose,@ComponentsNew as ComponentsNew,@ComponentsInprogress as ComponentsInprogress
	,@ComponentsClose as ComponentsClose,@MyClosedRequest as MyClosedRequest,@MyOwnRequest as MyOwnRequest

END
GO
/****** Object:  StoredProcedure [dbo].[LegalDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[LegalDashboardCount] ******/
CREATE PROCEDURE [dbo].[LegalDashboardCount]--   [LegalDashboardCount] 12	
	@P_UserID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	 declare @LegalManagers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  declare @LegalUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @LegalManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 16 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @LegalUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 16 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	  	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),DelagateToEmail nvarchar(max))

	
	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status],[DelegateToEmail]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Legal' group by ReferenceNumber) 
	
	declare @New int=0,@Closed int=0,@NeedMoreInfo int =0, @MyOwnRequest int= 0, @MyPendingRequest int =0,@InProgressRequest int =0
	,@MyProcessedRequest int =0;

	set @New=(SELECT   count(*)
			from @RequestList where [ReferenceNumber] in( select m.[ReferenceNumber] from  [dbo].[Legal] m join @RequestList as r on m.ReferenceNumber=r.ReferenceNumber   and  m.[DeleteFlag] !=1
  and 
	((((@P_UserID in (select UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=16 )  and  ((r.Status=102) or (r.Status=103 and WorkflowProcess='ReopenWorkflow'))))

--or
--	((@P_UserID in (select  UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=16 )  and  r.Status = 103 and( r.WorkflowProcess != 'AssignWorkflow' 
--	and  r.WorkflowProcess != 'AssignToMeWorkflow')))
--  or
--  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail)  and r.Status = 103 
 -- AND( r.WorkflowProcess='AssignWorkflow' or  r.WorkflowProcess = 'AssignToMeWorkflow'))
  )
   or(@P_UserID = m.CreatedBy and r.WorkflowProcess='SubmissionWorkflow'))
  
  ))			
	

	   set @NeedMoreInfo=(
			SELECT   count(*)
			from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  and  m.[DeleteFlag] !=1
						and (((r.WorkflowProcess='ReturnWorkflow' and  @P_UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail) and r.Status!=103) 
						and (r.Status = 104)) or (@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= r.ReferenceNumber and W. WorkflowProcess='ReturnWorkflow') )and (r.Status!=105 and r.Status!=103)))
	

	    set @Closed=(
			SELECT  count( *) from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  and  m.[DeleteFlag] !=1
			and   (((@UserEmail = r.FromEmail or @P_UserID = m.CreatedBy)   and (r.Status = 105
			)) or ((@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= r.ReferenceNumber and W. WorkflowProcess='CloseWorkflow') ))))
		
		set @MyOwnRequest=(
			SELECT  count(*) from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and m.CreatedBy = @P_UserID and r.WorkflowProcess !='ReturnWorkflow')

		set @InProgressRequest=(select count(*)
			from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@P_UserID= m.CreatedBy and r.WorkflowProcess not in ( 'SubmissionWorkflow','ReturnWorkflow','CloseWorkflow'))
		 or  (( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail or [OrgUnitID]=16 )  and r.Status = 103 
   AND   ( r.WorkflowProcess='AssignWorkflow' or  r.WorkflowProcess = 'AssignToMeWorkflow')))
   	))
					--( @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' )and (r.Status!=105)))))

       --	set @MyProcessedRequest=(select count(*)
		--	from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
		--	and @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' )and (r.Status!=105)))

        	set @MyPendingRequest=(SELECT   count(*)
			from [dbo].[Legal] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (( @UserEmail = r.ToEmail or @UserEmail = r.DelagateToEmail)and (r.Status=102 or r.WorkflowProcess = 'ReturnWorkflow')and (r.Status!=105)))

      select @New as New,@NeedMoreInfo as NeedMoreInfo ,@Closed as Closed,@MyOwnRequest as MyOwnRequest, @MyPendingRequest as MyPendingRequest
			,@InProgressRequest AS InProgressRequest;

END
GO
/****** Object:  StoredProcedure [dbo].[LegalReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[LegalReport] ******/ 
CREATE PROCEDURE [dbo].[LegalReport]

	-- Add the parameters for the stored procedure here
    @P_PageNumber int =1,
	@P_PageSize int =100,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_Subject nvarchar(255) = '',
	@P_Label nvarchar(255) = '',
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_AttendedBy nvarchar(255) = '',
	@P_SmartSearch nvarchar(max)= '',
	@P_CreatedBy nvarchar(max)= null,
	@P_ApprovedBy  nvarchar(max)= null,
	@P_Language Nvarchar(max) = 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @UserEmail NVARCHAR(MAX);

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	SELECT  @UserEmail = OfficialMailId from UserProfile where UserProfileId = @P_UserID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		WorkflowProcess nvarchar(max),
		Status int
		);
		
	declare @RequestList table(
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250))

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,WorkflowProcess,Status from [dbo].[Workflow] 


		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status]
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Legal' group by ReferenceNumber)  

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	--	select * from @RequestList
    declare @result table(
	[LegalID] int,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[Subject] [nvarchar](max) NULL,
	[Status] [nvarchar](250) NULL,
	[RequestDate] datetime null,
	[AttendedBy] [nvarchar](250) NULL,
	[CreatedBy] [nvarchar](250) NULL,
	[ApprovedBy] [nvarchar](250) NULL
	);


 Insert into @result
 Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
     from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
     and ((((@P_UserID in (select UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=16 )  and ( r.Status = 103 or r.Status=102)))
     or ((@P_UserID in (select  UserProfileId from [dbo].[UserProfile] where [OrgUnitID]=16 )  and  r.Status = 103 and( r.WorkflowProcess != 'AssignWorkflow' 
	and  r.WorkflowProcess != 'AssignToMeWorkflow')))
    or (( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail or [OrgUnitID]=16 )  and r.Status = 103 
   AND ( r.WorkflowProcess='AssignWorkflow' or  r.WorkflowProcess = 'AssignToMeWorkflow')))
   or  (@P_UserID = L.CreatedBy and r.WorkflowProcess='SubmissionWorkflow')))
 
  Insert into @result
  Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
     from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
       and (((r.WorkflowProcess='ReturnWorkflow' and  @P_UserID = (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail) and r.status!=103) 
	   and (r.Status = 104)) or (@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= r.ReferenceNumber and W. WorkflowProcess='ReturnWorkflow') )
		and (r.Status!=105 and r.status!=103))order by L.[LegalID] desc

  
  Insert into @result
  Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
      from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where  L.[DeleteFlag] !=1
            and  (((@UserEmail = r.FromEmail or @P_UserID = L.CreatedBy) and (r.Status = 105))
			or(@UserEmail in (select W.FromEmail from Workflow as W where W.[ReferenceNumber]= L.ReferenceNumber and W. WorkflowProcess='CloseWorkflow') )) order by L.[LegalID] desc


  Insert into @result
  Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
     from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1
      and ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail )  and r.Status = 104 ) order by L.[LegalID] desc


  Insert into @result
 Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
     from [dbo].[Legal] L join @RequestList r on r.[ReferenceNumber] = L.[ReferenceNumber] where L.[DeleteFlag] !=1 
	 and L.CreatedBy = @P_UserID  and r.WorkflowProcess !='ReturnWorkflow'order by L.[LegalID] desc

Insert into @result
  Select distinct
 L.LegalID,
    L.[ReferenceNumber],
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = L.SourceOU) as SourceOU
   , L.[Subject],

	(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end)  from [dbo].[M_Lookups] where LookupsID = R.status AND Module = 'Legal' AND Category = 'Status') as Status,
    L.CreatedDateTime,
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId= L.[CreatedBy]),
    (select EmployeeName from [dbo].[UserProfile] where UserProfileId=L.createdBy),
	(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = R.ToEmail )
    from [dbo].[Legal] L join @RequestList r   on r.[ReferenceNumber] = L.[ReferenceNumber]  where  L.[DeleteFlag] !=1
	and ((@P_UserID= L.CreatedBy and r.WorkflowProcess not in ( 'SubmissionWorkflow','ReturnWorkflow','CloseWorkflow'))) order by L.[CreatedDateTime] desc

;WITH CTE AS(
   SELECT [ReferenceNumber],
       RN = ROW_NUMBER()OVER(PARTITION BY [ReferenceNumber] ORDER BY [ReferenceNumber])
   FROM @result
)
DELETE FROM CTE WHERE RN > 1


if(@P_SourceOU != '')
	begin
	set @P_SourceOU = (select case when @P_Language= 'EN' then DepartmentName else ArDepartmentName end from M_Department where DepartmentID = @P_SourceOU)
	 --select @P_SourceOU
	 delete from @result where SourceOU not like '%'+@P_SourceOU+'%'
	 end

	 if(@P_Subject != '')
	 delete from @result where Subject not like '%'+@P_Subject+'%' or Subject  is null 

	 if(@P_AttendedBy !='')
	 begin
		delete from @result where AttendedBy !=  @P_AttendedBy
	 end

	  if(@P_Label != '')
	delete from @Result where LegalID not in (select  LegalID from @Result as a where(select count(*) from  [dbo].[LegalKeywords] as L 
	where L.[Keywords]  like '%'+@P_Label+'%'  and L.[LegalID] = a.LegalID and  [DeleteFlag] != 1)>0)

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status != '' )
	 begin
		delete from @result where Status != @P_Status

     end

	

	 if( @P_SmartSearch !='')
	 begin
		select [LegalID],[ReferenceNumber],[SourceOU],[Subject],[Status],[RequestDate],[AttendedBy],
				[CreatedBy],[ApprovedBy] from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%') or
		(Subject  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(AttendedBy like '%'+@P_SmartSearch+'%'))) as m
	 end
	 
	 if( @P_SmartSearch ='')
	 begin
		select  [LegalID],[ReferenceNumber],[SourceOU],[Subject],[Status],[RequestDate],[AttendedBy],
				[CreatedBy],[ApprovedBy] from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno,
		 * from @result) as m 
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[MaintananceDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE  PROCEDURE [dbo].[MaintananceDashboardCount] -- [MaintananceDashboardCount] 18

	@P_UserID int =0


AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  
	declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	 declare @MaintenanceManagers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  declare @MaintenanceUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET HR managers
	  insert into @MaintenanceManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 12 and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET HR users
	  insert into @MaintenanceUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 12 and ([IsOrgHead] is null or [IsOrgHead] =0)
	  --select * from @HRUsers

	  	declare @RequestList table(
	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(max)
	)

	
	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status],DelegateToEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Maintenance' group by ReferenceNumber) 
	
	declare @New int=0,@Closed int=0,@NeedMoreInfo int =0, @MyOwnRequest int= 0, @MyPendingRequest int =0,@InProgressRequest int =0
	,@MyProcessedRequest int =0;




	set @New=(SELECT   count(*)
				from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (((r.Status = 53 and @UserEmail = r.ToEmail)or(( @UserEmail = r.ToEmail
	       or @UserEmail = r.DelegateTOEmail)and r.Status=53)) or (@P_UserID = m.CreatedBy and r.WorkflowProcess='SubmissionWorkflow')
		   or (r.Status =55 and m.IsMaintenanceHeadApproved =1  and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12))
		   or (r.Status =55 and m.IsMaintenanceHeadApproved is null  and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12 and IsOrgHead=1))))
			
			
	

	set @NeedMoreInfo=(select count(*)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((r.WorkflowProcess='ReturnWorkflow' and @UserEmail = r.ToEmail and r.Status = 54) or
				(@UserEmail in(select FromEmail from Workflow as W where W.WorkflowProcess='ReturnWorkflow' and W.ReferenceNumber=r.ReferenceNumber ))))
	

	set @Closed=(
			SELECT  count(*) from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and  (@UserEmail = r.FromEmail or @P_UserID = m.CreatedBy)  and( r.Status = 57 or r.Status = 56) )

	set @MyPendingRequest=(SELECT   count(*)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (( @UserEmail = r.ToEmail or @UserEmail = r.DelegateTOEmail)and (r.Status=53 or r.WorkflowProcess = 'ReturnWorkflow')))
			
	set @MyOwnRequest=(
			SELECT  count(*) from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and m.CreatedBy = @P_UserID and r.WorkflowProcess !='ReturnWorkflow')

	set @InProgressRequest=(select count(*)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@P_UserID= m.CreatedBy and r.WorkflowProcess not in ('SubmissionWorkflow','ReturnWorkflow')))) --or
			--( @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' )))))

	set @MyProcessedRequest=(select count(*)
			from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' )))

	select @New as New,@NeedMoreInfo as NeedMoreInfo ,@Closed as Closed,@MyOwnRequest as MyOwnRequest, @MyPendingRequest as MyPendingRequest
			,@MyProcessedRequest AS MyProcessedRequest,@InProgressRequest AS InProgressRequest;
	

END


GO
/****** Object:  StoredProcedure [dbo].[MaintenanceReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[MaintenanceReport]   ******/
CREATE PROCEDURE [dbo].[MaintenanceReport]

	-- Add the parameters for the stored procedure here
    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 4,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_Subject nvarchar(255) = '',
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_AttendedBy nvarchar(255) = '',
	@P_Priority nvarchar(255) = '',
	@P_SmartSearch nvarchar(max)= null,
	@P_Language nvarchar(max) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0, @UserEmail nvarchar(max);

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	select @UserEmail = OfficialMailId from UserProfile where UserProfileId= @P_UserID
	set @P_Status = (select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where LookupsID = @P_Status)
	set @P_SourceOU = (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID = @P_SourceOU)

declare @RequestList table(
	ReferenceNumber nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromEmail nvarchar(250),
	ToEmail nvarchar(250),
	Status nvarchar(250),
	DelegateTOEmail nvarchar(250))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromEmail],[ToEmail],[Status],DelegateTOEmail
	from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
	from [dbo].[Workflow] where Service = 'Maintenance' group by ReferenceNumber)

    declare @result table(
	[MaintenanceID] int,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[Subject] [nvarchar](max) NULL,
	[Status] [nvarchar](250) NULL,
	[RequestedDateTime] datetime null,
	[AttendedBy] [nvarchar](250) NULL,
	[Priority] [nvarchar](250) NULL,
	Details nvarchar(max));

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and (((r.Status = 53 and @UserEmail = r.ToEmail)or(( @UserEmail = r.ToEmail
	       or @UserEmail = r.DelegateTOEmail)and r.Status=53)) or (@P_UserID = m.CreatedBy and r.WorkflowProcess='SubmissionWorkflow')
		   or (r.Status =55 and m.IsMaintenanceHeadApproved =1 and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12))
		   or (r.Status =55 and m.IsMaintenanceHeadApproved is null and @P_UserID in (select UserProfileId from UserProfile where OrgUnitID= 12 and IsOrgHead = 1))
		   ) order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0) 
			 else(select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((r.WorkflowProcess='ReturnWorkflow' and @UserEmail = r.ToEmail and r.Status = 54) or
			(@UserEmail in(select FromEmail from Workflow as W where W.WorkflowProcess='ReturnWorkflow' and W.ReferenceNumber=r.ReferenceNumber )))
			order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and  ((@UserEmail = r.FromEmail or @P_UserID = m.CreatedBy)  and( r.Status = 57 or r.Status=56))
			order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((( @UserEmail = r.ToEmail or @UserEmail = r.DelegateTOEmail)and (r.Status=53 or r.Status=54))
			)
			order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and m.CreatedBy = @P_UserID and r.WorkflowProcess!='ReturnWorkflow'
			order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and @UserEmail in (select W.FromEmail from Workflow as W where m.ReferenceNumber = w.ReferenceNumber and W.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow' ))
			order by m.[CreatedDateTime] desc

			insert into @Result
			SELECT  m.MaintenanceID, m.[ReferenceNumber],
			( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where [DepartmentID] = m.SourceOU) as SourceOU ,
			m.[Subject],
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = r.Status) as Status,
			m.[CreatedDateTime],
			(select [EmployeeName] from [dbo].[UserProfile] where [UserProfileId] = m.[CreatedBy]) as Creator,
			case when (m.[Priority] = 1) then (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=0)  
			else (select (case when @P_Language ='EN' then DisplayName else ArDisplayname end) from M_lookups where Category='priority' and Module=2)  end
			,Details from [dbo].[Maintenance] m join @RequestList r   on r.[ReferenceNumber] = m.[ReferenceNumber]  where  m.[DeleteFlag] !=1
			and ((@P_UserID= m.CreatedBy and r.WorkflowProcess not in ('SubmissionWorkflow' ,'ReturnWorkflow')))
			order by m.[CreatedDateTime] desc

			;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

	if(@P_SourceOU != '')
	 delete from @result where SourceOU not like '%'+@P_SourceOU+'%'

	 if(@P_Subject != '')
	 delete from @result where Subject not like '%'+@P_Subject+'%'

	 if(@P_AttendedBy !='')
	 begin
		delete from @result where AttendedBy !=  @P_AttendedBy
	 end

	 if(@P_Priority != '')
	 delete from @result where Priority not like '%'+@P_Priority+'%'

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestedDateTime as date) < cast(@P_RequestDateFrom as date)

	 if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestedDateTime as date) > cast(@P_RequestDateTo as date)

	 if(@P_Status != '' )
	 begin
		delete from @result where Status not like '%'+@P_Status+'%'
     end

	 if(@P_Method = 0)
	 begin
		select * from @result --where id between @StartNo and @EndNo
	 end

	 if(@P_Method = 1)
	 begin
		select count(*) from @result
	 end

	 if(@P_Method = 2 and  @P_SmartSearch is not null)
	 begin
		select [MaintenanceID],[ReferenceNumber] ,[SourceOU] ,[Subject],
		[Status],[RequestedDateTime],[AttendedBy],[Priority] from @result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or 
		(SourceOU  like '%'+@P_SmartSearch+'%') or  (Subject  like '%'+@P_SmartSearch+'%')  
		or ((SELECT  CONVERT(nvarchar(10), cast([RequestedDateTime] as date), 103))  like '%'+@P_SmartSearch+'%') or
		(Status  like '%'+@P_SmartSearch+'%') or (Details  like '%'+@P_SmartSearch+'%') or
		(AttendedBy  like '%'+@P_SmartSearch+'%') or (Priority  like '%'+@P_SmartSearch+'%')) 
	 end

	 if(@P_Method = 2 and  @P_SmartSearch is  null)
	 begin
		select [MaintenanceID],[ReferenceNumber] ,[SourceOU] ,[Subject],[Status],[RequestedDateTime],[AttendedBy],[Priority] from @result
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[MediaDashboardCount]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[MediaDashboardCount]  
	-- Add the parameters for the stored procedure here
	
	@P_UserID int = 1
	

	/* RequestType: Photo = 1, Design = 2, PressRelease = 3, Campaign = 4, Photographer = 5, DiwanIdentity = 6	*/
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @UserName nvarchar(250),@P_UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	declare @Photo int =0, @Design int =0, @PressRelease int =0, @Campaign int=0, @Photographer int=0,@DiwanIdentity int=0, 
	@Pending int=0, @MyRequest int =0, @MYProcessed int =0;

	  declare @MediaManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @MediaUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET Media managers
	  insert into @MediaManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where ([OrgUnitID] = 4 or OrgUnitID = 17) and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET Media users
	  insert into @MediaUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where ([OrgUnitID] = 4 or OrgUnitID =17) and ([IsOrgHead] is null or [IsOrgHead] =0)

	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max)
	)

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	ReferenceNumber nvarchar(max),
	SourceOU nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] group by ReferenceNumber) 

			SELECT  @Photo = count(*)
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
				
			 and	((w.Status =88 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=92) or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT  @Design = count(*)
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
						 and	((w.Status =64 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=68)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
			SELECT @PressRelease = count(*)
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	((w.Status =76 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=80)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT @Campaign = count(*)
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
	 and	((w.Status =82 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow'))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=86)
			   or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))

			SELECT @Photographer = count(*)
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
		 and	((w.Status =70 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=74)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
			SELECT  @DiwanIdentity = count(*)
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
		 and	((w.Status =96 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=100)or(w.WorkflowProcess='ReturnWorkflow' and @P_UserEmail=w.ToEmail))
	
	set @Pending = @Photo+@Design+@PressRelease+@Campaign+@Photographer+@DiwanIdentity

	set @MyRequest = ((SELECT count(*)
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow')
			+
			(SELECT  count(*)
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow')
			+
			(SELECT  count(*)
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow')
			+
			(SELECT count(*)
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow')
			+
			(SELECT  count(*)
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow')		
			+
			(SELECT count(*)
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 		 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'))


			set @MYProcessed = ((SELECT count(distinct a.ReferenceNumber)
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber] 
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)))
			+
			(SELECT  count( distinct a.ReferenceNumber)
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) )
			+
			(SELECT  count( distinct a.ReferenceNumber)
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) )
			+
			(SELECT count( distinct a.ReferenceNumber)
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) )
			+
			(SELECT  count( distinct a.ReferenceNumber)
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) )
			+
			(SELECT count( distinct a.ReferenceNumber)
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) )

	
	select @Photo as RequestforPhoto, @Design as RequestforDesign, @PressRelease as RequestforPressRelease, @Campaign as RequestforCampaign, 
	@Photographer as RequestforPhotographer, @DiwanIdentity as RequesttouseDiwanIdentity, @Pending as MyPendingRequest, @MyRequest as MyOwnRequest ,@MYProcessed as MyProcessedRequest

END




/****** Object:  StoredProcedure [dbo].[MediaDashboardList]    Script Date: 30-09-2019 12.24.44 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[MediaDashboardList]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[MediaDashboardList]  ******/
CREATE PROCEDURE [dbo].[MediaDashboardList] --[dbo].[MediaDashboardList] 1,100,0,16
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,
	@P_RequestType nvarchar(250) = null,
	@P_UserID int = 0,
	@P_Method int = 0,
	@P_Username nvarchar(250) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_Creator nvarchar(250) = null,
	@P_Status nvarchar(250) = null,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Type nvarchar(max)=null,
	@P_Language nvarchar(10) = 'EN'

	/* RequestType: Photo = 1, Design = 2, PressRelease = 3, Campaign = 4, Photographer = 5, DiwanIdentity = 6	*/
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	declare @P_IsOrHead int =0, @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null, @P_OrgID int =0;

	select @P_OrgID = OrgUnitID,@P_IsOrHead = IsOrgHead  from UserProfile as U where UserProfileID=@P_UserID

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	  declare @MediaManagers table(
	  ManagerUserID int,
	  UserEmail nvarchar(250))

	  declare @MediaUsers table(
	  UserID int,
	  UserEmail nvarchar(250))

	  --GET Media managers
	  insert into @MediaManagers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where ([OrgUnitID] = 4 or OrgUnitID =17) and [IsOrgHead] = 1
	  --select * from @HRManagers
	  --GET Media users
	  insert into @MediaUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where ([OrgUnitID] = 4 or OrgUnitID =17) and ([IsOrgHead] is null or [IsOrgHead] =0)

	declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(max))

	declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	RefID nvarchar(max),
	Source nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	MediaDate datetime,
	EventName nvarchar(max),
	Languages nvarchar(max),
	Location nvarchar(max),
	CreatorID nvarchar(max)
	)

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] group by ReferenceNumber) 


	if(@P_RequestType = 1 or @P_RequestType = 0) --Photo
	begin
		
			insert into @Result
			SELECT  a.PhotoID,a.[ReferenceNumber],
			   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber 
					and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
	 ))
	  as ApproverName,

	  (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName, null,a.Location,a.CreatedBy
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

			 and	((w.Status =88 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=92) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

			   or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )

					
	end


								--select * from @Result
 if(@P_RequestType = 2 or @P_RequestType = 0) --Design
	begin
		
			insert into @Result
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
	 ))
	  as ApproverName,

	   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
	 when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160))
	end	) as Languages,null,a.CreatedBy
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	(((w.Status =64 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=68) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

			    or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )
	end


	
	 if(@P_RequestType = 3 or @P_RequestType = 0) --PressRelease
	begin
		
			insert into @Result
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
	 ))
	  as ApproverName,

	   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, null,a.EventName,null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
				 and	((w.Status =76 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=80) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

			    or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )
	end




								

	 if(@P_RequestType = 4 or @P_RequestType = 0) --Campaign
	begin
		
			insert into @Result
			SELECT  a.CampaignID,a.[ReferenceNumber],
		   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 4) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location
			,a.CreatedBy from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	((w.Status =82 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow'))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=86) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

			   or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )
	end

	

							
 if(@P_RequestType = 5  or @P_RequestType = 0) --Photographer
begin
		
			insert into @Result
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
			 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where  Category='RequestType' and Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName,null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	((w.Status =70 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=74) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

			   or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )
	end



	 if(@P_RequestType = 6  or @P_RequestType = 0) --DiwanIdentity
begin
		
			insert into @Result
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where  Category='RequestType' and Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.Date,null,null,null,a.CreatedBy
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			 and	((w.Status =96 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
					or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
					 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))

               or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=100) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)

		  or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
					((@P_OrgID =4 and @P_IsOrHead = 1) or @P_OrgID = 17)  ) )
	end


	if(@P_RequestType = 7) --MyRequest
begin

		
			insert into @Result
			SELECT  a.PhotoID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName, null,a.Location,a.CreatedBy
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			



		
			insert into @Result
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
	 when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160))
	end	) as Languages,null,a.CreatedBy
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			




		
			insert into @Result
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, null,a.EventName, null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			


			insert into @Result
			SELECT  a.CampaignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 4)as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
	 ))
	  as ApproverName,

	   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location
			,a.CreatedBy from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			

		
			insert into @Result
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName,null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			
			


		
			insert into @Result
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.Date,null,null,null,a.CreatedBy
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 		 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
	end

	if(@P_RequestType = 8) --MyProcessedCard
	begin
		insert into @Result --photo
			SELECT  a.PhotoID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName, null,a.Location,a.CreatedBy
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]  
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

insert into @Result   --Design
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
	 when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160))
	end	) as Languages,null,a.CreatedBy
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber] 
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

insert into @Result  --Pressrelease
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, null,a.EventName, null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber] 
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

insert into @Result --Campaign request
SELECT  a.CampaignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceName) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 4)as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location
			,a.CreatedBy from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

insert into @Result --PhotoGrapher
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
	 ))
	  as ApproverName,

	     (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.EventDate,a.EventName,null,a.Location,a.CreatedBy
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber] 
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

insert into @Result --Diwan identity
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
					when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
					from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
				order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from @RequestList
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
	 ))
	  as ApproverName,

	    (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
, a.Date,null,null,null,a.CreatedBy
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]
			join (select P.* from Workflow as P where  @P_UserEmail = P.FromEmail and P.WorkflowProcess 
			not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')) as W1
			on W1.ReferenceNumber = w.ReferenceNumber  where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 

			;WITH CTE AS 
		(
		SELECT RefID, ROW_NUMBER() OVER 
		(
		    PARTITION BY RefID ORDER BY RefID desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

	end

		if((@P_RequestType = 7 or @P_RequestType = 8 or @P_RequestType =0 ) and @P_Type is not null and @P_Type != '')
	begin
		delete from @Result where RequestType <> @P_Type
	end
	
	if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)

	if(@P_Status !='')
	 begin
		delete from @result where Status !=  @P_Status
	 end

	 if(@P_SourceOU !='')
	 begin
		delete from @result where Source !=  @P_SourceOU
	 end

	 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select *,m.Assignee as  AssignedTo  from (select row_number() over (Order By RefID desc) as slno, * from @result as a where 
		((RefID  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Source  like '%'+@P_SmartSearch+'%') or(RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (ApproverName like '%'+@P_SmartSearch+'%' ) or (ApproverDepartment like '%'+@P_SmartSearch+'%' )
			or ((SELECT  CONVERT(nvarchar(10), cast(MediaDate as date), 103)) like '%'+@P_SmartSearch+'%' )or (SourceName like '%'+@P_SmartSearch+'%' ) or( (select m.PhotoDescription from MediaPhotoRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.Title from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.DiwansRole from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.GeneralObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.InitiativeProjectActivity from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.MainObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherParties from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.TypeOfDesignRequired from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.CampaignPeriod from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.DiwansRole from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.GeneralInformation from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.InitiativeProjectActivity from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainObjective from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or ((select count(K.MediaChannels) from MediaNewCampaignRequest as K where K.ReferenceNumber=a.RefID and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then MediaChannelName else ArMediaChannelName end)from M_MediaChannel as c where c.MediaChannelID=k.MediaChannels) like '%'+@P_SmartSearch+'%')>0)
			or( (select m.PurposeofUse from DiwanIdentity as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.Partners from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=161))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=162))
			end) from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or(EventName  like '%'+@P_SmartSearch+'%') 
			or(Languages  like '%'+@P_SmartSearch+'%')or(Location  like '%'+@P_SmartSearch+'%')
			or ((select count(K.TypeOfDesignRequired) from MediaDesignRequest as K where K.ReferenceNumber=a.RefID and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then DesignTypeName else ArDesignTypeName end)from M_DesignType as c where c.DesignTypeID=k.TypeOfDesignRequired) like '%'+@P_SmartSearch+'%')>0)
	or((select m.AttendedBy from MediaNewPressReleaseRequest as m where m.PressReleaseID=a.RequestID) like '%'+@P_SmartSearch+'%')or((select m.Subject from MediaNewPressReleaseRequest as m where m.PressReleaseID=a.RequestID) like '%'+@P_SmartSearch+'%')
	or( (select m.Notes from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherEntities from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.RequestDetails from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainIdea from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.StrategicGoals from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')		
	or( (select m.StrategicObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.TargetGroup from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			
	)) as m
		 where m.slno between @StartNo and @EndNo 
	 end
	
	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
		((RefID  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or (Source  like '%'+@P_SmartSearch+'%') or(RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%') or (ApproverName like '%'+@P_SmartSearch+'%' ) or (ApproverDepartment like '%'+@P_SmartSearch+'%' )
			or ((SELECT  CONVERT(nvarchar(10), cast(MediaDate as date), 103)) like '%'+@P_SmartSearch+'%' )or (SourceName like '%'+@P_SmartSearch+'%' ) or( (select m.PhotoDescription from MediaPhotoRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.Title from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.DiwansRole from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.GeneralObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.InitiativeProjectActivity from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.MainObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherParties from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.TypeOfDesignRequired from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.CampaignPeriod from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.DiwansRole from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.GeneralInformation from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.InitiativeProjectActivity from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainObjective from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or ((select count(K.MediaChannels) from MediaNewCampaignRequest as K where K.ReferenceNumber=a.RefID and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then MediaChannelName else ArMediaChannelName end)from M_MediaChannel as c where c.MediaChannelID=k.MediaChannels) like '%'+@P_SmartSearch+'%')>0)
			or( (select m.PurposeofUse from DiwanIdentity as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.Partners from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=161))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=162))
			end) from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
			or(EventName  like '%'+@P_SmartSearch+'%') 
			or(Languages  like '%'+@P_SmartSearch+'%')or(Location  like '%'+@P_SmartSearch+'%')
			or ((select count(K.TypeOfDesignRequired) from MediaDesignRequest as K where K.ReferenceNumber=a.RefID and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then DesignTypeName else ArDesignTypeName end)from M_DesignType as c where c.DesignTypeID=k.TypeOfDesignRequired) like '%'+@P_SmartSearch+'%')>0)
	or((select m.AttendedBy from MediaNewPressReleaseRequest as m where m.PressReleaseID=a.RequestID) like '%'+@P_SmartSearch+'%')or((select m.Subject from MediaNewPressReleaseRequest as m where m.PressReleaseID=a.RequestID) like '%'+@P_SmartSearch+'%')
	or( (select m.Notes from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherEntities from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.RequestDetails from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainIdea from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.StrategicGoals from MediaNewCampaignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')		
	or( (select m.StrategicObjective from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')or( (select m.TargetGroup from MediaDesignRequest as m where m.ReferenceNumber=a.RefID   ) like  '%'+@P_SmartSearch+'%')
	
 ) 
	 end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	select *,Assignee as  AssignedTo  from ( select row_number() over (Order By RefID desc) as slno, id,RefID,RequestType,Status,Source,RequestDate,RequestID,Assignee,CreatorID from @result) as a where a.slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @result
 

END
GO
/****** Object:  StoredProcedure [dbo].[MediaReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 
/****** Object:  StoredProcedure [dbo].[MediaReport]    ******/
CREATE PROCEDURE [dbo].[MediaReport]
	-- Add the parameters for the stored procedure here
	 @P_PageNumber int =1,
	@P_PageSize int =10,
	@P_Method int =2,
	@P_UserID int = 0,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_SourceName nvarchar(255) = '',
	@P_SmartSearch nvarchar(max)= '',
	@P_RequestType int=0,
	@P_RequestDateFrom datetime = null,
	@P_RequestDateTo datetime = null,
	@P_ReferenceNumber nvarchar(255) = '',
	@P_Language nvarchar(10)= 'EN'

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	/* 
	RequestType: Photo = 1, Design = 2, PressRelease = 3, Campaign = 4, Photographer = 5, DiwanIdentity = 6
	*/
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@P_UserEmail nvarchar(255)= null,@P_OrgID int =0
	select @P_UserEmail=OfficialMailId from UserProfile where UserProfileId=@P_UserID
	select @P_OrgID = OrgUnitID  from UserProfile as U where UserProfileID=@P_UserID

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int
		);

		declare @RequestList table(	
	ReferenceNumber nvarchar(max),
	--id int,
	--Creator nvarchar(max),
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	Status nvarchar(250),
	FromEmail nvarchar(255),
	ToEmail nvarchar(255),
	DelegateTOEmail nvarchar(255))

	insert into @RequestList
	select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail],DelegateToEmail
	from [dbo].[Workflow] where WorkflowID in  (select max(WorkflowID)
	from [dbo].[Workflow] group by ReferenceNumber) and Service in
	 ('MediaPhotoRequest','MediaDesignRequest','MediaDesignRequest' ,'MediaNewCampaignRequest','MediaNewPhotoGrapherRequest',
	'DiwanIdentity')

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status from [dbo].[Workflow]  where 
		Service in  ('MediaPhotoRequest','MediaDesignRequest','MediaDesignRequest' ,'MediaNewCampaignRequest','MediaNewPhotoGrapherRequest',
					'DiwanIdentity')

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1



    declare @result table(
	[RefID] int NULL ,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) Null,
	[SourceName] [nvarchar](250) Null,
	[Status] [nvarchar](250) NULL,
	RequestDate datetime,
	RequestType nvarchar(max),
	MediaDate datetime,
	EventName nvarchar(max),
	Languages nvarchar(max),
	Location nvarchar(max),
	Assignee nvarchar(255),
	Subject nvarchar(Max)

	)

	declare @Result1 table(
	id INT IDENTITY(1, 1) primary key,
	RequestID int,
	RefID nvarchar(max),
	Source nvarchar(max),
	Creator nvarchar(max),
	RequestType nvarchar(max),
	Status nvarchar(max),
	RequestDate datetime,
	WorkflowProcess nvarchar(max),
	FromName nvarchar(250),
	ToName nvarchar(250),
	ToEmail nvarchar(250),
	StatusCode int,
	Assignee nvarchar(255),
	SourceName nvarchar(max),
	ApproverName nvarchar(max),
	ApproverDepartment nvarchar(max),
	MediaDate datetime,
	EventName nvarchar(max),
	Languages nvarchar(max),
	Location nvarchar(max),
	Subject nvarchar(max)
	)

		-- Media User LIst		
			insert into @Result1
			SELECT  a.PhotoID,a.[ReferenceNumber],
			   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as [SourceName],
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber 
			and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
				where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
			))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.EventDate,a.EventName, null,a.Location,a.PhotoDescription
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and((w.Status =88 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
			and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))
            or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=92) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
			or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and @P_OrgID=17) )
		
			insert into @Result1
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
		    ))as ApproverName,
			 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
			 when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160)) end) as Languages,null,a.Title
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and	(((w.Status =64 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
			 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))
             or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=68) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
			 or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and @P_OrgID=17) )
	


	
	
		
			insert into @Result1
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
			 )) as ApproverName,
			 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, null,a.EventName,null,a.Location,a.EventName
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and	((w.Status =76 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
			 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))
             or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=80) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
			 or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and @P_OrgID=17) )
	
			insert into @Result1
			SELECT  a.CampaignID,a.[ReferenceNumber],
		   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= 4) as RequestType,
			(select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
			 ))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location,a.MainIdea
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and((w.Status =82 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow'))
			 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17)))
             or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=86) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
			 or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and @P_OrgID=17) )

		
			insert into @Result1
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
			 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where  Category='RequestType' and Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
			 )) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.EventDate,a.EventName,null,a.Location,a.EventName
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			 and((w.Status =70 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
			and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))
            or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=74) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
		   or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and
			@P_OrgID=17) )

		
			insert into @Result1
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where  Category='RequestType' and Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
		    where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
			))  as ApproverName,
		   (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.Date,null,null,null,a.PurposeofUse
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			 and((w.Status =96 and ((w.WorkflowProcess != 'AssignToMeWorkflow' and  w.WorkflowProcess !='AssignWorkflow') 
			or(w.WorkflowProcess = 'AssignToMeWorkflow' or  w.WorkflowProcess ='AssignWorkflow')))
			 and @P_UserID in (select UserProfileId from [dbo].[UserProfile] where ([OrgUnitID] =  17))
             or (( @P_UserEmail = w.ToEmail or   @P_UserEmail = W.DelegateTOEmail) and w.Status=100) or (w.WorkflowProcess='ReturnWorkflow' and w.ToEmail=@P_UserEmail)
			 or ((@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))and @P_OrgID=17) )


			--My own request 
		
			insert into @Result1
			SELECT  a.PhotoID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
		     ))as ApproverName,
			 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.EventDate,a.EventName, null,a.Location,a.PhotoDescription
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			



		
			insert into @Result1
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
			 )) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
			 when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160))
			end	) as Languages,null,a.Title
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'			
		
			insert into @Result1
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
			 ))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, null,a.EventName, null,a.Location,a.EventName
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'		

			insert into @Result1
			SELECT  a.CampaignID,a.[ReferenceNumber],
		  ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceName) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 4)as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
			 ))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location,a.MainIdea
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			

		
			insert into @Result1
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
			)) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.EventDate,a.EventName,null,a.Location,a.EventName
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'
			
			insert into @Result1
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			(select top 1 ToEmail from @RequestList
			where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
			))as ApproverName,
	       (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.Date,null,null,null,a.PurposeofUse
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 		 
			and a.CreatedBy = @P_UserID and w.WorkflowProcess!='ReturnWorkflow'


			--My Processed Request 
			insert into @Result1 --photo
			SELECT  a.PhotoID,a.[ReferenceNumber],
			(select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 1) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 92)) 
			 )) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			,a.EventDate,a.EventName, null,a.Location,a.PhotoDescription
			from [dbo].[MediaPhotoRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			insert into @Result1  --Design
			SELECT  a.DesignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 2) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 68)) 
			 ))as ApproverName,
			 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.DeliverableDate, null,(select case when (a.Languages=0)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=159))
			when (a.Languages=1)then ((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=160))
			end	) as Languages,null,a.Title
			from [dbo].[MediaDesignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			insert into @Result1  --Pressrelease
			SELECT  a.PressReleaseID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 3) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 80)) 
			 ))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, null,a.EventName, null,a.Location,a.EventName
			from [dbo].[MediaNewPressReleaseRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			insert into @Result1 --Campaign request
			SELECT  a.CampaignID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceName) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 4)as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
				(select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 86)) 
			 ))as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.CampaignStartDate, null,(select (case when @P_Language = 'AR' then ArLanguageName else LanguageName end)from M_Language as c where c.LanguageID=a.Languages )as Languages,a.Location,a.MainIdea
			from [dbo].[MediaNewCampaignRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow')))

			insert into @Result1 --PhotoGrapher
			SELECT  a.PhotoGrapherID,a.[ReferenceNumber],
		 ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 5) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			 (select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 74)) 
			))as ApproverName,
	       (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.EventDate,a.EventName,null,a.Location,a.EventName
			from [dbo].[MediaNewPhotographerRequest] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is  null or a.[DeleteFlag] =0)
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
					and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))) 

			insert into @Result1 --Diwan identity
			SELECT  a.DiwanIdentityID,a.[ReferenceNumber],
		    (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department  where DepartmentID = a.SourceOU) as SourceOU ,
			(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = a.[CreatedBy]) as Creator,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='RequestType' and  Module= 6) as RequestType,
			(select (case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.Status) as Status,
			a.[CreatedDateTime] as RequestDate,
			w.WorkflowProcess as WorkflowProcess,
			w.FromName as FromName,
			w.ToName as ToName,
			w.ToEmail,
			w.Status as StatusCode,
			(select (case when c.WorkflowProcess='AssignWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.ToEmail) 
			when c.WorkflowProcess='AssignToMeWorkflow' then (select EmployeeName from UserProfile where OfficialMailId = c.FromEmail)  else null end) 
			from (select top 1 FromEmail,ToEmail,WorkflowProcess from Workflow as  b where b.ReferenceNumber=a.ReferenceNumber and b.WorkflowProcess in('AssignWorkflow','AssignToMeWorkflow') 
			order by b.WorkflowID desc) as c),
			(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,
			(select EmployeeName from [dbo].[UserProfile] where OfficialMailId = (
			 (select top 1 ToEmail from @RequestList
			 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 100)) 
			 )) as ApproverName,
			(select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.ApproverDepartmentID) as ApproverDepartment
			, a.Date,null,null,null,a.PurposeofUse
			from [dbo].[DiwanIdentity] a join @RequestList w on a.[ReferenceNumber] = w.[ReferenceNumber]   where (a.[DeleteFlag] is not null or a.[DeleteFlag] !=0) 
			and (@P_UserEmail in (select P.FromEmail from Workflow as P where P.ReferenceNumber = w.ReferenceNumber 
			and P.WorkflowProcess not in ('SubmissionWorkflow','AssignToMeWorkflow','AssignWorkflow'))) 

			insert into @result
			select RequestID,RefID,Source,Creator,Status,RequestDate,RequestType,MediaDate,EventName,Languages,Location,Assignee,Subject from @Result1



 ;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY ReferenceNumber desc
		) RowNumber
		FROM  @result
		)
		DELETE FROM CTE WHERE RowNumber > 1

	if(@P_RequestType is not null)
	begin
		delete from @result where RequestType != (select (case when @P_Language = 'AR' then ArDisplayName else DisplayName end) from M_Lookups where Category='RequestType' and  Module= @P_RequestType)  
	end

	 if(@P_ReferenceNumber != '')
	 delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'

	if(@P_SourceOU != '')
	 delete from @result where SourceOU not like '%'+@P_SourceOU+'%' or SourceOU is null

	 if(@P_SourceName!= '')
	 delete from @result where SourceName not like '%'+@P_SourceName+'%' or SourceName is null

	 if(@P_Status != '' )
	 begin
		delete from @result where Status != @P_Status

     end

	 if(@P_RequestDateFrom is not null)
	 delete from @result where cast( RequestDate as date) < cast(@P_RequestDateFrom as date)

	if(@P_RequestDateTo is not null)
	 delete from @result where cast(RequestDate as date) > cast(@P_RequestDateTo as date)


	
	  if(@P_SmartSearch is not null)
	 begin
		select RefID,ReferenceNumber,SourceOU,SourceName,Status,RequestDate ,RequestType ,MediaDate ,
EventName ,Languages ,Location ,Assignee as  AssignedTo  ,Subject  from (select row_number() over (Order By RefID desc) as slno, * from @result as a where 
		((RefID  like '%'+@P_SmartSearch+'%') 
		or (Status  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%') or(RequestType like '%'+@P_SmartSearch+'%')
			or	((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')  
			or ((SELECT  CONVERT(nvarchar(10), cast(MediaDate as date), 103)) like '%'+@P_SmartSearch+'%' )or (SourceName like '%'+@P_SmartSearch+'%' ) or( (select m.PhotoDescription from MediaPhotoRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.Title from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.DiwansRole from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.GeneralObjective from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.InitiativeProjectActivity from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.MainObjective from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherParties from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.TypeOfDesignRequired from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.CampaignPeriod from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.DiwansRole from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.GeneralInformation from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select m.InitiativeProjectActivity from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainObjective from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or ((select count(K.MediaChannels) from MediaNewCampaignRequest as K where K.ReferenceNumber=a.ReferenceNumber and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then MediaChannelName else ArMediaChannelName end)from M_MediaChannel as c where c.MediaChannelID=k.MediaChannels) like '%'+@P_SmartSearch+'%')>0)
			or( (select m.PurposeofUse from DiwanIdentity as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.Partners from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or( (select (case when m.Type=0 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=161))
			when m.Type=1 then((select (case when @P_Language='EN' then DisplayName else ArDisplayName end) from M_Lookups where lookupsID=162))
			end) from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			or(EventName  like '%'+@P_SmartSearch+'%') 
			or(Languages  like '%'+@P_SmartSearch+'%')or(Location  like '%'+@P_SmartSearch+'%')
			or ((select count(K.TypeOfDesignRequired) from MediaDesignRequest as K where K.ReferenceNumber=a.ReferenceNumber and (K.DeleteFlag=0 or 
		K.DeleteFlag is null) and (SELECT  (case when @P_Language = 'EN' then DesignTypeName else ArDesignTypeName end)from M_DesignType as c where c.DesignTypeID=k.TypeOfDesignRequired) like '%'+@P_SmartSearch+'%')>0)
	or((select m.AttendedBy from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')or((select m.Subject from MediaNewPressReleaseRequest as m where m.ReferenceNumber=a.ReferenceNumber) like '%'+@P_SmartSearch+'%')
	or( (select m.Notes from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.OtherEntities from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.RequestDetails from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.MainIdea from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
	or( (select m.StrategicGoals from MediaNewCampaignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')		
	or( (select m.StrategicObjective from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')or( (select m.TargetGroup from MediaDesignRequest as m where m.ReferenceNumber=a.ReferenceNumber   ) like  '%'+@P_SmartSearch+'%')
			
	)) as m
		
	 end


	 if(@P_SmartSearch is  null)
	 begin
		select * from @result
	 end
END
GO
/****** Object:  StoredProcedure [dbo].[MeetingReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[MeetingReport]   ******/
CREATE PROCEDURE [dbo].[MeetingReport] --HRReport 0,0,2,1
    -- Add the parameters for the stored procedure here
    @P_PageNumber int =0,
    @P_PageSize int =0,
    @P_UserID int =0,
    @P_MeetingID int=0,
    @P_Method int=0,
    @P_ReferenceNumber nvarchar(250)=null,
    @P_Subject nvarchar(250)=null,
    @P_Location nvarchar(250)=null,
    @P_StartDateTime datetime =null,
    @P_EndDateTime datetime =null,
    @P_MeetingType nvarchar(255)=null,
    @P_Invitees nvarchar(255)=null,
    @P_SmartSearch nvarchar(250)=null,
    @P_Language nvarchar(250) =null
AS 
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON;
    -- Insert statements for procedure here
    declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

 

    select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
    select @StartNo =(@RefCout + 1);
    select @EndNo=@RefCout + @P_PageSize;
    declare @result table(
    MeetingID int,
    ReferenceNumber nvarchar(255),
    Subject nvarchar(255),
    Location nvarchar(max),
    MeetingType nvarchar(255),
    Invitees nvarchar(Max),
    UserName nvarchar(255),
    InternalInvitees int,
    ExternalInvitees int,
    startDateTime datetime,
    EndDateTime datetime,    
    OrganizerDepartment nvarchar(Max),
    OrganizerName nvarchar(Max));

 


    insert into @result
    select   c.MeetingID,ReferenceNumber,Subject,Location,(select (case when @P_Language='EN' then MeetingTypeName else
     ArMeetingTypeName end) from M_MeetingType where MeetingTypeID=c.MeetingType) as MeetingType,
    (select(case when @P_Language='EN'then DisplayName else ArDisplayName 
	end ) from M_Lookups where DisplayName=(select(case  when c.IsExternalInvitees='true'and c.IsInternalInvitees='true' then 'Internal and External' when c.IsExternalInvitees ='true' then 'External' when c.IsInternalInvitees='true'
	then 'Internal' end) ) )as Invitees, (select EmployeeName from UserProfile where UserProfileId=c.CreatedBy ) as UserName,C.IsInternalInvitees,C.IsExternalInvitees,C.StartDateTime,C.EndDateTime,
     (select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department where DepartmentID=c.OrganizerDepartmentID) as OrganizerDepartment,
      (select EmployeeName from UserProfile where UserProfileId=c.OrganizerUserID) as OrganizerName
    from [dbo].[Meeting] as c where  DeleteFlag=0   and ((@P_UserID = c.CreatedBy) or @P_UserID in(select UserId from MeetingInternalInvitees where MeetingID=c.MeetingID))
    --select * from @result
    
    if(@P_ReferenceNumber != '')
     delete from @result where ReferenceNumber not like '%'+@P_ReferenceNumber+'%'
     
     if(@P_Subject != '')
     delete from @result where Subject not like '%'+@P_Subject+'%'

 


     if(@P_Location != '')
     delete from @result where Location not like '%'+@P_Location+'%'

 


      if(@P_MeetingType is not null and @P_MeetingType !='')
     delete from @result where MeetingType !=(select MeetingTypeName from M_MeetingType where MeetingTypeID=@P_MeetingType)

 


      if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=194)  or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=194))
         delete from @result where InternalInvitees = 0

 

     if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=195) or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=195))
     delete from @result where ExternalInvitees = 0

 

     if(@P_Invitees = (select Displayname from M_Lookups as M where M.LookupsID=196)or @P_Invitees =(select ArDisplayName from M_Lookups as M where M.LookupsID=196))
     delete from @result where ExternalInvitees = 0 or InternalInvitees =0
     
        if( @P_SmartSearch is not null)
     begin
      select  MeetingID , ReferenceNumber, Subject,Location ,MeetingType ,Invitees ,UserName ,InternalInvitees ,ExternalInvitees ,startDateTime ,
		EndDateTime ,    OrganizerDepartment ,OrganizerName  from (SELECT row_number() over (Order By  ReferenceNumber desc) as slno,
         * from @result as R where((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Subject  like '%'+@P_SmartSearch+'%') or
        (Location  like '%'+@P_SmartSearch+'%') or (MeetingType  like '%'+@P_SmartSearch+'%') or(Invitees  like '%'+@P_SmartSearch+'%') or
         ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),startDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), startDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%') or
        ((select concat((Select convert(nvarchar(50),(Select cast( DATEADD(MILLISECOND,DATEDIFF(MILLISECOND,getutcdate(),GETDATE()),EndDateTime) as date)),103)),' ',
	(SELECT  CONVERT(nvarchar(10), cast((SELECT DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), EndDateTime) ) as time), 8)))) like '%'+@P_SmartSearch+'%')      
      or ((select count(K.ContactPerson) from MeetingExternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and k.ContactPerson like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.UserID) from MeetingInternalInvitees as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
        or ((select count(K.RemindMeDateTime) from MeetingRemindMeAt as K where K.MeetingID=R.MeetingID and (K.DeleteFlag=0 or 
        K.DeleteFlag is null) and (SELECT  CONVERT(nvarchar(50), cast(k.RemindMeDateTime as date), 103)) like '%'+@P_SmartSearch+'%')>0)
        or (OrganizerName like '%'+@P_SmartSearch+'%')or (OrganizerDepartment  like '%'+@P_SmartSearch+'%')))as m where   m.slno between @StartNo and @EndNo 
     if( @P_SmartSearch is null)
     select * from @result 
  
     END
     end
GO
/****** Object:  StoredProcedure [dbo].[MemoReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE  procedure [dbo].[MemoReport] --  [MemoReport]0,0,2,1


    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 0,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_DestinationOU nvarchar(255) = '',
	@P_Private nvarchar(255) = '',
	@P_Priority nvarchar(255) = '',
	@P_DateFrom datetime = null,
	@P_DateTo datetime = null,
	@P_SmartSearch nvarchar(max)= null,
	@P_Language nvarchar(10)= 'EN'
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@P_UserEmail nvarchar(max) = null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;
	SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)

	if(@P_Private='All')
	set @P_Private='';

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		DelegateTOEmail nvarchar(max),
		FromMail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail,FromEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

    declare @result table(
	[MemoID] int,
	[ReferenceNumber] [nvarchar](250) NULL,
	[Title] [nvarchar](max) NULL,
	[SourceName] [nvarchar](250) NULL,
	SourceUserName nvarchar(max),
	Details nvarchar(max),
	[Destination] [nvarchar](max) NULL,
	[Status] [nvarchar](250) NULL,
	[CreationDate] datetime null,
	[Private] [nvarchar](250) NULL,
	[Priority] [nvarchar](250) NULL,
	[Creator] nvarchar(max) null,
	[Destinator]  nvarchar(max) null,
	[Receiver] nvarchar(max) null,
	ApproverDepartment nvarchar(255),
	ApproverName nvarchar(255));

-- MyPending Action
insert into @result 
    Select   
    a.MemoID,
    a.ReferenceNumber,
    a.Title,
   ( select (case when @P_Language ='EN' then [DepartmentName] else [ArDepartmentName] end) from M_Department  where [DepartmentID] = a.SourceOU) as SourceOU ,
   (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,a.Details,
   (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
    a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(select [EmployeeName] from [dbo].[UserProfile] where  UserProfileId =a.[CreatedBy]),
	(select STUFF((SELECT ',' + 
	CAST([EmployeeName] AS VARCHAR(max)) AS [text()]
    FROM  [dbo].[UserProfile] where UserProfileId in 
	(select [UserID] from [dbo].[MemoDestinationUsers] where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
	FOR XML PATH('')), 1, 1, NULL) ),
	(select [EmployeeName] from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =w.ReferenceNumber and (Status =2) order by WorkflowID desc) )),
	 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
		(select [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName
    FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
   where a.DeleteFlag = 0 and 
	(( @P_UserEmail = w.ToEmail or  @P_UserEmail = W.DelegateTOEmail)  and ( w.Status=2 or w.Status=5)) or
	((w.Status = 3 )  and 
	((@P_UserEmail in (select ToEmail from Workflow where ReferenceNumber=a.ReferenceNumber and 
	DeleteFlag =0 and Status=3 and IsRedirect =0 ))
	))

   	 

----Incomming Memos

 insert into @result
	Select  
	a.MemoID,
	a.ReferenceNumber,
	a.Title,
   ( select (case when @P_Language ='EN' then [DepartmentName] else [ArDepartmentName] end) from M_Department  where [DepartmentID] = a.SourceOU) as SourceOU ,
	(select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,a.Details,
	(select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
   a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(select [EmployeeName] from [dbo].[UserProfile] where  UserProfileId =a.[CreatedBy]),
	(select STUFF((SELECT ',' + 
	CAST([EmployeeName] AS VARCHAR(max)) AS [text()]
    FROM  [dbo].[UserProfile] where UserProfileId in 
	(select [UserID] from [dbo].[MemoDestinationUsers] where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
	FOR XML PATH('')), 1, 1, NULL) ),
	(select [EmployeeName] from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =w.ReferenceNumber and (Status = 1 or Status =2) order by WorkflowID desc) )),
	 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
		(select [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName
  FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
		where a.DeleteFlag = 0 and 
	--(@P_UserEmail != w.ToEmail or (@P_Username = a.CreatedBy and status !=5)) AND
	((a.CreatedBy = @P_UserID and w.Status not in (1,5))  or
	@P_UserEmail in (select FromEmail from Workflow where ReferenceNumber = a.ReferenceNumber and WorkflowProcess!='SubmissionWorkflow' and Status NOT IN (1,6))) 
	
   
   


--Outgoing memos
 Insert into @result
 Select  
    a.MemoID,
    a.ReferenceNumber,
    a.Title,
   ( select (case when @P_Language ='EN' then [DepartmentName] else [ArDepartmentName] end) from M_Department  where [DepartmentID] = a.SourceOU) as SourceOU ,
   (select EmployeeName from UserProfile where UserProfileId=a.SourceName) as SourceName,a.Details,
  (select STUFF(replace(((SELECT ',' + 
CAST( (case when @P_Language = 'EN' then [DepartmentName] else [ArDepartmentName] end)  AS nvarchar(max)) AS [text()]
    FROM  [dbo].[M_Department] where DepartmentID in 
	(select DepartmentID from [dbo].MemoDestinationDepartment where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
FOR XML PATH(''))),'&amp;','&'), 1, 1, NULL) )AS Destination,
	(select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Memo' AND Category = 'Status') as Status,
    a.CreatedDateTime,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Private' and Module= a.Private)as Private,
   (select(case when @P_Language = 'EN' then DisplayName else ArDisplayName end) from M_Lookups where Category='Priority' and Module= a.Priority)as Priority,
	(select [EmployeeName] from [dbo].[UserProfile] where  UserProfileId =a.[CreatedBy]),
	(select STUFF((SELECT ',' + 
	CAST([EmployeeName] AS VARCHAR(max)) AS [text()]
    FROM  [dbo].[UserProfile] where UserProfileId in 
	(select [UserID] from [dbo].[MemoDestinationUsers] where MemoID = a.MemoID and (DeleteFlag is null or DeleteFlag=0))
	FOR XML PATH('')), 1, 1, NULL) ),
	(select [EmployeeName] from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =w.ReferenceNumber and (Status = 1 or Status =2) order by WorkflowID desc) )),
	 (select (case when @P_Language ='EN' then DepartmentName else [ArDepartmentName] end) from M_Department where DepartmentID= a.InitalApproverDepartment) as ApproverDepartment,	
		(select [UserProfileId] from [dbo].[UserProfile] where [OfficialMailId]  = (
	  (select top 1 ToEmail from [Workflow]
	 where ReferenceNumber =a.ReferenceNumber and FromEmail = (select OfficialMailId from [dbo].[UserProfile] where UserProfileId=a.CreatedBy) and (Status = 1 or Status =2) order by WorkflowID desc) 
	 ))
	  as ApproverName
  FROM dbo.memo a inner join @Workflow w on a.ReferenceNumber = w.ReferenceNumber
   where a.DeleteFlag = 0 and ((w.Status = 6 and W.FromMail = @P_UserEmail)
   OR (w.Status=3 and  @P_UserID in (select [UserID] from [dbo].[ShareparticipationUsers]   where [ServiceID]=a.MemoID and [Type] ='Memo' )))



	if(@P_SourceOU != '' and @P_SourceOU is not null)
	 delete from @result where (SourceName not like '%'+Rtrim(@P_SourceOU)+'%' or SourceName is null)

	 if(@P_DestinationOU != '' and @P_DestinationOU is not null)
	 delete from @result where @P_DestinationOU not in (select value from string_split(Destination,','))

	if(@P_Private != '')
	 delete from @result where cast(Private as nvarchar(max)) != RTRIM(@P_Private)

	 if(@P_Priority != '')
	 delete from @result where Priority!= RTrim(@P_Priority)

	 if(@P_DateFrom is not null)
	 delete from @result where cast( CreationDate as date) < cast(@P_DateFrom as date)

	 if(@P_DateTo is not null)
	 delete from @result where cast(CreationDate as date) > cast(@P_DateTo as date)

	 if(@P_Status != '' )
	 begin
		delete from @result where Status != @P_Status

     end

	 if(@P_Method = 0)
	 begin
		select * from @result-- where id between @StartNo and @EndNo
	 end

	 if(@P_Method = 1)
	 begin
		select count(*) from @result
	 end


	 if(@P_Method = 2 and  (@P_SmartSearch is not null and @P_SmartSearch != ''))
	 begin
		select * from @result as R where  
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (Title  like '%'+@P_SmartSearch+'%') or
		(SourceName  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast(CreationDate as date), 103))  like '%'+@P_SmartSearch+'%')  or
		(Private  like '%'+@P_SmartSearch+'%')   or (Priority  like '%'+@P_SmartSearch+'%') or
		((select count(K.MemoKeywordsID) from MemoKeywords as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and K.Keywords like '%'+@P_SmartSearch+'%')>0) or (ApproverDepartment like  '%'+@P_SmartSearch+'%')
		or(ApproverName like '%'+@P_SmartSearch+'%')  or (Details like '%'+@P_SmartSearch+'%') or(SourceName like '%'+@P_SmartSearch+'%')
		or ((select count(K.UserID) from MemoDestinationUsers as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select EmployeeName from UserProfile where UserProfileId= K.UserID )like '%'+@P_SmartSearch+'%')>0)
		or ((select count(K.DepartmentID) from MemoDestinationDepartment as K where K.MemoID=R.MemoID and (K.DeleteFlag=0 or K.DeleteFlag is null) and (select (case when @P_Language ='EN' then [DepartmentName] else [ArDepartmentName] end) from M_Department where DepartmentID= K.DepartmentID )like '%'+@P_SmartSearch+'%')>0)
		 )
		
	 end

	 if(@P_Method = 2 and  (@P_SmartSearch is  null or @P_SmartSearch =''))
	 begin
		select * from @result
	 end

end

GO
/****** Object:  StoredProcedure [dbo].[OfficialTaskReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[OfficialTaskReport] --  [OfficialTaskReport]1,20,0,1


    @P_PageNumber int =0,
	@P_PageSize int =0,
	@P_Method int =2,
	@P_UserID int = 1,
	@P_Status nvarchar(255) = '',
	@P_SourceOU nvarchar(255) = '',
	@P_SubjectName nvarchar(255) = '',
	@P_OfficialTaskType nvarchar(250) ='',
	@P_AttendedBy nvarchar(255) = '',
	@P_SmartSearch nvarchar(max)= null
	
	
	as
begin
	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

    declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	[ReferenceNumber] [nvarchar](250) NULL,
	[SourceOU] [nvarchar](250) NULL,
	[SubjectName] [nvarchar](max) NULL,
	[OfficialTaskType] [nvarchar](max) NULL,
	[Status] [nvarchar](250) NULL,
	[AttendedBy] [nvarchar](250) NULL);


 Insert into @Result

 Select  
    
  OT.ReferenceNumber,
  OT.SourceOU,
  OT.SourceName,
  OT.OfficialTaskType,
  (select DisplayName from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'OfficialTask' AND Category = 'Status') as Status,
  (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = OT.[CreatedBy]) as Creator 
    FROM dbo.OfficialTask OT  join @Workflow w on OT.ReferenceNumber = w.ReferenceNumber  	
Where OT.DeleteFlag = 0 and OT.CreatedBy= @P_UserID 



 Insert into @Result
 Select  
    
  C.ReferenceNumber,
  C.SourceOU,
  C.SourceName,
  C.OfficialTaskType,
  (select DisplayName from [dbo].[M_Lookups] where LookupsID = w.status AND Module = 'Compensation' AND Category = 'Status') as Status,
  (select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = C.[CreatedBy]) as Creator 
    FROM dbo.Compensation C  join @Workflow w on C.ReferenceNumber = w.ReferenceNumber  	
Where C.DeleteFlag = 0 and C.CreatedBy= @P_UserID 

--select * from @Result
	
if(@P_SourceOU != '')
	 delete from @Result where SourceOU not like '%'+SourceOU+'%'
	 
	 if(@P_SubjectName != '')
	 delete from @Result where SubjectName not like '%'+@P_SubjectName+'%'
	  
	 if(@P_OfficialTaskType != '')
	 delete from @Result where OfficialTaskType not like '%'+@P_OfficialTaskType+'%'

		 if(@P_AttendedBy != '')
	 delete from @Result where AttendedBy not like '%'+@P_AttendedBy+'%'

	 if(@P_Status != '' )
	 begin
		delete from @Result where Status != @P_Status

     end




	 if(@P_Method = 0)
	 begin
		select * from @Result where id between @StartNo and @EndNo
	 end


	 if(@P_Method = 1)
	 begin
		select count(*) from @result
	 end


	 if(@P_Method = 2 and  @P_SmartSearch is not null)
	 begin
		select * from @Result where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (SourceOU  like '%'+@P_SmartSearch+'%') or
		(SubjectName  like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or
		(AttendedBy like '%'+@P_SmartSearch+'%'))
		 and id between @StartNo and @EndNo 
	 end


	 if(@P_Method = 2 and  @P_SmartSearch is  null)
	 begin
		select * from @Result
	 end

End


GO
/****** Object:  StoredProcedure [dbo].[Save_Announcement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Announcement]
	@P_AnnouncementID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_AnnouncementType nvarchar (250) = null,
	@P_AnnouncementDescription nvarchar (MAX) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	 declare @P_Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Announcement) = 0)
	set @temp = (SELECT IDENT_CURRENT('Announcement'))
	else
	set @temp = (SELECT IDENT_CURRENT('Announcement'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','A');

	if(@P_AnnouncementID is null or @P_AnnouncementID =0)
	begin
	insert into [Announcement] ([ReferenceNumber],[SourceOU],[SourceName],[AnnouncementType],[AnnouncementDescription],[DeleteFlag],[CreatedBy],[CreatedDateTime])
	select @P_Referencenumber,@P_SourceOU,@P_SourceName,@P_AnnouncementType,@P_AnnouncementDescription,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_AnnouncementID = (SELECT IDENT_CURRENT('Announcement'))

	insert into [dbo].[AnnouncementHistory]
	select @P_AnnouncementID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

	end

	Else

	
	if(@P_AnnouncementID is not NUll)
	begin
	update [Announcement] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,AnnouncementType=@P_AnnouncementType,AnnouncementDescription=@P_AnnouncementDescription,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where AnnouncementID=@P_AnnouncementID
	insert into [dbo].[AnnouncementHistory]
	select @P_AnnouncementID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment

	end



	select AnnouncementID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Announcement] where AnnouncementID=@P_AnnouncementID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_Attachments]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 /****** Object:  StoredProcedure [dbo].[Save_Attachments]     ******/
CREATE PROCEDURE [dbo].[Save_Attachments] --[Save_Attachments]'delete',null,2

	@P_Type nvarchar(100) =null,
	@P_AttachmentID int = null,
	@P_ServiceID int = null,
	@P_ServiceType nvarchar(100)= null,
	@P_AttachmentGuid nvarchar(max) = null,	
	@P_AttachmentsName nvarchar(MAX) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	
	@P_ReferenceNumber nvarchar(100)= null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	If(@P_Type ='Memo ' or @P_ServiceType='Memo')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Memo where MemoID=@P_ServiceID)
	end
	else If(@P_Type ='OutboundLetter'  or @P_ServiceType='OutboundLetter')
	begin
		set @P_ReferenceNumber = (select [LetterReferenceID] from [LettersOutbound] where LetterID=@P_ServiceID)
	end
	else If(@P_Type ='InboundLetter' or @P_ServiceType='InboundLetter')
	begin
		set @P_ReferenceNumber = (select [LetterReferenceID] from [LettersOutbound] where LetterID=@P_ServiceID)
	end
	else If(@P_Type ='Leave' or @P_ServiceType='Leave')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Leave where LeaveID=@P_ServiceID)
	end
  	Else If(@P_Type ='Circular' or @P_ServiceType='Circular')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Circular where CircularID=@P_ServiceID)
	end
  	Else If(@P_Type ='UserProfile' or @P_ServiceType='UserProfile')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from UserProfile where UserProfileId=@P_ServiceID)
	end
		Else If(@P_Type ='Contact' or @P_ServiceType='Contact')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Contact where ContactID=@P_ServiceID)
	end
	Else If(@P_Type ='CVBank' or @P_ServiceType='CVBank')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from CVBank where CVBankId=@P_ServiceID)
	end
	Else If(@P_Type ='MediaPhotoRequest' or @P_ServiceType='MediaPhotoRequest')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from MediaPhotoRequest where PhotoID=@P_ServiceID)
	end
	Else If(@P_Type ='ITSupport' or @P_ServiceType='ITSupport')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from ITSupport where ITSupportID=@P_ServiceID)
	end
	Else If(@P_Type ='MediaDesignRequest' or @P_ServiceType='MediaDesignRequest')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from MediaDesignRequest where DesignID=@P_ServiceID)
	end

	Else If(@P_Type ='MediaNewCampaignRequest' or @P_ServiceType='MediaNewCampaignRequest')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from MediaNewCampaignRequest where CampaignID=@P_ServiceID)
	end

	Else If(@P_Type ='MediaPhotoRequest' or @P_ServiceType='MediaPhotoRequest')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from MediaPhotoRequest where PhotoID=@P_ServiceID)
	end

	Else If(@P_Type in('CitizenAffair','Photo','Document') or @P_ServiceType in('CitizenAffair','Photo','Document'))
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from CitizenAffair where CitizenAffairID=@P_ServiceID)
	end

	Else If(@P_Type ='DutyTask' or @P_ServiceType='DutyTask')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from DutyTask where TaskID=@P_ServiceID)
	end

	Else If(@P_Type ='Gift' or @P_ServiceType='Gift')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Gift where GiftID=@P_ServiceID)
	end
	Else If(@P_Type ='Meeting' or @P_ServiceType='Meeting')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Meeting where MeetingID=@P_ServiceID)
	end
	Else If(@P_Type ='Maintenance' or @P_ServiceType='Maintenance')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Maintenance where MaintenanceID=@P_ServiceID)
	end

	Else If(@P_Type ='Legal' or @P_ServiceType='Legal')
	begin
		set @P_ReferenceNumber = (select ReferenceNumber from Legal where LegalID=@P_ServiceID)
	end
	Else If(@P_Type ='Training' or @P_ServiceType='Training')
	begin
		set @P_ReferenceNumber = (select TrainingReferenceID from Training where TrainingID=@P_ServiceID)
	end
		declare @AttachmentGuid table(
	id int identity(1,1) ,
	FileGuid nvarchar(max) 
	) 
	insert into @AttachmentGuid
	select value from string_split(@P_AttachmentGuid,',')
	
	declare @AttachmentName table(
	id int identity(1,1) ,
	FileName nvarchar(max) 
	) 
	
	
	insert into @AttachmentName
	select value from string_split(@P_AttachmentsName,',')
	
	declare @Attachment table(
	id int identity(1,1) ,
	FileGuid nvarchar(max) ,
	FileName nvarchar(max) 
	) 


	insert into @Attachment
	select FileGuid,FileName from @AttachmentGuid as a inner join @AttachmentName as b on a.id=b.id



	
	If(@P_Type = 'Delete' and @P_ServiceType ='UserProfile')
	begin
		update [dbo].[Attachments] set DeleteFlag = 1, UpdatedBy=@P_UpdatedBy,UpdatedDateTime=(SELECT GETUTCDATE()) where
		 [AttachmentID] not in (SELECT c.AttachmentID
			FROM (select * from [dbo].[Attachments] where ReferenceNumber=@P_ReferenceNumber and ServiceID=@P_ServiceID) c
			WHERE EXISTS(SELECT c2.ID 
			FROM (select * from @Attachment) c2
			WHERE c2.FileGuid = c.AttachmentGuid and c2.FileName= c.AttachmentsName))  and ReferenceNumber=@P_ReferenceNumber 
	end

	else If(@P_Type = 'Delete' and @P_ServiceType !='UserProfile' and @P_AttachmentGuid Is not null)
	begin
		update [dbo].[Attachments] set DeleteFlag = 1, UpdatedBy=@P_UpdatedBy,UpdatedDateTime=(SELECT GETUTCDATE()) where
		 [AttachmentID] not in (SELECT c.AttachmentID
			FROM (select * from [dbo].[Attachments] where Type=@P_ServiceType and ServiceID=@P_ServiceID) c
			WHERE EXISTS(SELECT c2.ID 
			FROM (select * from @Attachment) c2
			WHERE c2.FileGuid = c.AttachmentGuid and c2.FileName= c.AttachmentsName))  and ReferenceNumber=@P_ReferenceNumber 
			and Type = @P_ServiceType 
	end

	else If(@P_Type ='Delete'and @P_ServiceType !='UserProfile' and @P_AttachmentGuid is null)
	begin
	Update [dbo].[Attachments] set DeleteFlag = 1, UpdatedBy=@P_UpdatedBy,UpdatedDateTime=(SELECT GETUTCDATE()) where ServiceID=@P_ServiceID 
	AND Type = @P_ServiceType

	end

	else if(((select count(*) from Attachments where AttachmentGUID = @P_AttachmentGuid and AttachmentsName = @P_AttachmentsName)=0)and @P_Type != 'Delete')
	begin
	insert into [dbo].[Attachments]
	select @P_ServiceID,@P_Type,@P_AttachmentGuid,@P_AttachmentsName,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,(SELECT GETUTCDATE()),@P_UpdatedDateTime,@P_ReferenceNumber
	set @P_AttachmentID = (SELECT IDENT_CURRENT('Attachments'))
	end

	SELECT @P_AttachmentID
	END
GO
/****** Object:  StoredProcedure [dbo].[Save_BabyAddition]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_BabyAddition]

	@P_BabyAdditionID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_BabyName nvarchar(250) = null,
	@P_Gender nvarchar(250) = null,
	@P_Birthday datetime = null,
	@P_HospitalName nvarchar(250) = null,
	@P_CountryofBirth nvarchar(250) = null,
	@P_CityofBirth nvarchar(250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from BabyAddition) = 0)
	set @temp = (SELECT IDENT_CURRENT('BabyAddition'))
	else
	set @temp = (SELECT IDENT_CURRENT('BabyAddition'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','B');
	
	if(@P_BabyAdditionID is null or @P_BabyAdditionID =0)
	begin
	insert into [dbo].[BabyAddition]
	select @P_Referencenumber,@P_SourceOU,@P_SourceName,@P_BabyName,@P_Gender,@P_Birthday,@P_HospitalName,@P_CountryofBirth,@P_CityofBirth,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_BabyAdditionID = (SELECT IDENT_CURRENT('BabyAddition'))

	insert into [dbo].[BabyAdditionHistroy]
	select @P_BabyAdditionID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment
	end
	Else
	begin
	update [dbo].[BabyAddition] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,BabyName=@P_BabyName,Gender=@P_Gender,Birthday=@P_Birthday,HospitalName=@P_HospitalName,CountryofBirth=@P_CountryofBirth,CityofBirth=@P_CityofBirth,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where BabyAdditionID=@P_BabyAdditionID
	insert into [dbo].[BabyAdditionHistroy]
	select @P_BabyAdditionID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment
	end

	SELECT BabyAdditionID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[BabyAddition]
	where BabyAdditionID=@P_BabyAdditionID
END


GO
/****** Object:  StoredProcedure [dbo].[Save_Banner]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[Save_Banner]

	@P_BannerID int = null,
	@P_AttachmentGuid nvarchar(Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_CreatedBy int = null,
	@P_CreatedDateTime datetime = null
AS
BEGIN	
	SET NOCOUNT ON;
		if((select CanManageNews from UserProfile where UserProfileId=@P_CreatedBy )=1)
	     insert into[dbo].[M_Banner](AttachmentGuid,AttachmentName,[CreatedBy],[CreatedDateTime])
		select @P_AttachmentGuid, @P_AttachmentName,@P_CreatedBy,@P_CreatedDateTime
		
		set @P_BannerID = (SELECT IDENT_CURRENT('M_Banner'))		
	SELECT @P_BannerID as BannerID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CAComplaintSuggestions]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_CAComplaintSuggestions]    ******/
CREATE PROCEDURE [dbo].[Save_CAComplaintSuggestions]

	@P_CAComplaintSuggestionsID int = null,
	@P_Type nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_Source nvarchar(max) =  null,
	@P_Details nvarchar(max) = null,
	@P_RequestCreatedBy nvarchar(250) = null,
	@P_MailID nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_ActionTaken nvarchar(250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from CAComplaintSuggestions) = 0)
	set @temp = (SELECT IDENT_CURRENT('CAComplaintSuggestions'))

	else
	set @temp = (SELECT IDENT_CURRENT('CAComplaintSuggestions'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CACS');
	
	if(@P_CAComplaintSuggestionsID is null or @P_CAComplaintSuggestionsID =0)
	begin
	insert into [dbo].[CAComplaintSuggestions]
	select @Referencenumber,@P_Type,@P_source,@P_Subject,@P_Details,@P_RequestCreatedBy,@P_MailID,@P_PhoneNumber,@P_ActionTaken ,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_CAComplaintSuggestionsID = (SELECT IDENT_CURRENT('CAComplaintSuggestions'))

	insert into [dbo].[CAComplaintSuggestionsHistory]
	select @P_CAComplaintSuggestionsID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment
	end
	Else
	begin
	update [dbo].[CAComplaintSuggestions] set Type = @P_Type,Source=@P_Source,Subject=@P_Subject,Details=@P_Details,RequestCreatedBy=@P_RequestCreatedBy,MailID=@P_MailID,
	PhoneNumber = @P_PhoneNumber,ActionTaken = @P_ActionTaken,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CAComplaintSuggestionsID=@P_CAComplaintSuggestionsID
	insert into [dbo].[CAComplaintSuggestionsHistory]
	select @P_CAComplaintSuggestionsID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment
	end

	SELECT CAComplaintSuggestionsID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[CAComplaintSuggestions]
	where CAComplaintSuggestionsID=@P_CAComplaintSuggestionsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Calendar]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Calendar] 
	-- Add the parameters for the stored procedure here
	@P_CalendarID int=null,
	@P_ParentReferenceNumber nvarchar(max)=null,
	@P_EventRequestor nvarchar(max)=null,
	@P_EventType int =null,
	@P_EventDetails nvarchar(max)=null,
	@P_DateFrom datetime=null,
	@P_DateTo datetime=null,
	@P_AllDayEvents bit=null,
	@P_Location int =null,
	@P_City int =null,
	@P_Action nvarchar(250) = null,
	@P_Comment nvarchar(max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_UpdatedBy int = null,
	@P_ParentCommunicationID int=null,
    @P_DelegateUser int= null,
	@P_IsApologySent bit=null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('Calendar'))
    
	if (@P_CalendarID is null or @P_CalendarID=0)
	begin
	insert into [dbo].[Calendar]([EventRequestor],[EventType],[EventDetails],[DateFrom],[DateTo],
	[AllDayEvents],[Location],[City],[DeleteFlag],[CreatedBy],[CreatedDateTime],[ParentReferenceNumber])

	select @P_EventRequestor,@P_EventType,@P_EventDetails,@P_DateFrom,@P_DateTo,@P_AllDayEvents,
	@P_Location,@P_City,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_ParentReferenceNumber
	set @P_CalendarID = (SELECT IDENT_CURRENT('Calendar'))
	set @temp = (select SCOPE_IDENTITY());
	declare @temp2 int=null
	
	set @temp2= (select count(*) from Calendar where ParentReferenceNumber is null or ParentReferenceNumber='')
       
               
       
        
	declare @temp1 int=null;
	select @temp1=  count (*) from Calendar where ParentReferenceNumber=@P_ParentReferenceNumber
		if(@P_ParentReferenceNumber is null or @P_ParentReferenceNumber ='')
		select  @P_Referencenumber =concat((Right(concat('0','0',@temp2),3)),'-',(SELECT YEAR((select GETDATE()))),'-','EM');

		else
		Select @P_Referencenumber = Concat(@P_ParentReferenceNumber,'_',@temp1)

		update [dbo].Calendar set  [ReferenceNumber] = @P_Referencenumber where CalendarID = @temp
		

	insert into CalendarCommunicationHistory([CalendarID],[Action],[Comment],[CreatedBy],
	[CreatedDateTime],ParentCommunicationID)
	select @P_CalendarID,@P_Action,@P_Comment,@P_CreatedBy,@P_CreatedDateTime,@P_ParentCommunicationId
	end 
	else
	begin
	update [dbo].[Calendar] set [EventRequestor]=@P_EventRequestor, [EventType]=@P_EventType,[EventDetails]=@P_EventDetails,
    [DateFrom]= @P_DateFrom,[DateTo]=@P_DateTo, [AllDayEvents]=@P_AllDayEvents,[Location]=@P_Location,
    [City]=@P_City,[UpdatedBy]=@P_UpdatedBy,[UpdatedDateTime]=@P_UpdatedDateTime,IsApologiesSent= @P_IsApologySent

	where CalendarID=@P_CalendarID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 120) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from Calendar as c
	  where CalendarID = @P_CalendarID) and (W.Status = 120)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from Calendar as m where m.CalendarID=@P_CalendarID)) =120)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end

	if(@P_Action!='Apology')
	begin
	insert into CalendarCommunicationHistory([CalendarID],[Action],[Comment],[CreatedBy],
	[CreatedDateTime],ParentCommunicationID,DelegateUser)
	select @P_CalendarID,@P_Action,@P_Comment,@P_UpdatedBy,@P_UpdatedDateTime,@P_ParentCommunicationId,@P_DelegateUser
	end
	end
	SELECT CalendarID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID  from Calendar where CalendarID=@P_CalendarID

END
GO
/****** Object:  StoredProcedure [dbo].[Save_CalendarApology]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_CalendarApology] 
	-- Add the parameters for the stored procedure here
	@P_CalendarID int =0,
	@P_UpdatedBy int =0,
	@P_UpdatedDatetime datetime = null,
	@P_IsApologySent bit = false
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update Calendar set IsApologiesSent = @P_IsApologySent,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDatetime where CalendarID = @P_CalendarID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CalendarCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_CalendarCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_CalendarID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[CalendarCommunicationHistory]([CalendarID],[Action],[Comment],[CreatedBy],[CreatedDateTime],[ParentCommunicationID])
	
		select  @P_CalendarID,null,@P_Message,@P_CreatedBy,@P_CreatedDateTime,@P_ParentCommunicationID
		set @P_CommunicationID = (SELECT IDENT_CURRENT('CalendarCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Campaign]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Campaign]

	@P_CampaignID int = null,
	@P_ActivityDetails nvarchar(250) = null,	
	@P_CampaignStartDate datetime = null,
	@P_CampaignPeriod nvarchar(MAX) = null,
	@P_DiwansRole nvarchar(MAX) = null,	
	@P_OtherEntities nvarchar(MAX) = null,
	@P_Notes nvarchar(MAX) = null,
	@P_TargetsAudience nvarchar(MAX) = null,
	@P_RequestDetails nvarchar(MAX) = null,
	@P_RequestDate datetime = null,	
	@P_GeneralInformation nvarchar(MAX) = null,
	@P_MainObjective nvarchar(MAX) = null,
    @P_WhereEver nvarchar(MAX) = null,	
	@P_What nvarchar(MAX) = null,
	@P_MainIdea nvarchar(MAX) = null,
	@P_StrategicGoalsPlanandVisionofRRC nvarchar(MAX) = null,	
	@P_Languages nvarchar(MAX) = null,
	@P_MediaChannel nvarchar(MAX) = null,
	@P_MediaManager nvarchar(250) = null,
	@P_MediaStaff nvarchar(250) = null,		
	@P_Attachments nvarchar (Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_CampaignID is null or @P_CampaignID =0)
	begin
	insert into [dbo].[Campaign]
	select @P_ActivityDetails,@P_CampaignStartDate,@P_CampaignPeriod,@P_DiwansRole,@P_OtherEntities,@P_Notes,@P_TargetsAudience,@P_RequestDetails,@P_RequestDate,@P_GeneralInformation,@P_MainObjective,@P_WhereEver,@P_What,@P_MainIdea,@P_StrategicGoalsPlanandVisionofRRC,@P_Languages,@P_MediaChannel,@P_MediaManager,@P_MediaStaff,@P_Attachments,@P_AttachmentName,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_CampaignID = (SELECT IDENT_CURRENT('Campaign'))
	end
	Else
	begin
	update [dbo].[Campaign] set ActivityDetails=@P_ActivityDetails,CampaignStartDate=@P_CampaignStartDate,CampaignPeriod=@P_CampaignPeriod,DiwansRole=@P_DiwansRole,OtherEntities=@P_OtherEntities,Notes=@P_Notes,TargetsAudience=@P_TargetsAudience,RequestDetails=@P_RequestDetails,RequestDate=@P_RequestDate,GeneralInformation=@P_GeneralInformation,MainObjective=@P_MainObjective,WhereEver=@P_WhereEver,What=@P_What,MainIdea=@P_MainIdea,StrategicGoalsPlanandVisionofRRC=@P_StrategicGoalsPlanandVisionofRRC,Languages=@P_Languages,MediaChannel=@P_MediaChannel,MediaManager=@P_MediaManager,MediaStaff=@P_MediaStaff,Attachments=@P_Attachments,AttachmentName=@P_AttachmentName,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
 where CampaignID=@P_CampaignID
	end

	SELECT @P_CampaignID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CarCompany]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_CarCompany]  ******/
CREATE PROCEDURE [dbo].[Save_CarCompany]

	@P_CarCompanyID int = null,
    @P_CompanyName nvarchar(250) = null,
	@P_ContactName nvarchar(250) = null,
	@P_ContactNumber nvarchar(50) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
AS
BEGIN
	
	SET NOCOUNT ON;
        if(@P_CarCompanyID is null or @P_CarCompanyID =0)
	begin
	insert into [dbo].[CarCompany]
	select @P_CompanyName,@P_ContactName,@P_ContactNumber,
	@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	
	set @P_CarCompanyID = (SELECT IDENT_CURRENT('CarCompany'))   

  	--select * from VehicleDetails
	end
	Else
	begin
	update [dbo].[CarCompany] set CompanyName = @P_CompanyName,ContactName = @P_ContactName , ContactNumber=@P_ContactNumber,
	DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CarCompanyID=@P_CarCompanyID 

	end

	SELECT CarCompanyID,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[CarCompany]
	where CarCompanyID=@P_CarCompanyID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Certificate]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Certificate]

	@P_CertificateID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_Attention nvarchar(250) = null,
	@P_To nvarchar (250) = null,
	@P_SalaryCertificateClassification nvarchar (250) = null,
	@P_Reason nvarchar (Max) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_CertificateType nvarchar(250) = null
	
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Certificate) = 0)
	set @temp = (SELECT IDENT_CURRENT('Certificate'))
	else
	set @temp = (SELECT IDENT_CURRENT('Certificate'))+1
	if(@P_CertificateType = 'Salary')
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','SC');
	else if(@P_CertificateType = 'Experience')
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','EC');

	if(@P_CertificateID is null or @P_CertificateID =0)
	begin
	insert into [dbo].[Certificate] ([ReferenceNumber],[SourceOU],[SourceName],[Attention],[To],[SalaryCertificateClassification],[Reason],[DeleteFlag],[CreatedBy],[CreatedDateTime],[CertificateType])
	select @P_Referencenumber,@P_SourceOU,@P_SourceName,@P_Attention,@P_To,@P_SalaryCertificateClassification,@P_Reason,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_CertificateType
	set @P_CertificateID = (SELECT IDENT_CURRENT('Certificate'))

	insert into [dbo].[CertificateHistory]
	select @P_CertificateID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment
    end

	Else
	if(@P_CertificateID is not NUll)
	begin
	update [dbo].[Certificate] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,Attention=@P_Attention,[To]=@P_To,SalaryCertificateClassification=@P_SalaryCertificateClassification,Reason=@P_Reason,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CertificateID=@P_CertificateID
	insert into [dbo].[CertificateHistory]
	select @P_CertificateID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment

	end

	select CertificateID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Certificate] where CertificateID=@P_CertificateID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Circular]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Circular]
	@P_CircularID int = null,
	@P_Title nvarchar(Max) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_Details nvarchar(MAX) = null,
	@P_Priority nvarchar (250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ApproverDepartmentId int = 0,
    @P_DelegateUser int= null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null,  @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	
	set @temp = (SELECT IDENT_CURRENT('Circular'))
	
	if(@P_CircularID is null or @P_CircularID =0)
	begin
	insert into [Circular] ([Title],[SourceOU],[SourceName],[Details],[Priority],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_Title,@P_SourceOU,@P_SourceName,@P_Details,@P_Priority,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime

	set @temp = (select SCOPE_IDENTITY());
	set @P_CircularID = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CR');
	
	update [dbo].[Circular]  set  [ReferenceNumber]=@P_Referencenumber where CircularID=@temp

	insert into [dbo].[CircularHistory](CircularID,Action,ActionBy,ActionDateTime,Comments)
	select @temp,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

	select top 1 CircularID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Circular] order by CircularID desc

	end

	Else

	
	if(@P_CircularID is not NUll)
	begin
	update [Circular] set  Title=@P_Title,SourceOU=@P_SourceOU,SourceName=@P_SourceName,Details=@P_Details,Priority=@P_Priority,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CircularID=@P_CircularID

	
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 12 or Status = 13) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W where W.ReferenceNumber =(select ReferenceNumber from Circular 
	  where CircularID = @P_CircularID) and (W.Status = 12 or W.Status = 13))))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber= (select c.ReferenceNumber from Circular as c where c.CircularID=@P_CircularID)) =13)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end


	insert into [dbo].[CircularHistory]
	select @P_CircularID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_DelegateUser

	select CircularID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Circular] where CircularID=@P_CircularID

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update  [Circular] set [InitalApproverDepartment] = @P_ApproverDepartmentId where CircularID=@P_CircularID

	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CircularClone]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_CircularClone]    ******/
CREATE PROCEDURE [dbo].[Save_CircularClone] --  Save_CircularClone 1,1
	-- Add the parameters for the stored procedure here
	@P_UserID int=0,
	@P_CircularID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @temp int = null,  @P_Referencenumber nvarchar(255) = null;

insert into [dbo].[Circular] ([Title],[SourceOU],[SourceName],[Details],[Priority],[CreatedBy],[CreatedDateTime],[DeleteFlag],[InitalApproverDepartment])
select [Title],[SourceOU],[SourceName],[Details],[Priority],[CreatedBy],(select GETUTCDATE()),[DeleteFlag],[InitalApproverDepartment]
 from [Circular] where @P_CircularID=[CircularID]

	set @temp = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CR');
	
	update [dbo].[Circular]  set  [ReferenceNumber]=@P_Referencenumber where [CircularID]=@temp

	insert into [dbo].CircularHistory(CircularID,Action,ActionBy,ActionDateTime,Comments)
	select @temp,'Clone',@P_UserID,(select GETUTCDATE()) ,''


insert into [dbo].[CircularDestinationDepartment]([CircularID],[DepartmentID],[DeleteFlag])
			select @temp,[DepartmentID],0 from [dbo].[CircularDestinationDepartment] where [CircularID]=@P_CircularID and (DeleteFlag is null or DeleteFlag =0)

insert into [dbo].[Attachments]([ServiceID],[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],[CreatedDateTime],[ReferenceNumber])
			select @temp,[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],(select GETUTCDATE()) ,@P_Referencenumber 
			from [dbo].[Attachments] where  [ReferenceNumber]=(select [ReferenceNumber] from [Circular] where [CircularID]=@P_CircularID)
			and (DeleteFlag is null or DeleteFlag =0) 

insert into [dbo].[Workflow] ([ReferenceNumber],[Service],[WorkflowProcess],[FromName],[FromEmail],[ToName],[ToEmail],[Status],CreatedDateTime)
			select @P_Referencenumber,'Circular','DraftWorkflow',(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=@P_UserID)

			,(select OfficialMailId from [dbo].[UserProfile] where UserProfileId=@P_UserID),
			(SELECT top(1) ToName from [dbo].[Workflow] where Service='Circular' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,(SELECT top(1) ToEmail from [dbo].[Workflow] where Service='Circular' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )		
			,12,(select GETUTCDATE())

			select @temp
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CircularDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_CircularDestinationDepartment]
	-- Add the parameters for the stored procedure here
	@P_CircularDestinationID int = null,
	@P_CircularID int = null,	
	@P_DepartmentID nvarchar(250) = null,
	@P_Type int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		if(@P_Type >1 and @P_CircularID is not null)
	update CircularDestinationDepartment set [DeleteFlag]=1  where [CircularID] = @P_CircularID and DepartmentID=@P_DepartmentID


	if(@P_Type = 1 and @P_CircularID is not null)	
	begin
	insert into CircularDestinationDepartment
	select @P_CircularID,@P_DepartmentID,0
	set @P_CircularDestinationID = (SELECT IDENT_CURRENT('CircularDestinationDepartment'))
	end
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CitizenAffair]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Save_CitizenAffair]   ******/
CREATE PROCEDURE [dbo].[Save_CitizenAffair] 
	-- Add the parameters for the stored procedure here
	@P_CitizenAffairID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_RequestType nvarchar(250) = null,
	@P_ExternalRequestEmailID nvarchar(250) = null,
	@P_NotifyUpon nvarchar(250) = null,
	@P_ApproverDepartmentID nvarchar(250) = null,
	@P_InternalRequestorID nvarchar(250) = null,
	@P_InternalRequestorDepartmentID nvarchar(250) = null,
	--Personal Report
	@P_PersonalReportAge nvarchar(250) = null,
	@P_PersonalReportCity nvarchar(250) = null,
	@P_PersonalReportDestination nvarchar(250) = null,
	@P_PersonalReportEmirates nvarchar(250) = null,
	@P_PersonalReportEmiratesID nvarchar(250) = null,
	@P_PersonalReportEmployer nvarchar(250) = null,
	@P_PersonalReportFindingNotes nvarchar(max) =  null,
	@P_PersonalReportMaritalStatus nvarchar(250) = null,
	@P_PersonalReportMonthlySalary nvarchar(max) = null,
	@P_PersonalReportName nvarchar(250) = null,
	@P_PersonalReportNoOfChildrens nvarchar(250) = null,
	@P_PersonalReportPhoneNumber nvarchar(255) = null,
	@P_PersonalReportRecommendation nvarchar(max) = null,
	@P_PersonalReportReportObjectives nvarchar(max) = null,
	@P_PersonalReport nvarchar(250) = null,
	@P_PersonalProfilePhotoID nvarchar(250) = null,
	@P_PersonalProfilePhotoName nvarchar(250) = null,
	--Field visit
	@P_FieldVisitCity nvarchar(250) = null,
	@P_FieldVisitEmiratesID nvarchar(250) = null,
	@P_FieldVisitDate datetime = null,
	@P_FieldVisitFindingNotes nvarchar(max) = null,
	@P_FieldVisitForWhom nvarchar(250) = null,
	@P_FieldVisitLocation nvarchar(250) = null,
	@P_FieldVisitLocationID nvarchar(250) = null,
	@P_FieldVisitLocationName nvarchar(250) = null,
	@P_FieldVisitName nvarchar(250) = null,
	@P_FieldVisitPhoneNumber nvarchar(255) = null,
	@P_FieldVisitRequetsedBy nvarchar(250) = null,
	@P_FieldVisitVisitObjective nvarchar(max) = null,
	@P_FieldVisitEmirates int  = null,
	@P_FieldVisitCityID int = null,
	 
	
	@P_Action nvarchar(250) = null,
	@P_Comment nvarchar(max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedBy nvarchar(250) = null,
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('CitizenAffair'))

	if(@P_CitizenAffairID is null or @P_CitizenAffairID =0)
	begin
		insert into [dbo].[CitizenAffair] ([SourceOU],[SourceName],[RequestType],[InternalRequestorID],[InternalRequestorDepartmentID],[NotifyUpon],[ExternalRequestEmailID],[DeleteFlag],[CreatedBy],[CreatedDateTime])
		select @P_SourceOU,@P_SourceName,@P_RequestType,@P_InternalRequestorID,@P_InternalRequestorDepartmentID,@P_NotifyUpon,@P_ExternalRequestEmailID,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	
		set @temp = (select SCOPE_IDENTITY());
		set @P_CitizenAffairID = (select SCOPE_IDENTITY());
		select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CA');
	
		update [dbo].[CitizenAffair] set  [ReferenceNumber] = @P_Referencenumber where [CitizenAffairID] = @temp

		if(@P_RequestType = '1')
			begin
			insert into [dbo].[CitizenAffairPersonalReport] ([CitizenAffairID],[Name],[Employer],[Destination],[MonthlySalary],[EmiratesID],[MaritalStatus],[NoOfChildrens],
			[PhoneNumber],[Emirates],[City],[Age],[ReportObjectives],[FindingNotes],[Recommendation],[PersonalProfilePhotoID],[PersonalProfileName])
			select @temp,@P_PersonalReportName,@P_PersonalReportEmployer,@P_PersonalReportDestination,@P_PersonalReportMonthlySalary,
			@P_PersonalReportEmiratesID,@P_PersonalReportMaritalStatus,@P_PersonalReportNoOfChildrens,@P_PersonalReportPhoneNumber,
			@P_PersonalReportEmirates,@P_PersonalReportCity,@P_PersonalReportAge,@P_PersonalReportReportObjectives,@P_PersonalReportFindingNotes,@P_PersonalReportRecommendation,
			@P_PersonalProfilePhotoID,@P_PersonalProfilePhotoName
			
			end

		else if(@P_RequestType = '0')
			begin
			insert into [dbo].[CitizenAffarFieldVisit] ([CitizenAffairID],[Date],[Location],[RequetsedBy],[VisitObjective],[FindingNotes],[ForWhom],[EmiratesID],
			[Name],[PhoneNumber],[City],[LocationName],[LocationID],Emirates,CityID)
			select @temp,@P_FieldVisitDate,@P_FieldVisitLocation,@P_FieldVisitRequetsedBy,@P_FieldVisitVisitObjective,
			@P_FieldVisitFindingNotes,@P_FieldVisitForWhom,@P_FieldVisitEmiratesID,@P_FieldVisitName,
			@P_FieldVisitPhoneNumber,@P_FieldVisitCity,@P_FieldVisitLocationName,@P_FieldVisitLocationID,@P_FieldVisitEmirates,@P_FieldVisitCityID
	
			end

		insert into [dbo].[CitizenAffairHistory](CitizenAffairID,Action,ActionBy,ActionDateTime,Comments)
		select @temp,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

		SELECT top 1 [CitizenAffairID],[ReferenceNumber] as ReferenceNumber,CreatedBy as CreatorID, 
		(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID,(select top 1 Status from [dbo].[Workflow] where 
		[ReferenceNumber] = @P_Referencenumber order by WorkflowID desc) as CurrentStatus,
		[InternalRequestorID] as InternalRequestorID,
		[ExternalRequestEmailID] as ExternalRequestEmail
		from [dbo].[CitizenAffair] order by [CitizenAffairID] desc

	end
	Else
	begin
		update [dbo].[CitizenAffair] set [SourceOU] = @P_SourceOU, [SourceName] = @P_SourceName, [RequestType] = @P_RequestType, [InternalRequestorID] = @P_InternalRequestorID,
		[InternalRequestorDepartmentID] = @P_InternalRequestorDepartmentID, [NotifyUpon] = @P_NotifyUpon, [ExternalRequestEmailID] = @P_ExternalRequestEmailID,
		[DeleteFlag] = @P_DeleteFlag, UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime where [CitizenAffairID] = @P_CitizenAffairID
	
			if(@P_RequestType = '1' and (select [CitizenAffairID] from  [CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID)is not null )
			begin
			update [dbo].[CitizenAffairPersonalReport] set 
			[Name] = @P_PersonalReportName, [Employer] = @P_PersonalReportEmployer, [Destination] = @P_PersonalReportDestination,
			[MonthlySalary] = @P_PersonalReportMonthlySalary, [EmiratesID] = @P_PersonalReportEmiratesID,
			[MaritalStatus] = @P_PersonalReportMaritalStatus, [NoOfChildrens] = @P_PersonalReportNoOfChildrens,
			[PhoneNumber] = @P_PersonalReportPhoneNumber, [Emirates] = @P_PersonalReportEmirates,
			[City] = @P_PersonalReportCity, [Age] = @P_PersonalReportAge, [ReportObjectives] = @P_PersonalReportReportObjectives,
			[FindingNotes] = @P_PersonalReportFindingNotes, [Recommendation] = @P_PersonalReportRecommendation,PersonalProfilePhotoID=@P_PersonalProfilePhotoID,PersonalProfileName=@P_PersonalProfilePhotoName
			where [CitizenAffairID] = @P_CitizenAffairID
			end
		else if(@P_RequestType = '1' and (select [CitizenAffairID] from  [CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID)is  null )
			begin
			insert into [dbo].[CitizenAffairPersonalReport] ([CitizenAffairID],[Name],[Employer],[Destination],[MonthlySalary],[EmiratesID],[MaritalStatus],[NoOfChildrens],
			[PhoneNumber],[Emirates],[City],[Age],[ReportObjectives],[FindingNotes],[Recommendation],[PersonalProfilePhotoID],[PersonalProfileName])
			select @temp,@P_PersonalReportName,@P_PersonalReportEmployer,@P_PersonalReportDestination,@P_PersonalReportMonthlySalary,
			@P_PersonalReportEmiratesID,@P_PersonalReportMaritalStatus,@P_PersonalReportNoOfChildrens,@P_PersonalReportPhoneNumber,
			@P_PersonalReportEmirates,@P_PersonalReportCity,@P_PersonalReportAge,@P_PersonalReportReportObjectives,@P_PersonalReportFindingNotes,@P_PersonalReportRecommendation,
			@P_PersonalProfilePhotoID,@P_PersonalProfilePhotoName
			end

		else if(@P_RequestType = '0' and (select [CitizenAffairID] from [CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID)is not null)
			begin
			update [dbo].[CitizenAffarFieldVisit] set 
			[Date] = @P_FieldVisitDate, [Location] = @P_FieldVisitLocation, [RequetsedBy] = @P_FieldVisitRequetsedBy,
			[VisitObjective] = @P_FieldVisitVisitObjective, [FindingNotes] = @P_FieldVisitFindingNotes, [ForWhom] = @P_FieldVisitForWhom,
			[EmiratesID] = @P_FieldVisitEmiratesID, [Name] = @P_FieldVisitName, [PhoneNumber] = @P_FieldVisitPhoneNumber,
			[City] = @P_FieldVisitCity, [LocationName] = @P_FieldVisitLocationName, [LocationID] = @P_FieldVisitLocationID,
			Emirates=@P_FieldVisitEmirates,CityID = @P_FieldVisitCityID
			where [CitizenAffairID] = @P_CitizenAffairID
			end

		else if(@P_RequestType = '0' and (select [CitizenAffairID] from [CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID)is  null)
			begin
			insert into [dbo].[CitizenAffarFieldVisit] ([CitizenAffairID],[Date],[Location],[RequetsedBy],[VisitObjective],[FindingNotes],[ForWhom],[EmiratesID],
			[Name],[PhoneNumber],[City],[LocationName],[LocationID])
			select @temp,@P_FieldVisitDate,@P_FieldVisitLocation,@P_FieldVisitRequetsedBy,@P_FieldVisitVisitObjective,
			@P_FieldVisitFindingNotes,@P_FieldVisitForWhom,@P_FieldVisitEmiratesID,@P_FieldVisitName,
			@P_FieldVisitPhoneNumber,@P_FieldVisitCity,@P_FieldVisitLocationName,@P_FieldVisitLocationID
			end


			declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 58 or Status = 59) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select a.ReferenceNumber from CitizenAffair as a
	  where CitizenAffairID = @P_CitizenAffairID) and (W.Status = 58 or W.Status = 59 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from CitizenAffair as m where m.CitizenAffairID=@P_CitizenAffairID)) =59)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		insert into [dbo].[CitizenAffairHistory]
		select @temp,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_DelegateUser

		SELECT top 1 [CitizenAffairID],[ReferenceNumber] as ReferenceNumber,CreatedBy as CreatorID, 
		(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID,(select top 1 Status from [dbo].[Workflow] where 
		[ReferenceNumber] = @P_Referencenumber order by WorkflowID desc) as CurrentStatus,
		[InternalRequestorID] as InternalRequestorID,
		[ExternalRequestEmailID] as ExternalRequestEmail
		from [dbo].[CitizenAffair] where [CitizenAffairID] = @P_CitizenAffairID

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [dbo].[CitizenAffair] set  [InitalApproverDepartmentID] = @P_ApproverDepartmentId where [CitizenAffairID] = @P_CitizenAffairID

END
GO
/****** Object:  StoredProcedure [dbo].[Save_CitizenAffairPersonalReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_CitizenAffairPersonalReport]   ******/
CREATE PROCEDURE [dbo].[Save_CitizenAffairPersonalReport]

	@P_PersonalReportID int = null,
	@P_CitizenAffairID nvarchar(255) = null,
	@P_Name nvarchar(255) = null,
	@P_Employer nvarchar(255) = null,
	@P_Destination nvarchar(255) = null,
	@P_MonthlySalary nvarchar(255) = null,
	@P_EmiratesID nvarchar(255) = null,
	@P_MaritalStatus nvarchar(255) = null,
	@P_NoOfChildrens nvarchar(255) = null,
	@P_PhoneNumber nvarchar(255) = null,
	@P_Emirates int,
	@P_City nvarchar(255) = 0,
	@P_Age nvarchar(255) = null,
	@P_ReportObjectives  nvarchar(MAX) = null,
	@P_FindingNotes nvarchar(MAX) = null,
	@P_Recommendation nvarchar(MAX) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	declare @count int  =0;
	set @count = (select count(*) from [CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID)
	set @P_PersonalReportID = (select [PersonalReportID] from [CitizenAffairPersonalReport] where [CitizenAffairID] = @P_CitizenAffairID)

	if(@count is not null or @count = 0)
	begin
	insert into [dbo].[CitizenAffairPersonalReport] ([CitizenAffairID],[Name],[Employer],[Destination],[MonthlySalary],[EmiratesID],[MaritalStatus],[NoOfChildrens]
				,[PhoneNumber],[Emirates],[City],[Age],[ReportObjectives],[FindingNotes],[Recommendation])
	select @P_CitizenAffairID ,@P_Name ,@P_Employer ,@P_Destination ,@P_MonthlySalary ,@P_EmiratesID,@P_MaritalStatus ,@P_NoOfChildrens ,@P_PhoneNumber ,@P_Emirates,
			@P_City,@P_Age ,@P_ReportObjectives,@P_FindingNotes ,@P_Recommendation
			set @P_PersonalReportID =  (SELECT IDENT_CURRENT('CitizenAffairPersonalReport')) 
	
	end
	Else
	begin
	update [dbo].[CitizenAffairPersonalReport] set [CitizenAffairID] =@P_CitizenAffairID ,[Name] =@P_Name ,[Employer] =@P_Employer ,[Destination] =@P_Destination
		 ,[MonthlySalary] =@P_MonthlySalary ,[EmiratesID] =@P_EmiratesID ,[MaritalStatus] =@P_MaritalStatus ,[NoOfChildrens] = @P_NoOfChildrens,
				[PhoneNumber] =@P_PhoneNumber ,[Emirates] =@P_Emirates ,[City] =@P_City ,[Age] =@P_Age ,[ReportObjectives] =@P_ReportObjectives ,[FindingNotes] =@P_FindingNotes 
				,[Recommendation] = @P_Recommendation where [PersonalReportID]=@P_PersonalReportID
	end


	select @P_PersonalReportID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CitizenAffarFieldVisit]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_CitizenAffarFieldVisit]

	@P_CreationFieldID int = null,
	@P_CitizenAffairID nvarchar(255) = null,
	@P_Date datetime = NULL,
	@P_Location nvarchar(255) = NULL,
	@P_RequetsedBy nvarchar(255) = NULL,
	@P_VisitObjective nvarchar(max) = NULL,
	@P_FindingNotes nvarchar(max) = NULL,
	@P_ForWhom nvarchar(10) = NULL,
	@P_EmiratesID nvarchar(255) = NULL,
	@P_Name nvarchar(255) = NULL,
	@P_PhoneNumber nvarchar(255) = NULL,
	@P_City int = NULL,
	@P_LocationName nvarchar(255) = NULL,
	@P_LocationID int = NULL 
	

AS
BEGIN
	
	SET NOCOUNT ON;
	declare @count int  =0;
	set @count = (select count(*) from [CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID)
	set @P_CreationFieldID = (select CreationFieldID from [CitizenAffarFieldVisit] where [CitizenAffairID] = @P_CitizenAffairID)
	if(@count is not null or @count = 0)
	begin
	insert into [dbo].[CitizenAffarFieldVisit] ([CitizenAffairID],[Date],[Location],[RequetsedBy],[VisitObjective],[FindingNotes],[ForWhom],[EmiratesID],[Name],
														[PhoneNumber],[City],[LocationName],[LocationID])
	select	@P_CitizenAffairID, @P_Date,@P_Location ,@P_RequetsedBy ,@P_VisitObjective ,@P_FindingNotes ,@P_ForWhom ,@P_EmiratesID ,
			@P_Name ,@P_PhoneNumber ,@P_City ,@P_LocationName ,@P_LocationID  

			set @P_CreationFieldID = (SELECT IDENT_CURRENT('CitizenAffarFieldVisit'))
	
	end
	Else
	begin
	update [dbo].[CitizenAffarFieldVisit] set [CitizenAffairID]=@P_CitizenAffairID ,[Date]=@P_Date ,[Location]=@P_Location ,[RequetsedBy]=@P_RequetsedBy ,
	[VisitObjective]=@P_VisitObjective ,[FindingNotes]=@P_FindingNotes ,[ForWhom]=@P_ForWhom ,[EmiratesID]=@P_EmiratesID ,[Name]=@P_Name ,[PhoneNumber]=@P_PhoneNumber
	 ,[City]=@P_City ,[LocationName]=@P_LocationName ,[LocationID]=@P_LocationID where [CreationFieldID]=@P_CreationFieldID
	end


	select @P_CreationFieldID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Compensation]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Compensation]

	@P_CompensationID int = null,
	@P_OfficialTaskID	int = null,
    @P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_OfficialTaskType nvarchar(250) = null,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null,
	@P_NumberofDays int = null,
	@P_CompensationDescription nvarchar(250) = null,
	@P_NeedCompensation bit =0,
	@P_Action nvarchar(250) = null,
	@P_Comments nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from Compensation) = 0)
       set @temp = (SELECT IDENT_CURRENT('Compensation'))
	
	else
	set @temp = (SELECT IDENT_CURRENT('Compensation'))+1

	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CO');
        if(@P_CompensationID is null or @P_CompensationID =0)
	begin
	insert into [dbo].[Compensation] ([ReferenceNumber],[OfficialTaskID],[SourceOU],[SourceName],[OfficialTaskType],
	[StartDate],[EndDate],[NumberofDays],[CompensationDescription],[NeedCompensation],[Comments],[DeleteFlag],
	[CreatedBy],[CreatedDateTime])
	select @ReferenceNumber,@P_OfficialTaskID,@P_SourceOU,@P_SourceName,@P_OfficialTaskType,@P_StartDate,
	@P_EndDate,@P_NumberofDays,@P_CompensationDescription,@P_NeedCompensation,@P_Comments,@P_DeleteFlag,@P_CreatedBy,
@P_CreatedDateTime
	set @P_CompensationID = (SELECT IDENT_CURRENT('Compensation'))
     
	insert into [dbo].[CompensationCommunicationHistory](CompensationID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	select @P_CompensationID,@P_Comments,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime
  	
	end
	Else
	begin
	update [dbo].[Compensation] set SourceOU = @P_SourceOU ,
	SourceName = @P_SourceName ,	
	OfficialTaskType = @P_OfficialTaskType,StartDate = @P_StartDate,
	EndDate= @P_EndDate,NumberofDays = @P_NumberofDays,CompensationDescription = @P_CompensationDescription,
	NeedCompensation= @P_NeedCompensation,Comments = @P_Comments,DeleteFlag = @P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CompensationID=@P_CompensationID

		declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 108) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select a.ReferenceNumber from Compensation as a
	  where CompensationID = @P_CompensationID) and (W.Status = 108 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select c.ReferenceNumber from Compensation as c where c.CompensationID=@P_CompensationID)) =108)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end

   	insert into [dbo].[CompensationCommunicationHistory]
	select @P_CompensationID,@P_Comments,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_DelegateUser

	end

	if(@P_Action ='Approve' and (select top(1) Status from [dbo].[Workflow] where [ReferenceNumber]=
	(select[ReferenceNumber] from [dbo].[Compensation] where [CompensationID]= @P_CompensationID) order by[WorkflowID] desc ) = 109)
	update [Compensation] set [IsHrHeadApproved]=1  where [CompensationID]= @P_CompensationID

	SELECT CompensationID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[Compensation]
	where CompensationID=@P_CompensationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CompensationCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_CompensationCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_CompensationID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[CompensationCommunicationHistory](CompensationID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	
		select  @P_CompensationID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('CompensationCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Contact]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_Contact]   ******/
CREATE PROCEDURE [dbo].[Save_Contact]

	@P_ContactID int = null,
	@P_Type nvarchar(250) = null,
	@P_Department nvarchar(250) = null,
	@P_UserName nvarchar(250) = null,
	@P_EntityName nvarchar(250) = null,
	@P_Designation nvarchar(250) = null,
	@P_Section int = null,
	@P_Unit int = null,
	@P_PhoneNumberExtension nvarchar(250) = null,
	@P_EmailId nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_OfficialEntity bit = 0,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_IsGoverenmentEntity int = null,
	@P_ProfilePhotoID nvarchar(250) = null,
	@P_ProfilePhotoName nvarchar(250) = null

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Contact) = 0)
	set @temp = (SELECT IDENT_CURRENT('Contact'))

	else
	set @temp = (SELECT IDENT_CURRENT('Contact'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','CM');
	
	if(@P_ContactID is null or @P_ContactID =0)
	begin
	insert into [dbo].[Contact]
	select @Referencenumber,@P_Type,@P_Department,@P_UserName,@P_EntityName,@P_Designation,@P_EmailId,@P_PhoneNumber,@P_OfficialEntity,
	@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,0,@P_ProfilePhotoID,@P_ProfilePhotoName,@P_Section,@P_Unit,@P_PhoneNumberExtension
	set @P_ContactID = (SELECT IDENT_CURRENT('Contact'))

	insert into [dbo].[ContactHistory]
	select @P_ContactID,'Submitted',@P_CreatedBy,@P_CreatedDateTime,@P_Comment
	end
	Else
	begin
	update [dbo].[Contact] set Department=@P_Department,UserName=@P_UserName,EntityName=@P_EntityName,Designation=@P_Designation,EmailId=@P_EmailId,
	PhoneNumber = @P_PhoneNumber,OfficialEntity = @P_OfficialEntity,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,IsGoverenmentEntity=0
	,ProfilePhotoID=@P_ProfilePhotoID,ProfilePhotoName=@P_ProfilePhotoName,Section = @P_Section,Unit = @P_Unit,PhoneNumberExtension = @P_PhoneNumberExtension where ContactID=@P_ContactID
	insert into [dbo].[ContactHistory]
	select @P_ContactID,'Updated',@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment
	end

	SELECT ContactID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[Contact]
	where ContactID=@P_ContactID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_CVBank]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_CVBank]

	@P_CVBankId int = null,	
	@P_CandidateName nvarchar(250) = null,	
	@P_Specialization int = null,	
	@P_EducationalQualification int = null,	
	@P_Gender nvarchar(250) = null,	
	@P_AreaofExpertise nvarchar(250) = null,	
	@P_YearsofExperience nvarchar(250) = null,	
	@P_CountryOfResidence int = null,
	@P_CityofResidence int = null,
	@P_Address nvarchar(250) = null,
	@P_EmailId nvarchar(250) = null,
	@P_JobTitle nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_ReferenceNumber nvarchar(250) = null
	declare @temp int = null
	if((select count(*) from CVBank) = 0)
	set @temp = (SELECT IDENT_CURRENT('CVBank'))
	else
	set @temp = (SELECT IDENT_CURRENT('CVBank'))+1
	select  @P_ReferenceNumber =concat(@temp,'-',(SELECT YEAR((select GETDATE()))),'-','C');

	if(@P_CVBankId is null or @P_CVBankId =0)
	begin
	insert into [dbo].[CVBank] ([CandidateName],[ReferenceNumber],[Specialization],[EducationalQualification],[Gender],[AreaofExpertise],[YearsofExperience],[CountryofResidence],[CityofResidence],[Address],[EmailId],[JobTitle],[DeleteFlag],[CreatedBy],[CreatedDateTime])
	select @P_CandidateName,@P_ReferenceNumber,@P_Specialization,@P_EducationalQualification,@P_Gender,@P_AreaofExpertise,@P_YearsofExperience,@P_CountryOfResidence,@P_CityofResidence,@P_Address,@P_EmailId,@P_JobTitle,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_CVBankId = (SELECT IDENT_CURRENT('CVBank'))	
	end
	Else
	begin
	update [dbo].[CVBank] set [CandidateName]=@P_CandidateName,[Specialization]=@P_Specialization,[EducationalQualification]=@P_EducationalQualification,[Gender]=@P_Gender,[AreaofExpertise]=@P_AreaofExpertise,[YearsofExperience]=@P_YearsofExperience,[CountryofResidence]=@P_CountryOfResidence,[CityofResidence]=@P_CityofResidence,[Address]=@P_Address,[EmailId]=@P_EmailId,[JobTitle]=@P_JobTitle,[DeleteFlag]=@P_DeleteFlag,[UpdatedBy]=@P_UpdatedBy,[UpdatedDateTime]=@P_UpdatedDateTime
	where CVBankId=@P_CVBankId
	end

	select CVBankId,ReferenceNumber from [CVBank] where CVBankId=@P_CVBankId
END
GO
/****** Object:  StoredProcedure [dbo].[Save_DiwanIdentity]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DiwanIdentity]
	@P_DiwanIdentityID int = null,	
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,	
	@P_PurposeofUse nvarchar (MAX) = null,	
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Date datetime = null,
    @P_DelegateUser int= null,
	@P_ApproverDepartmentId int = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from DiwanIdentity) = 0)
	set @temp = (SELECT IDENT_CURRENT('DiwanIdentity'))
	else
	set @temp = (SELECT IDENT_CURRENT('DiwanIdentity'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MI');


	if(@P_DiwanIdentityID is null or @P_DiwanIdentityID =0)
	begin
	insert into [DiwanIdentity] ([ReferenceNumber],[Date],[SourceOU],[SourceName],[PurposeofUse],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_Referencenumber,@P_Date,@P_SourceOU,@P_SourceName,@P_PurposeofUse,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_DiwanIdentityID = (SELECT IDENT_CURRENT('DiwanIdentity'))

	insert into [dbo].[DiwanIdentityCommunicationHistory](DiwanIdentityID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	select @P_DiwanIdentityID,@P_Comment,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime

	end

	Else

	
	if(@P_DiwanIdentityID is not NUll)
	begin
	update [DiwanIdentity] set Date=@P_Date, SourceOU=@P_SourceOU,SourceName=@P_SourceName,PurposeofUse=@P_PurposeofUse,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where DiwanIdentityID=@P_DiwanIdentityID


	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 100) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W where W.ReferenceNumber =(select c.ReferenceNumber from DiwanIdentity as c
	  where DiwanIdentityID = @P_DiwanIdentityID) and (W.Status = 100) order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select D.ReferenceNumber from DiwanIdentity as D where D.DiwanIdentityID=@P_DiwanIdentityID)) =100)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		insert into [dbo].[DiwanIdentityCommunicationHistory]
	select @P_DiwanIdentityID,@P_Comment,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_DelegateUser

	end

	
	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update  [DiwanIdentity] set  [ApproverDepartmentID] = @P_ApproverDepartmentId where DiwanIdentityID=@P_DiwanIdentityID

	select DiwanIdentityID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [DiwanIdentity] where DiwanIdentityID=@P_DiwanIdentityID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_DiwanIdentityCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DiwanIdentityCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_DiwanIdentityID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[DiwanIdentityCommunicationHistory](DiwanIdentityID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_DiwanIdentityID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('DiwanIdentityCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Documents]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Documents] --'delete',null,60

	@P_Type nvarchar(100) =null,
	@P_AttachmentID int = null,
	@P_AttachmentGuid nvarchar(max) = null,	
	@P_AttachmentsName nvarchar(MAX) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;



	If(@P_Type = 'Delete')
	begin
		update [dbo].[Documents] set DeleteFlag = 1, UpdatedBy=@P_UpdatedBy,UpdatedDateTime=(SELECT GETUTCDATE()) where
		 [AttachmentID] = @P_AttachmentID
	end
	else if(@P_AttachmentID is not null or @P_AttachmentID != 0)
	begin
		update [dbo].[Documents] set AttachmentGuid = @P_AttachmentGuid, AttachmentsName= @P_AttachmentsName, UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=(SELECT GETUTCDATE()) where [AttachmentID] = @P_AttachmentID
	end
	else
	begin
		insert into [dbo].[Documents]
		select @P_Type,@P_AttachmentGuid,@P_AttachmentsName,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,(SELECT GETUTCDATE()),@P_UpdatedDateTime
		set @P_AttachmentID = (SELECT IDENT_CURRENT('Attachments'))
	end
	SELECT @P_AttachmentID
	END
GO
/****** Object:  StoredProcedure [dbo].[Save_Driver]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_Driver]   ******/
Create PROCEDURE [dbo].[Save_Driver]

    @P_DriverID int=null,
	@P_UserProfileID int = null,
    @P_LogDate datetime = null,
	@P_ExtraHours float = null,
	@P_CompensateHours float = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = 0,
	@P_UpdatedBy int = 0,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null

	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Drivers) = 0)
       set @temp = (SELECT IDENT_CURRENT('Drivers'))
	
	
	--set @temp = (SELECT IDENT_CURRENT('Drivers'))+1
	--select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','VD');
        if(@P_DriverID is null or @P_DriverID =0)
	begin
	insert into [dbo].[Drivers]( [UserProfileID]
      ,[LogDate]
      ,[ExtraHours]
      ,[CompensateHours]
      ,[DeleteFlag]
      ,[CreatedBy]
      
      ,[CreatedDateTime]
      )
	select @P_UserProfileID,@P_LogDate,@P_ExtraHours,@P_CompensateHours,
	@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime

	set @P_DriverID = (SELECT IDENT_CURRENT('Drivers'))   

  	--select * from VehicleDetails
	end
	Else
	begin
	update [dbo].[Drivers] set UserProfileID = @P_UserProfileID,LogDate = @P_LogDate , ExtraHours=@P_ExtraHours,CompensateHours=@P_CompensateHours,
	DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where DriverID=@P_DriverID 

	end

	SELECT DriverID as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[Drivers]
	where  DriverID=@P_DriverID 
END
GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTask]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_DutyTask]    ******/
CREATE PROCEDURE [dbo].[Save_DutyTask]
	@P_TaskID int = null,
	@P_SourceOU nvarchar(255) = null,
	@P_SourceName nvarchar(255) = null,
	@P_Title nvarchar(255) = null,
	@P_StartDate datetime  = null,
	@P_EndDate datetime  = null,
	@P_TaskDetails nvarchar(max)= null,
	@P_LinkToMemo nvarchar(max)= null,
	@P_LinkToLetter nvarchar(max)= null,
	@P_Priority nvarchar(255) = null,
	@P_RemindMeAt datetime = null,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_DeleteFlag int = 0,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_AttachmentGuid nvarchar(max) =null,
	@P_AttachmentName nvarchar(max) = null,
	@P_Status int = null,
	@P_AssigneeID int = null,
	@P_DelegateUser int=null,
	@P_DelegateAssignee int=null,
	@P_AssigneeDepartmentId int=null,
	@P_Country int=null,
	@P_Emirates int=null,
	@P_City nvarchar(255)=null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	 declare @P_Referencenumber nvarchar(255) = null,@currentApprover int = null, @DelegateUser int=null
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('DutyTask'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','DT');

	if(@P_Action ='Update')
	set @P_Status = (select [Status] from [DutyTask] where TaskID=@P_TaskID)
	if(@P_Action = 'Submit' or @P_Action='Assign')
	set @P_Status = 30
	if(@P_Action = 'Completed')
	set @P_Status = 31
	if(@P_Action = 'Close')
	set @P_Status = 32


	declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		--select * from @Result

		select @P_DelegateAssignee = [DOANameID] from @Result where Creator = @P_AssigneeID and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

	if(@P_TaskID is null or @P_TaskID =0)
	begin
	insert into [dbo].[DutyTask] 
	([ReferenceNumber],[SourceOU],[SourceName],[Title],[StartDate],[EndDate],[TaskDetails],[Priority],[LinkToMemo],[LinkToLetter],[RemindMeAt],[CreatedBy],[CreatedDateTime],[Status],[AssigneeID],DelegateAssignee,AssigneeDepartment,Country,City,Emirates)
	select @P_Referencenumber,@P_SourceOU,@P_SourceName,@P_Title,@P_StartDate,(SELECT DATEADD(MI,1,(select dateadd(D, datediff(D, 0, @P_EndDate), 0)))),@P_TaskDetails,@P_Priority,@P_LinkToMemo,@P_LinkToLetter, (SELECT DATEADD(MI,1,(select dateadd(D, datediff(D, 0, @P_RemindMeAt), 0)))),@P_CreatedBy,@P_CreatedDateTime,@P_Status,@P_AssigneeID,@P_DelegateAssignee,@P_AssigneeDepartmentId,@P_Country,@P_City,@P_Emirates
	set @P_TaskID = (SELECT IDENT_CURRENT('DutyTask'))

	set @temp = (SELECT IDENT_CURRENT('DutyTask'))
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','DT');

	update DutyTask set [ReferenceNumber] =  @P_Referencenumber where TaskID=@P_TaskID


	insert into [dbo].[DutyTaskCommunicationHistory]([TaskID],[Message],[Action],[AttachmentGuid],
	[AttachmentName],[CreatedBy],[CreatedDateTime])
    select @P_TaskID,@P_Comment,@P_Action,@P_AttachmentGuid,@P_AttachmentName,@P_CreatedBy,@P_CreatedDateTime
	end

	

	
	Else
	if(@P_TaskID is not NUll)
	begin
	update [dbo].[DutyTask]  set  Title=@P_Title,StartDate=@P_StartDate,EndDate=(SELECT DATEADD(MI,1,(select dateadd(D, datediff(D, 0, @P_EndDate), 0)))),TaskDetails=@P_TaskDetails
	,Priority=@P_Priority,RemindMeAt= (SELECT DATEADD(MI,1,(select dateadd(D, datediff(D, 0, @P_RemindMeAt), 0)))),DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,[Status]=@P_Status,[AssigneeID]=@P_AssigneeID
	,[LinkToMemo]=@P_LinkToMemo,[LinkToLetter]=@P_LinkToLetter,DelegateAssignee=@P_DelegateAssignee,AssigneeDepartment=@P_AssigneeDepartmentId,Country=@P_Country,City=@P_City,Emirates=@P_Emirates
	where TaskID=@P_TaskID

		if(@P_UpdatedBy = @P_DelegateAssignee and @P_Action = 'Completed')
			insert into [dbo].[DutyTaskCommunicationHistory]
			 select @P_TaskID,@P_Comment,@P_Action,@P_AttachmentGuid,@P_AttachmentName,@P_AssigneeID,@P_UpdatedDateTime,@P_UpdatedBy
		 else 
			insert into [dbo].[DutyTaskCommunicationHistory]
			 select @P_TaskID,@P_Comment,@P_Action,@P_AttachmentGuid,@P_AttachmentName,@P_UpdatedBy,@P_UpdatedDateTime,null


	end
	select TaskID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from  [dbo].[DutyTask] where TaskID=@P_TaskID
	

end
GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_DutyTaskID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null,
	@P_AttachmentGuid nvarchar(max) =null,
	@P_AttachmentName nvarchar(max) = null
AS
BEGIN	
	SET NOCOUNT ON;
	--if(@P_CommunicationID is null or @P_CommunicationID =0)
	--begin
		insert into [dbo].[DutyTaskCommunicationHistory]([TaskID],[Message],Action,[AttachmentGuid],
		[AttachmentName],[CreatedBy],[CreatedDateTime])
		select  @P_DutyTaskID,@P_Message,null,@P_AttachmentGuid,@P_AttachmentName,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('DutyTaskCommunicationHistory'))
	--end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskLabels]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskLabels] --15,null,null,null,0 --select * from DutyTaskLabel

	@P_DutyTaskLabelsID int = null,
	@P_DutyTaskID int = null,	
	@P_UserID int = null,
	@P_Labels nvarchar(250) = null,
	@P_Type int = null,
	@P_DateTime datetime = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type = 1)
	begin
	insert into [dbo].[DutyTaskLabel] ([TaskID],[UserID],[Labels],[CreatedBy],[CreatedDateTime],[DeleteFlag])
	select @P_DutyTaskID,@P_UserID,@P_Labels,@P_UserID,@P_DateTime,0
	set @P_DutyTaskLabelsID = (SELECT IDENT_CURRENT('DutyTaskLabel'))
	end
	
	if(@P_Type >1)
	begin
	update [dbo].[DutyTaskLabel] set [DeleteFlag] =1,UpdatedBy=@P_UserID,UpdatedDateTime=@P_DateTime
	where[TaskID]=@P_DutyTaskID and [Labels] = @P_Labels
	end

	SELECT @P_DutyTaskLabelsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskLinkToLetter]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskLinkToLetter] --15,null,null,null,0

	@P_TaskID int = null,	
	@P_ReferenceNumber nvarchar(250) = null,
	@P_Type nvarchar(100) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type ='Delete')
	begin
		update [dbo].[DutyTaskLinkToLetter] set [DeleteFlag] = 1,[UpdatedDatetime]=(select GETUTCDATE())  where [LetterReferenceNo] not in(select value from string_split(@P_ReferenceNumber,',')) and TaskID = @P_TaskID
	end
	else if(@P_ReferenceNumber not in (select [LetterReferenceNo] from [DutyTaskLinkToLetter] where TaskID = @P_TaskID and DeleteFlag=0))
	begin
		insert into [DutyTaskLinkToLetter] ([TaskID],[LetterReferenceNo],[CreatedDatetime],[DeleteFlag])
			select @P_TaskID,@P_ReferenceNumber,(select GETUTCDATE()),0
	end


END



GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskLinkToMeeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,> select * from [DutyTaskLinkToMemo]
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_DutyTaskLinkToMeeting] --  [Save_DutyTaskLinkToMemo] 13,'M1,M2','Delete'

	@P_TaskID int = null,	
	@P_ReferenceNumber nvarchar(250) = null,
	@P_Type nvarchar(100) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type ='Delete')
	begin
		update [dbo].[DutyTaskLinkToMeeting] set [DeleteFlag] = 1,[UpdatedDatetime]=(select GETUTCDATE())  where [MeetingReferenceNo] not in(select value from string_split(@P_ReferenceNumber,',')) and TaskID = @P_TaskID
	end
	else if(@P_ReferenceNumber not in (select [MeetingReferenceNo] from [dbo].[DutyTaskLinkToMeeting] where TaskID = @P_TaskID and DeleteFlag=0))
	begin

		insert into [dbo].[DutyTaskLinkToMeeting] ([TaskID],[MeetingReferenceNo],[CreatedDatetime],[DeleteFlag])
			select @P_TaskID,@P_ReferenceNumber,(select GETUTCDATE()),0
	end


END



GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskLinkToMemo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,> select * from [DutyTaskLinkToMemo]
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskLinkToMemo] --  [Save_DutyTaskLinkToMemo] 13,'M1,M2','Delete'

	@P_TaskID int = null,	
	@P_ReferenceNumber nvarchar(250) = null,
	@P_Type nvarchar(100) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type ='Delete')
	begin
		update [dbo].[DutyTaskLinkToMemo] set [DeleteFlag] = 1,[UpdatedDatetime]=(select GETUTCDATE())  where [MemoReferenceNo] not in(select value from string_split(@P_ReferenceNumber,',')) and TaskID = @P_TaskID
	end
	else if(@P_ReferenceNumber not in (select [MemoReferenceNo] from [DutyTaskLinkToMemo] where TaskID = @P_TaskID and DeleteFlag=0))
	begin

		insert into [DutyTaskLinkToMemo] ([TaskID],[MemoReferenceNo],[CreatedDatetime],[DeleteFlag])
			select @P_TaskID,@P_ReferenceNumber,(select GETUTCDATE()),0
	end


END



GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskResponsibleDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskResponsibleDepartment]-- null,42,'',

	@P_ResponsibleID int = null,
	@P_DutyTaskID int = null,	
	@P_ResponsibleDepartmentID int = 0,
	@P_Type int =0,
	@P_UserID int = 0,
	@P_ActionDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_DutyTaskID is not null)
	update DutyTaskResponsibleDepartment set [DeleteFlag]=1,UpdatedBy=@P_UserID,UpdatedDateTime=@P_ActionDateTime  where TaskID = @P_DutyTaskID and ResponsibleDepartmentID=@P_ResponsibleDepartmentID


	if(@P_Type = 1 and @P_DutyTaskID is not null)	
	begin
	insert into DutyTaskResponsibleDepartment
	select @P_DutyTaskID,@P_ResponsibleDepartmentID,@P_UserID,@P_ActionDateTime,null,null,0
	set @P_ResponsibleID = (SELECT IDENT_CURRENT('DutyTaskResponsibleDepartment'))
	end
		
END

GO
/****** Object:  StoredProcedure [dbo].[Save_DutyTaskResponsibleUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_DutyTaskResponsibleUsers]-- null,42,'',

	@P_ResponsibleID int = null,
	@P_DutyTaskID int = null,	
	@P_ResponsibleUsersID int = 0,
	@P_Type int =0,
	@P_UserID int = 0,
	@P_ActionDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_DutyTaskID is not null)
	update DutyTaskResponsibleUsers set [DeleteFlag]=1,UpdatedBy=@P_UserID,UpdatedDateTime=@P_ActionDateTime  where TaskID = @P_DutyTaskID and ResponsibleUsersID=@P_ResponsibleUsersID


	if(@P_Type = 1 and @P_DutyTaskID is not null)	
	begin
	insert into DutyTaskResponsibleUsers
	select @P_DutyTaskID,@P_ResponsibleUsersID,@P_UserID,@P_ActionDateTime,null,null,0
	set @P_ResponsibleID = (SELECT IDENT_CURRENT('DutyTaskResponsibleUsers'))
	end
		
END

GO
/****** Object:  StoredProcedure [dbo].[Save_Event]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Event]

	@P_EventID int = null,	
	@P_EventCreationType nvarchar(250) = null,
	@P_EventType nvarchar(250) = null,
	@P_EventName nvarchar(250) = null,	
	@P_EventDetails nvarchar(250) = null,	
	@P_FromDate datetime = null,
	@P_ToDate datetime = null,
	@P_AllDay nvarchar (250) = null,
	@P_Location nvarchar (250) = null,
	@P_Approver nvarchar (250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_EventID is null or @P_EventID =0)
	begin
	insert into [dbo].[Event]
	select @P_EventCreationType,@P_EventType,@P_EventName,@P_Approver,@P_EventDetails,@P_FromDate,@P_ToDate,@P_AllDay,@P_Location,@P_Approver,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_EventID = (SELECT IDENT_CURRENT('Event'))
	end
	Else
	begin
	update [dbo].[Event] set EventCreationType=@P_EventCreationType,EventType=@P_EventType,EventName=@P_EventName,EventDetails=@P_EventDetails,FromDate=@P_FromDate,ToDate=@P_ToDate,AllDay=@P_AllDay,Location=@P_Location,Approver=@P_Approver,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where EventID=@P_EventID
	end

	SELECT @P_EventID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Gift]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Gift]

	@P_GiftID int = null,
	@P_ReferenceNumber nvarchar(250) = null,	
	@P_GiftType nvarchar(250) = null,
	@P_ReceivedFromOrganization nvarchar(255) = null,	
	@P_ReceivedFromName nvarchar(255) = null,	
	@P_ReceivedDate datetime = null,	
	@P_PurchasedToOrganization nvarchar(255) = null,
	@P_PurchasedToName nvarchar(255) = null,
	@P_PurchasedBy int = null,
	@P_HandedOverTo nvarchar(255) = null,
	@P_HandedOverDate datetime = null,
	@P_Action nvarchar(255) = null,
	@P_CreatedBy int = null,
	@P_UpdatedBy int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Comments nvarchar(max) = null


AS
BEGIN
	
	SET NOCOUNT ON;

	declare @Status int =0;

	if(@P_Action = 'Submit' and @P_GiftType='1')
	set @Status = 116;
	if(@P_Action = 'Submit' and @P_GiftType='2')
	set @Status = 117;
	if(@P_Action = 'SendforDelivery')
	set @Status = 118;
	if(@P_Action = 'DeliveryConfirmed')
	set @Status = 119;

	if(@P_Action = 'DeliveryConfirmed')
	begin
		update [dbo].[Gift] set HandedOverTo=@P_HandedOverTo, HandedOverDate=@P_HandedOverDate, UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime,Status=@Status where GiftID=@P_GiftID

		insert into [dbo].[GiftHistory] (GiftID,Action,ActionBy,ActionDateTime,Comments)
		select @P_GiftID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comments
	end
	else if(@P_Action = 'SendforDelivery')
	begin
		update [dbo].[Gift] set Status=@Status where GiftID=@P_GiftID
		insert into [dbo].[GiftHistory] (GiftID,Action,ActionBy,ActionDateTime,Comments)
		select @P_GiftID,@P_Action,(select CreatedBy from Gift where GiftID=@P_GiftID),(select GETUTCDATE()),@P_Comments
	end
	else if((@P_GiftID is null or @P_GiftID =0) and @P_Action != 'DeliveryConfirmed')
	begin
		insert into [dbo].[Gift] (GiftType,ReceivedFromOrganization,ReceivedFromName,ReceivedDate,PurchasedToOrganization,PurchasedToName,
							PurchasedBy,Status,IsSend,CreatedBy,CreatedDateTime)
		select  @P_GiftType,@P_ReceivedFromOrganization,@P_ReceivedFromName,@P_ReceivedDate,@P_PurchasedToOrganization,@P_PurchasedToName,
		@P_PurchasedBy,@Status,0,@P_CreatedBy,@P_CreatedDateTime
		set @P_GiftID = (SELECT IDENT_CURRENT('Gift'))
		update [dbo].[Gift] set ReferenceNumber = (concat((Right(concat('0','0',@P_GiftID),3)),'-',(SELECT YEAR((select GETDATE()))),'-','GM')) where GiftID =@P_GiftID
		insert into [dbo].[GiftHistory] (GiftID,Action,ActionBy,ActionDateTime,Comments)
		select @P_GiftID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comments
	end
	Else if (@P_Action != 'DeliveryConfirmed')
	begin
		update [dbo].[Gift] set GiftType=@P_GiftType,ReceivedFromOrganization=@P_ReceivedFromOrganization,ReceivedFromName=@P_ReceivedFromName,
		ReceivedDate=@P_ReceivedDate,PurchasedToOrganization=@P_PurchasedToOrganization,PurchasedToName=@P_PurchasedToName,
		 PurchasedBy=@P_PurchasedBy,Status=@Status,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
		where GiftID=@P_GiftID
		insert into [dbo].[GiftHistory] (GiftID,Action,ActionBy,ActionDateTime,Comments)
		select @P_GiftID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comments
	end

	


	SELECT Status,ReferenceNumber,GiftID from Gift where GiftID=@P_GiftID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_HardwareMovement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_HardwareMovement]

	@P_HardwareMovementID int = null,
	@P_ServicedeskReferenceNumber nvarchar(250) = null,
	@P_MovementType nvarchar(250) = null,	
	@P_EmployeeName nvarchar(250) = null,
	@P_EmployeeDepartment nvarchar(MAX) = null,
	@P_CompanyName nvarchar(250) = null,
	@P_ApproverName nvarchar(250) = null,	
	@P_ApproverDepartment nvarchar(250) = null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_HardwareMovementID is null or @P_HardwareMovementID =0)
	begin
	insert into [dbo].[HardwareMovement]
	select @P_ServicedeskReferenceNumber,@P_MovementType,@P_EmployeeName,@P_EmployeeDepartment,@P_CompanyName,@P_ApproverName,@P_ApproverDepartment,@P_Comment,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_HardwareMovementID = (SELECT IDENT_CURRENT('HardwareMovement'))
	end
	Else
	begin
	update [dbo].[HardwareMovement] set ServicedeskReferenceNumber=@P_ServicedeskReferenceNumber,MovementType=@P_MovementType,EmployeeName=@P_EmployeeName,EmployeeDepartment=@P_EmployeeDepartment,CompanyName=@P_CompanyName,ApproverName=@P_ApproverName,ApproverDepartment=@P_ApproverDepartment,Comment=@P_Comment,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where HardwareMovementID=@P_HardwareMovementID
	end

	SELECT @P_HardwareMovementID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_HRComplaintSuggestions]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_HRComplaintSuggestions]

	@P_HRComplaintSuggestionsID int = null,
	@P_Type nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_Details nvarchar(max) = null,
	@P_RequestCreatedBy nvarchar(250) = null,
	@P_MailID nvarchar(250) = null,
	@P_PhoneNumber nvarchar(250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ActionTaken nvarchar(max) = null,
	@P_Source  nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
		if((select count(*) from HRComplaintSuggestions) = 0)
	set @temp = (SELECT IDENT_CURRENT('HRComplaintSuggestions'))

	else
	set @temp = (SELECT IDENT_CURRENT('HRComplaintSuggestions'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','HRCS');
	
	if(@P_HRComplaintSuggestionsID is null or @P_HRComplaintSuggestionsID =0)
	begin

	select @P_Source = EmployeeName from [dbo].[UserProfile] where UserProfileId = @P_CreatedBy

	insert into [dbo].[HRComplaintSuggestions]
	select @Referencenumber,@P_Source,@P_Type,@P_Subject,@P_Details,@P_RequestCreatedBy,@P_MailID,@P_PhoneNumber,@P_ActionTaken,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_HRComplaintSuggestionsID = (SELECT IDENT_CURRENT('HRComplaintSuggestions'))

	insert into [dbo].[HRComplaintSuggestionsHistory]
	select @P_HRComplaintSuggestionsID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment
	end
	Else
	begin
	update [dbo].[HRComplaintSuggestions] set Type = @P_Type,Subject=@P_Subject,Details=@P_Details,RequestCreatedBy=@P_RequestCreatedBy,MailID=@P_MailID,
	PhoneNumber = @P_PhoneNumber,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,ActionTaken=@P_ActionTaken
	where HRComplaintSuggestionsID=@P_HRComplaintSuggestionsID
	insert into [dbo].[HRComplaintSuggestionsHistory]
	select @P_HRComplaintSuggestionsID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment
	end

	SELECT HRComplaintSuggestionsID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[HRComplaintSuggestions]
	where HRComplaintSuggestionsID=@P_HRComplaintSuggestionsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_ITSupport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_ITSupport]  
	-- Add the parameters for the stored procedure here
	@P_ITSupportID int = null,
	@P_Date datetime = null,
	@P_SourceOU nvarchar(255) = null,
	@P_SourceName nvarchar(255) = null,
	@P_Subject nvarchar (255) = null,
	@P_RequestorDepartment nvarchar(255)= null,
	@P_RequestorName nvarchar(255)= null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy  int= null,
	@P_UpdatedBy  int = null, 
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_RequestDetails nvarchar(Max) = null,
	@P_RequestType nvarchar(100)= null,
	@P_Priority bit = 0,
	@P_Action nvarchar(255)=null,
	@P_ActionDatetime  datetime = null,
	@P_Comments nvarchar(100)= null

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		 declare @P_ReferenceNumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*)from  ITSupport)=0)
	set @temp = (SELECT IDENT_CURRENT('ITSupport'))
	else
	set @temp = (SELECT IDENT_CURRENT('ITSupport'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','I');

	if(@P_ITSupportID is null or @P_ITSupportID =0)
	begin
	insert into [ITSupport] ([ReferenceNumber],[Date],[SourceOU],[SourceName],[Subject],[RequestorDepartment],[RequestorName],[DeleteFlag], [CreatedBy] ,[CreatedDateTime],[RequestDetails],[RequestType],[Priority])
	select @P_Referencenumber,@P_Date,@P_SourceOU,@P_SourceName,@P_Subject,@P_RequestorDepartment,@P_RequestorName,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_RequestDetails,@P_RequestType,@P_Priority
	set @P_ITSupportID = (SELECT IDENT_CURRENT('ITSupport'))


	set @temp = (SELECT IDENT_CURRENT('ITSupport'))
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','I');

	update [ITSupport] set ReferenceNumber=@P_ReferenceNumber where ITSupportID=@P_ITSupportID

	insert into [dbo].[ITSupportHistoryLog]([ITSupportID],[Action],[ActionBy],[ActionDatetime],[Comments])
	select @P_ITSupportID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comments
    end
Else

	
	if(@P_ITSupportID is not NUll)
	begin
	update [ITSupport] set  Date=@P_Date,SourceOU=@P_SourceOU,SourceName=@P_SourceName,Subject=@P_Subject,RequestorDepartment=@P_RequestorDepartment,RequestorName=@P_RequestorName,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,RequestDetails=@P_RequestDetails,RequestType=@P_RequestType,Priority=@P_Priority
	where ITSupportID=@P_ITSupportID
	insert into [dbo].[ITSupportHistoryLog]([ITSupportID],[Action],[ActionBy],[ActionDatetime],[Comments])
	select @P_ITSupportID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comments

	end

select ITSupportID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [ITSupport] where ITSupportID=@P_ITSupportID
END

/****** Object:  StoredProcedure [dbo].[Save_Leave]    Script Date: 10-09-2019 3.50.45 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Save_Leave]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_Leave]  ******/
CREATE PROCEDURE [dbo].[Save_Leave]
	@P_LeaveID int = 0,	
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_LeaveType nvarchar (250) = null,
	@P_Reason nvarchar (MAX) = null,
	@P_DOANameID int = null,
	@P_DOADepartmentID int = null,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null,
	@P_BalanceLeave nvarchar (250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null,
	@P_ApproverDepartmentID int = null,
	@P_LeaveTypeOther int = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	 declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from Leave) = 0)
	set @temp = (SELECT IDENT_CURRENT('Leave'))
	else
	set @temp = (SELECT IDENT_CURRENT('Leave'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','LR');

	if(@P_LeaveID is null or @P_LeaveID =0)
	begin
	insert into [Leave] ([ReferenceNumber],[SourceOU],[SourceName],[LeaveType],[Reason],[DOANameID],[DOADepartmentID],[StartDate],[EndDate],[BalanceLeave],[DeleteFlag], [CreatedBy] ,[CreatedDateTime],LeaveTypeOther)
	select @P_Referencenumber,@P_SourceOU,@P_SourceName,@P_LeaveType,@P_Reason,@P_DOANameID,@P_DOADepartmentID,@P_StartDate,@P_EndDate,@P_BalanceLeave,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime, @P_LeaveTypeOther
	set @P_LeaveID = (SELECT IDENT_CURRENT('Leave'))

	insert into [dbo].[LeaveCommunicationHistory](LeaveID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	select @P_LeaveID,@P_Comment,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime

	end

	Else

	
	if(@P_LeaveID is not NUll)
	begin
	update [Leave] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,LeaveType=@P_LeaveType,Reason=@P_Reason,DOANameID=@P_DOANameID,DOADepartmentID=@P_DOADepartmentID,StartDate=@P_StartDate,EndDate=@P_EndDate,BalanceLeave=@P_BalanceLeave,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
						,LeaveTypeOther = @P_LeaveTypeOther
	where LeaveID=@P_LeaveID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 7) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select a.ReferenceNumber from leave a 
	  where LeaveID = @P_LeaveID) and ( W.Status = 7 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(Select l.ReferenceNumber from Leave l where l.LeaveID=@P_LeaveID)) =7)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		
		insert into [dbo].[LeaveCommunicationHistory]
	select @P_leaveID,@P_Comment,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_DelegateUser

	end
		
	if(@P_Action ='Approve' and (select top(1) Status from [dbo].[Workflow] where [ReferenceNumber]=
	(select[ReferenceNumber] from [dbo].[Leave] where [LeaveID]= @P_LeaveID) order by[WorkflowID] desc ) = 8)
	update [Leave] set [IsHrHeadApproved]=1  where [LeaveID]= @P_LeaveID
	
	 if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [Leave] set [ApproverDepartmentID] = @P_ApproverDepartmentId where LeaveID=@P_LeaveID

	if(@P_Action = 'Close' and @P_LeaveType ='0' )
	begin
		DECLARE @P_Creator int, @P_Days int =0; declare @P_StartDateT datetime, @P_EndDateT datetime = null;
		select @P_Creator=CreatedBy,@P_StartDateT = StartDate,@P_EndDateT =EndDate from Leave where LeaveID=@P_LeaveID;
		SELECT @P_Days = DATEDIFF(DAY, @P_StartDateT, @P_EndDateT);

		update UserProfile set BalanceLeave = BalanceLeave-@P_Days where UserProfileId = @P_Creator
	end

	select LeaveID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Leave] where LeaveID=@P_LeaveID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LeaveCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_LeaveCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_LeaveID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[LeaveCommunicationHistory](LeaveID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_LeaveID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('LeaveCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Legal]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Legal]

	@P_LegalID int = null,
    @P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_RequestDetails nvarchar(max) = null,	
	@P_Comments nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Action nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Legal) = 0)
       set @temp = (SELECT IDENT_CURRENT('Legal'))
	
	else
	set @temp = (SELECT IDENT_CURRENT('Legal'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','LM');
        if(@P_LegalID is null or @P_LegalID =0)
	begin
	insert into [dbo].[Legal]
	select @ReferenceNumber,@P_SourceOU,@P_SourceName,@P_Subject,@P_RequestDetails,@P_Comments,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_LegalID = (SELECT IDENT_CURRENT('Legal'))
     
	insert into [dbo].[LegalCommunicationHistory]
	select @P_LegalID,@P_Comments,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime
  	
	end
	Else
	begin
	update [dbo].[Legal] set SourceOU = @P_SourceOU ,SourceName = @P_SourceName , Subject=@P_Subject,RequestDetails=@P_RequestDetails,Comments=@P_Comments,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LegalID=@P_LegalID

   	insert into [dbo].[LegalCommunicationHistory]
	select @P_LegalID,@P_Comments,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime

	end

	SELECT LegalID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[Legal]
	where LegalID=@P_LegalID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LegalCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_LegalCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_LegalID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[LegalCommunicationHistory]
		select  @P_LegalID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('LegalCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LegalKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Save_LegalKeywords] --15,null,null,null,0

	@P_LegalKeywordsID int = null,
	@P_LegalID int = 1,	
	@P_UserID int = 1,
	@P_Keywords nvarchar(250) = null,
	@P_Type int = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	update [LegalKeywords] set DeleteFlag =1 where LegalKeywordsID  in 
		(select D.LegalKeywordsID from LegalKeywords as D where D.LegalID = @P_LegalID and DeleteFlag=0  
			and D.Keywords not in (select value from string_split(@P_Keywords,';')))

	insert into [dbo].[LegalKeywords]
	select @P_LegalID,@P_UserID, value,0 from string_split(@P_Keywords,';') where value not in (select L.Keywords from LegalKeywords as L where L.LegalID= @P_LegalID)
	
	SELECT @P_LegalKeywordsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInbound]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_LetterInbound]   ******/
CREATE PROCEDURE [dbo].[Save_LetterInbound] -- exec [Save_LetterInbound] 0,'bcwufewe','ewfrwerw','wfrefewr','2019-06-25','dew','fdfe','strfefwerwing',
	-- Add the parameters for the stored procedure here

	@P_LetterID int = null,
	@P_Title nvarchar(Max) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_ReceivingDate datetime = null,
	@P_ReceivedFromGovernmentEntity nvarchar(250) = null,
	@P_ReceivedFromName nvarchar (255) = null,
	@P_RelatedToIncomingLetter nvarchar(250) = null,
	@P_LetterDetails nvarchar(MAX) = null,
	@P_Notes nvarchar(MAX) = null,
	@P_DocumentClassification nvarchar(MAX) = null,

	@P_Priority nvarchar(250) = null,
	@P_NeedReply bit = null,
	@P_LetterPhysicallySend bit = null,
	@P_ApproverDepartmentId int = 0,
	@P_Action nvarchar(100) = null,
	@P_Comment nvarchar(Max) = null,
	
	@P_CreatedBy int = null,
	
	@P_CreatedDateTime datetime = null,
	@P_DeleteFlag bit = 0,
	@P_UpdatedBy  int = null,
	@P_UpdatedDateTime datetime = null,
	@P_DelegateUser int=null,
	@P_ReceivedFromEntityID int =0,
	@P_IsGovernmentEntity bit = false

	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @P_Referencenumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	declare @UpdatedEmail nvarchar(250),@WorkflowRef nvarchar(250)
	 set @UpdatedEmail=(select officialMailID from UserProfile where UserProfileId=@P_UpdatedBy)
	--set @temp = (SELECT IDENT_CURRENT('LettersInbound'))
	--select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','IL');

	--SELECT MAX([LetterID]) FROM LettersInbound

	if(@P_LetterID is null or @P_LetterID =0)
	begin
	insert into [LettersInbound] ([LetterTitle],[SourceOU],[SourceName],[LetterDetails],[Priority],
	[DeleteFlag], [CreatedBy] ,[CreatedDateTime],[ReceivingDate],IsGovernmentEntity,
	ReceivedFromEntityID,[RelatedToIncomingLetter],[Notes],[DocumentClassification],[NeedReply],[LetterPhysicallySend],ReceivedFromName)
	select @P_Title,@P_SourceOU,@P_SourceName,@P_LetterDetails,@P_Priority,
	@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_ReceivingDate,@P_IsGovernmentEntity,
	@P_ReceivedFromEntityID,@P_RelatedToIncomingLetter,@P_Notes,@P_DocumentClassification,@P_NeedReply,@P_LetterPhysicallySend,@P_ReceivedFromName

	set @temp = (select SCOPE_IDENTITY());
	set @P_LetterID = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','IL');
	
	update [dbo].[LettersInbound]  set  [LetterReferenceID]=@P_Referencenumber where [LetterID]=@temp

	insert into [dbo].[LettersInboundHistory]([LetterID],[Action],[ActionBy],[ActionDateTime],[Comments])
	select @temp,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

	select [LetterID],[LetterReferenceID] as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [LettersInbound] where [LetterID]=@temp

	end

	Else

	
	if(@P_LetterID is not NUll)
	begin
	update [LettersInbound] set [LetterTitle]=@P_Title,SourceOU=@P_SourceOU,SourceName=@P_SourceName,[LetterDetails]=@P_LetterDetails,[Priority]=@P_Priority,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,
	[ReceivingDate]=@P_ReceivingDate,IsGovernmentEntity=@P_IsGovernmentEntity,ReceivedFromEntityID=@P_ReceivedFromEntityID,
	[RelatedToIncomingLetter]=@P_RelatedToIncomingLetter,[Notes]=@P_Notes,[DocumentClassification]=@P_DocumentClassification,
	[NeedReply]=@P_NeedReply,[LetterPhysicallySend]=@P_LetterPhysicallySend,ReceivedFromName = @P_ReceivedFromName
	where [LetterID]=@P_LetterID

	set @WorkflowRef = (select LetterReferenceID from LettersInbound where LetterID=@P_LetterID)

		Update [Workflow]  set IsRedirect=1 where ToEmail=@UpdatedEmail AND
 ReferenceNumber =@WorkflowRef and (WorkflowProcess='RedirectWorkflow' or WorkflowProcess='ApprovalWorkflow') and Status=26 and @P_Action='Redirect'

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 24 or Status = 25) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.LetterReferenceID from LettersInbound as c
	  where LetterID = @P_LetterID) and (W.Status = 24 or W.Status = 25)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow  where ReferenceNumber = (select LetterReferenceID from LettersInbound where LetterID=@P_LetterID)) =25)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end

		
	insert into [dbo].[LettersInboundHistory]
	select @P_LetterID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_DelegateUser

	select [LetterID],[LetterReferenceID] as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [LettersInbound] where [LetterID]=@P_LetterID

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [LettersInbound] set [InitialApproverDepartment] = @P_ApproverDepartmentId where  [LetterID]=@P_LetterID

	
	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInbound_RelatedOutgoing]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Save_LetterInbound_RelatedOutgoing] --15,null,null,null,0

	@P_LetterOutgoingReleated int = null,
	@P_LetterID int = null,	
	@P_OutgoingLetterReferenceNo nvarchar(250) = null,
	@P_Type nvarchar(100) = null,
	@P_CreatedDatetime datetime = null,
	@P_UpdatedDatetime datetime = null,
	@P_LetterType int = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type ='Delete')
	begin
		IF(@P_OutgoingLetterReferenceNo IS  NULL OR @P_OutgoingLetterReferenceNo ='')
		update LettersInbound_RelatedOutgoing set DeleteFlag = 1 
		where [LetterType]=@P_LetterType and LetterID=@P_LetterID	
		else
		update LettersInbound_RelatedOutgoing set DeleteFlag = 1 
		where OutgoingLetterReferenceNo not in (select value from string_split(@P_OutgoingLetterReferenceNo,','))
		and [LetterType]=@P_LetterType and LetterID=@P_LetterID
	end

	else
	begin
		if((select count(*) from LettersInbound_RelatedOutgoing 
			where LetterID=@P_LetterID and OutgoingLetterReferenceNo = @P_OutgoingLetterReferenceNo and[LetterType]=@P_LetterType and DeleteFlag = 0 )!=1)
			insert into LettersInbound_RelatedOutgoing
			select @P_LetterID,@P_OutgoingLetterReferenceNo,@P_LetterType,@P_CreatedDatetime,@P_UpdatedDatetime,0
	end
END


GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInboundClone]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Save_LetterInboundClone]    ******/
CREATE PROCEDURE [dbo].[Save_LetterInboundClone] 
	-- Add the parameters for the stored procedure here
	@P_UserID int=0,
	@P_LetterID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @temp int = null,  @P_Referencenumber nvarchar(255) = null;

insert into [LettersInbound] ([LetterReferenceID],ReceivedFromEntityID,IsGovernmentEntity,[SourceOU],[SourceName] ,[LetterTitle] ,[ReceivingDate],
[InitialApproverDepartment] ,[RelatedToIncomingLetter] ,[LetterDetails],[Notes] ,[DocumentClassification]
,[Priority],[NeedReply] ,[LetterPhysicallySend] ,[DeleteFlag],[CreatedBy] ,[CreatedDateTime] ,[LetterType], ReceivedFromName)
select [LetterReferenceID],ReceivedFromEntityID,IsGovernmentEntity,[SourceOU],[SourceName] ,[LetterTitle] ,[ReceivingDate],
[InitialApproverDepartment] ,[RelatedToIncomingLetter] ,[LetterDetails],[Notes] ,[DocumentClassification]
,[Priority],[NeedReply] ,[LetterPhysicallySend] ,[DeleteFlag],[CreatedBy] , (select GETUTCDATE())  ,[LetterType],ReceivedFromName from [LettersInbound] where @P_LetterID=LetterID
	set @temp = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','IL');
	
	update [dbo].[LettersInbound]  set  [LetterReferenceID]=@P_Referencenumber where [LetterID]=@temp

	insert into [dbo].[LettersInboundHistory]([LetterID],Action,ActionBy,ActionDateTime,Comments)
	select @temp,'Clone',@P_UserID,(select GETUTCDATE()) ,''

insert into [LettersInbound_RelatedOutgoing]([LetterID],LetterType,[OutgoingLetterReferenceNo],[CreatedDatetime],[DeleteFlag])
			select @temp,LetterType,[OutgoingLetterReferenceNo],(select GETUTCDATE()),0 from [dbo].[LettersInbound_RelatedOutgoing] where [LetterID]=@P_LetterID and DeleteFlag =0

insert into [dbo].[LettersInboundDestinationDepartment]([LetterID],[DepartmentID],[DeleteFlag])
			select @temp,[DepartmentID],0 from [dbo].[LettersInboundDestinationDepartment] where [LetterID]=@P_LetterID and DeleteFlag =0

insert into [dbo].[LettersInboundDestinationUsers]([LetterID],[UserID],[DeleteFlag])
			select @temp,[UserID],0 from [dbo].[LettersInboundDestinationUsers] where [LetterID]=@P_LetterID and DeleteFlag =0
			
insert into [dbo].[LettersInboundKeywords]([LetterID],[UserID],[Keywords],[DeleteFlag])
			select @temp,[UserID],[Keywords],0 from [dbo].[LettersInboundKeywords] where [LetterID]=@P_LetterID and DeleteFlag =0

insert into [dbo].[Attachments]([ServiceID],[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],[CreatedDateTime],[ReferenceNumber])
			select @temp,[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],(select GETUTCDATE()) ,@P_Referencenumber 
			from [dbo].[Attachments] where  [ReferenceNumber]=(select [LetterReferenceID] from [LettersInbound] where [LetterID]=@P_LetterID) 
		

insert into [dbo].[Workflow] ([ReferenceNumber],[Service],[WorkflowProcess],[FromName],[FromEmail],[ToName],[ToEmail],[Status],CreatedDateTime)
			select @P_Referencenumber,'Inbound Letter','DraftWorkflow',(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=@P_UserID)
			,(select OfficialMailId from [dbo].[UserProfile] where UserProfileId=@P_UserID),
			(SELECT top(1) ToName from [dbo].[Workflow] where Service='Inbound Letter' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,(SELECT top(1) ToEmail from [dbo].[Workflow] where Service='Inbound Letter' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,24,(select GETUTCDATE())



			select @temp
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInboundDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Save_LetterInboundDestinationDepartment]-- null,42,'',

	@P_LetterDestinationID int = null,
	@P_LetterID int = null,	
	@P_DepartmentID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_LetterID is not null)
	update [LettersInboundDestinationDepartment] set [DeleteFlag]=1  where [LetterID] = @P_LetterID and DepartmentID=@P_DepartmentID


	if(@P_Type = 1 and @P_LetterID is not null)	
	begin
	insert into [LettersInboundDestinationDepartment]
	select @P_LetterID,@P_DepartmentID,0
	set @P_LetterDestinationID = (SELECT IDENT_CURRENT('LettersInboundDestinationDepartment'))
	end
		
END



GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInboundDestinationUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_LetterInboundDestinationUser]-- null,42,'',

	@P_LetterDestinationID int = null,
	@P_LetterID int = null,	
	@P_UserID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_LetterID is not null and  @P_UserID !='')
	update [LettersInboundDestinationUsers] set [DeleteFlag]=1  where [LetterID] = @P_LetterID and UserID=@P_UserID


	if(@P_Type = 1 and @P_LetterID is not null and @P_UserID !='')	
	begin
	insert into [dbo].[LettersInboundDestinationUsers]
	select @P_LetterID,@P_UserID,0
	set @P_LetterDestinationID = (SELECT IDENT_CURRENT('LettersInboundDestinationUsers'))
	end
		
END



GO
/****** Object:  StoredProcedure [dbo].[Save_LetterInboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
create PROCEDURE [dbo].[Save_LetterInboundKeywords] --15,null,null,null,0

	@P_LetterKeywordsID int = null,
	@P_LetterID int = null,	
	@P_UserID int = null,
	@P_Keywords nvarchar(250) = null,
	@P_Type int = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type = 1)
	begin
	insert into [dbo].[LettersInboundKeywords]
	select @P_LetterID,@P_UserID,@P_Keywords,0
	set @P_LetterKeywordsID = (SELECT IDENT_CURRENT('LettersInboundKeywords'))
	end
	
	if(@P_Type >1)
	begin
	update [dbo].[LettersInboundKeywords] set [DeleteFlag] =1
	where [LetterID]=@P_LetterID and [Keywords] = @P_Keywords
	end

	SELECT @P_LetterKeywordsID
END



GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutbound]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_LetterOutbound]  ******/
CREATE PROCEDURE [dbo].[Save_LetterOutbound] -- exec Save_LetterOutbound
	-- Add the parameters for the stored procedure here

	@P_LetterID int = 0,
	@P_Title nvarchar(Max) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_RelatedToIncomingLetter nvarchar(250) = null,
	@P_LetterDetails nvarchar(MAX) = null,
	@P_DocumentClassification nvarchar(MAX) = null,

	@P_Priority nvarchar(250) = null,
	@P_NeedReply nvarchar(250) = null,
	@P_LetterType nvarchar(250) = null,
	@P_ApproverDepartmentId int = 0,
	@P_Action nvarchar(100) = null,
	@P_Comment nvarchar(Max) = null,
	
	@P_CreatedBy int = null,
	
	@P_CreatedDateTime datetime = null,
	@P_DeleteFlag bit = 0,
	@P_UpdatedBy  int = 0,
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null
	
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	declare @UpdatedEmail nvarchar(250),@WorkflowRef nvarchar(250)
	 set @UpdatedEmail=(select officialMailID from UserProfile where UserProfileId=@P_UpdatedBy)
	--set @temp = (SELECT IDENT_CURRENT('LettersOutbound')) + 1;
	--select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','OL');

	if(@P_LetterID is null or @P_LetterID =0)
	begin
	insert into [LettersOutbound] ([LetterTitle],[SourceOU],[SourceName],[LetterDetails],[Priority],[DeleteFlag], [CreatedBy] ,[CreatedDateTime],
	[RelatedToIncomingLetter],[NeedReply],[DocumentClassification])
	select @P_Title,@P_SourceOU,@P_SourceName,@P_LetterDetails,@P_Priority,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,
	@P_RelatedToIncomingLetter,@P_NeedReply,@P_DocumentClassification
	--set @P_LetterID = (SELECT IDENT_CURRENT('LettersOutbound')) 

	set @temp = (select SCOPE_IDENTITY());
	set @P_LetterID = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','OL');
	
	update [dbo].[LettersOutbound]  set  [LetterReferenceID]=@P_Referencenumber where [LetterID]=@temp

	insert into [dbo].[LettersOutboundHistory]([LetterID],[Action],[ActionBy],[ActionDateTime],[Comments]
	)
	select @temp,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

	select [LetterID],[LetterReferenceID] as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [LettersOutbound] where [LetterID]=@temp

	end

	Else

	
	if(@P_LetterID is not NUll)
	begin
	update [LettersOutbound] set [LetterTitle]=@P_Title,SourceOU=@P_SourceOU,SourceName=@P_SourceName,[LetterDetails]=@P_LetterDetails,[Priority]=@P_Priority,
	[RelatedToIncomingLetter] = @P_RelatedToIncomingLetter,[NeedReply] = @P_NeedReply,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,
	[DocumentClassification] = @P_DocumentClassification
	where [LetterID]=@P_LetterID

	set @WorkflowRef = (select LetterReferenceID from LettersOutbound where LetterID=@P_LetterID)
	
		Update [Workflow]  set IsRedirect=1 where ToEmail=@UpdatedEmail AND
 ReferenceNumber =@WorkflowRef and (WorkflowProcess='RedirectWorkflow' or WorkflowProcess='ApprovalWorkflow')and Status=20 and @P_Action='Redirect'

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 18 or Status = 19) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select LetterReferenceID from LettersOutbound 
	  where LetterID = @P_LetterID) and (W.Status = 18 or W.Status = 19 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;

		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber = (select LetterReferenceID from LettersOutbound where LetterID=@P_LetterID)) =19)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		
	insert into [dbo].[LettersOutboundHistory]
	select @P_LetterID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_DelegateUser

	select [LetterID],[LetterReferenceID] as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [LettersOutbound] where [LetterID]=@P_LetterID

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [LettersOutbound] set [InitialApproverDepartment] = @P_ApproverDepartmentId where  [LetterID]=@P_LetterID	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutbound_RelatedOutgoing]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_LetterOutbound_RelatedOutgoing] --15,null,null,null,0

	@P_LetterOutgoingReleated int = null,
	@P_LetterID int = 0,	
	@P_OutgoingLetterReferenceNo nvarchar(250) = NULL,
	@P_Type nvarchar(100) = NULL,
	@P_CreatedDatetime datetime = null,
	@P_UpdatedDatetime datetime = null,
	@P_LetterType int = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	SELECT @P_OutgoingLetterReferenceNo

	if(@P_Type ='Delete')
	begin
		IF(@P_OutgoingLetterReferenceNo IS  NULL OR @P_OutgoingLetterReferenceNo ='')
		update LettersOutbound_RelatedOutgoing set DeleteFlag = 1 
		where [LetterType]=@P_LetterType and LetterID=@P_LetterID	
		else
		update LettersOutbound_RelatedOutgoing set DeleteFlag = 1 
		where OutgoingLetterReferenceNo not in (select value from string_split(@P_OutgoingLetterReferenceNo,','))
		and [LetterType]=@P_LetterType and LetterID=@P_LetterID
	end

	else
	begin
		if((select count(*) from LettersOutbound_RelatedOutgoing 
			where LetterID=@P_LetterID and OutgoingLetterReferenceNo = @P_OutgoingLetterReferenceNo and[LetterType]=@P_LetterType and DeleteFlag = 0 )!=1)
			insert into LettersOutbound_RelatedOutgoing
			select @P_LetterID,@P_OutgoingLetterReferenceNo,@P_LetterType,@P_CreatedDatetime,@P_UpdatedDatetime,0
	end

	SELECT @P_LetterOutgoingReleated
END


GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundClone]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundClone]   ******/
CREATE PROCEDURE [dbo].[Save_LetterOutboundClone] --  Save_LetterOutboundClone 1,1
	-- Add the parameters for the stored procedure here
	@P_UserID int=0,
	@P_LetterID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @temp int = null,  @P_Referencenumber nvarchar(255) = null;

insert into [LettersOutbound] ([SourceOU],[SourceName],[LetterTitle],[InitialApproverDepartment],[RelatedToIncomingLetter],[LetterDetails]
,[DocumentClassification],[Priority],[NeedReply],[DeleteFlag],[CreatedBy],[CreatedDateTime])
select [SourceOU],[SourceName],[LetterTitle],[InitialApproverDepartment],[RelatedToIncomingLetter],[LetterDetails]
,[DocumentClassification],[Priority],[NeedReply],[DeleteFlag],[CreatedBy],[CreatedDateTime] from [LettersOutbound] where @P_LetterID=LetterID
	set @temp = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','OL');
	
	update [dbo].[LettersOutbound]  set  [LetterReferenceID]=@P_Referencenumber where [LetterID]=@temp

	insert into [dbo].[LettersOutboundHistory]([LetterID],Action,ActionBy,ActionDateTime,Comments)
	select @temp,'Clone',@P_UserID,(select GETUTCDATE()) ,''

insert into [LettersOutbound_RelatedOutgoing]([LetterID],LetterType,[OutgoingLetterReferenceNo],[CreatedDatetime],[DeleteFlag])
			select @temp,LetterType,[OutgoingLetterReferenceNo],(select GETUTCDATE()),0 from [dbo].[LettersOutbound_RelatedOutgoing] where [LetterID]=@P_LetterID and DeleteFlag=0

insert into [dbo].LettersOutboundDestinationEntity([LetterID],EntityID,IsGovernmentEntity,[DeleteFlag],SenderName)
			select @temp,EntityID,IsGovernmentEntity,0,SenderName from [dbo].LettersOutboundDestinationEntity where [LetterID]=@P_LetterID and DeleteFlag=0

insert into [dbo].[LettersOutboundDestinationUsers]([LetterID],[UserID],[DeleteFlag])
			select @temp,[UserID],0 from [dbo].[LettersOutboundDestinationUsers] where [LetterID]=@P_LetterID and DeleteFlag=0
			
insert into [dbo].[LettersOutboundKeywords]([LetterID],[UserID],[Keywords],[DeleteFlag])
			select @temp,[UserID],[Keywords],0 from [dbo].[LettersOutboundKeywords] where [LetterID]=@P_LetterID and DeleteFlag=0

insert into [dbo].[Attachments]([ServiceID],[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],[CreatedDateTime],[ReferenceNumber])
			select @temp,[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],(select GETUTCDATE()) ,@P_Referencenumber 
			from [dbo].[Attachments] where  [ReferenceNumber]=(select [LetterReferenceID] from [LettersOutbound] where [LetterID]=@P_LetterID) 
			
insert into [dbo].[Workflow] ([ReferenceNumber],[Service],[WorkflowProcess],[FromName],[FromEmail],[ToName],[ToEmail],[Status],CreatedDateTime)
			select @P_Referencenumber,'Outbound Letter','DraftWorkflow',(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=@P_UserID)
			,(select OfficialMailId from [dbo].[UserProfile] where UserProfileId=@P_UserID),(SELECT top(1) ToName from [dbo].[Workflow] where Service='Outbound Letter' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,(SELECT top(1) ToEmail from [dbo].[Workflow] where Service='Outbound Letter' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc ),18,(select GETUTCDATE())

			select @temp
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundDestinationEntity]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundDestinationEntity]  ******/
CREATE PROCEDURE [dbo].[Save_LetterOutboundDestinationEntity]-- null,42,'',
	@P_LetterDestinationID int = null,
	@P_LetterID int = null,	
	@P_EntityID nvarchar(250) = null,
	@P_IsGovernmentEntity bit = false,
	@P_UserName nvarchar(250) = null,
	@P_Type int =0,
	@P_AllLetterDestinationID nvarchar(max)=null,
	@P_SenderName nvarchar(max) = null
AS
BEGIN
	
	SET NOCOUNT ON;

		if(@P_LetterDestinationID = 0 or @P_LetterDestinationID is null and @P_Type =1 )
	begin
		insert into LettersOutboundDestinationEntity
		select @P_LetterID,@P_EntityID,@P_IsGovernmentEntity,0,@P_SenderName
		set @P_LetterDestinationID = (SELECT IDENT_CURRENT('LettersOutboundDestinationEntity'))
	end

	if(@P_LetterDestinationID > 0 and @P_Type = 1)
	begin
		update LettersOutboundDestinationEntity set EntityID=@P_EntityID,IsGovernmentEntity=@P_IsGovernmentEntity
		  ,SenderName = @P_SenderName where LetterDestinationID=@P_LetterDestinationID
	end

	if(@P_AllLetterDestinationID is not null and @P_Type = 2)
	begin
		update LettersOutboundDestinationEntity set DeleteFlag=1
		  where LetterDestinationID not in (select  value from string_split(@P_AllLetterDestinationID,',') where value !=0)
		  and LetterID = @P_LetterID
	end
		
END
GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundDestinationUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_LetterOutboundDestinationUser]-- null,42,'',

	@P_LetterDestinationID int = null,
	@P_LetterID int = null,	
	@P_UserID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_LetterID is not null and  @P_UserID !='')
	update [LettersOutboundDestinationUsers] set [DeleteFlag]=1  where [LetterID] = @P_LetterID and UserID=@P_UserID


	if(@P_Type = 1 and @P_LetterID is not null and @P_UserID !='')	
	begin
	insert into [dbo].[LettersOutboundDestinationUsers]
	select @P_LetterID,@P_UserID,0
	set @P_LetterDestinationID = (SELECT IDENT_CURRENT('LettersOutboundDestinationUsers'))
	end
		
END



GO
/****** Object:  StoredProcedure [dbo].[Save_LetterOutboundKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_LetterOutboundKeywords] --15,null,null,null,0

	@P_LetterKeywordsID int = null,
	@P_LetterID int = null,	
	@P_UserID int = null,
	@P_Keywords nvarchar(250) = null,
	@P_Type int = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type = 1)
	begin
	insert into [dbo].[LettersOutboundKeywords]
	select @P_LetterID,@P_UserID,@P_Keywords,0
	set @P_LetterKeywordsID = (SELECT IDENT_CURRENT('LettersOutboundKeywords'))
	end
	
	if(@P_Type >1)
	begin
	update [dbo].[LettersOutboundKeywords] set [DeleteFlag] =1
	where [LetterID]=@P_LetterID and [Keywords] = @P_Keywords
	end

	SELECT @P_LetterKeywordsID
END



GO
/****** Object:  StoredProcedure [dbo].[Save_LogService]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[Save_LogService]  ******/
CREATE PROCEDURE [dbo].[Save_LogService]
    @P_VehicleID int =null,
	@P_VehicleLogID int = null,
    @P_CurrentMileage nvarchar(250) = null,
	@P_NextMileage nvarchar(250) = null,
	@P_LogType nvarchar(50) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Type int=0
AS
BEGIN

	SET NOCOUNT ON;
    if(@P_VehicleLogID is null or @P_VehicleLogID =0)
	begin
		insert into [dbo].[VehicleLogs] ([VehicleID],[CurrentMileage],[NextMileage],[LogType],[DeleteFlag],[CreatedBy],[CreatedDateTime])
		select @P_VehicleID,@P_CurrentMileage,@P_NextMileage,@P_LogType,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
		set @P_VehicleLogID = (SELECT IDENT_CURRENT('VehicalLog'))   
	end
	Else
	begin
		update [dbo].[VehicleLogs] set CurrentMileage = @P_CurrentMileage,NextMileage = @P_NextMileage,
		DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
		where VehicleLogID = @P_VehicleLogID 
	end

	SELECT VehicleLogID,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[VehicleLogs]
	where VehicleLogID= @P_VehicleLogID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_M_AnnouncementType]    Script Date: 15-Feb-20 3:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Save_M_AnnouncementType]	
	@P_LookupsID int = null,
    @P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DescFlag bit = 0,
	@P_DisplayDesc nvarchar(250) = null,
	@P_ARDisplayDesc nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_DescFlag is null or @P_DescFlag = 0)
	begin
	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[AnnouncementTypeAndDescription](AnnouncementTypeName,AnnouncementTypeNameAr,CreatedBy,CreatedDateTime,DeleteFlag)
		select @P_DisplayName,@P_ARDisplayName,@P_CreatedBy,@P_CreatedDateTime,0
		--else
		--insert into[dbo].[M_Location](ArLocationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('AnnouncementTypeAndDescription'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[AnnouncementTypeAndDescription] set AnnouncementTypeName=@P_DisplayName,AnnouncementTypeNameAr=@P_ARDisplayName,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime where AnnouncementTypeID=@P_LookupsID
		--else
		--update [dbo].[M_Location] set ArLocationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where LocationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[AnnouncementTypeAndDescription] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime where AnnouncementTypeID=@P_LookupsID
	end
	end
	else if(@P_DescFlag = 1 and (@P_LookupsID is not null or @P_LookupsID !=0))
	begin
	update [dbo].[AnnouncementTypeAndDescription] set Description=@P_DisplayDesc,DescriptionAr=@P_ARDisplayDesc,UpdatedDateTime=@P_UpdatedDateTime where AnnouncementTypeID=@P_LookupsID

	end

	SELECT @P_LookupsID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_M_ApproverConfiguration]    Script Date: 15-Feb-20 3:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_M_ApproverConfiguration]
	@P_Department int =1,
	@P_ApproverID nvarchar(max) = '1;2',
	@P_CreatedBy int =0,
	@P_UpdatedBy int =0,
	@P_CreatedDatetime datetime = null,
	@P_UpdateDatetime datetime = null
AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDatetime = (select GETUTCDATE())
	set @P_UpdateDatetime = (select GETUTCDATE())

	declare @result table(
	id int identity(1,1),
	ApproverID int ,Department int,
	createdBy int,
	CreatedDateTime datetime
	)

	insert into @result (ApproverID,Department,createdBy,CreatedDateTime)
	select value,@P_Department,@P_CreatedBy,@P_CreatedDatetime from string_split(@P_ApproverID,';')

	insert into M_ApproverConfiguration (DepartmentID,ApproverID,CreatedBy,CreatedDateTime)
	(select r.Department, r.ApproverID,r.createdBy,r.CreatedDateTime from @result as r where r.ApproverID not in 
	(select a.[ApproverID] from  [dbo].[M_ApproverConfiguration] as a where a.[DepartmentID]= @P_Department and a.[DeleteFlag]= 0))
	

	update [dbo].[M_ApproverConfiguration]  set [DeleteFlag]=1,[UpdatedBy]=@P_UpdatedBy,[UpdatedDateTime]=@P_UpdateDatetime  where [DepartmentID]=@P_Department and 
	[ApproverID] not in (select ApproverID from @result)
	select 1
	
END


--select * from M_ApproverConfiguration
GO
/****** Object:  StoredProcedure [dbo].[Save_M_City]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_City]  ******/
CREATE PROCEDURE [dbo].[Save_M_City]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_CountryID int = null,
	@P_Language nvarchar(10) = 0,
	@P_EmiratesID int = null

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		if( @P_CountryID!=0)
		begin
			 insert into[dbo].[M_City](ArCityName,CityName,[DisplayOrder],[CreatedBy],[CreatedDateTime],CountryID)
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime,@P_CountryID
		--else
		--	insert into[dbo].[M_City](ArCityName,[DisplayOrder],[CreatedBy],[CreatedDateTime],CountryID)
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime,@P_CountryID

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_City'))
		end
		else if( @P_EmiratesID!=0)
		begin
			 insert into[dbo].[M_City](ArCityName,CityName,[DisplayOrder],[CreatedBy],[CreatedDateTime],CountryID)
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime,@P_CountryID
			set @P_LookupsID = (SELECT IDENT_CURRENT('M_City'))
			declare @P_CityID int=null
			set @P_CityID=((select CityID from M_City where CityID=@P_LookupsID ))
		insert into M_CityAndEmirates (EmiratesID,CityID)
		select @P_EmiratesID,@P_LookupsID
		end

	end
	Else if(@P_DeleteFlag != 1)
	begin
		if( @P_CountryID!=0)
		begin
		update [dbo].[M_City] set ArCityName=@P_ARDisplayName,CityName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,CountryID=@P_CountryID,
		UpdatedDateTime=@P_UpdatedDateTime where CityID=@P_LookupsID
		end

		if( @P_EmiratesID!=0)
		begin
		update [dbo].[M_City] set ArCityName=@P_ARDisplayName,CityName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,CountryID=@P_CountryID,
		UpdatedDateTime=@P_UpdatedDateTime where CityID=@P_LookupsID

		update M_CityAndEmirates set EmiratesID=@P_EmiratesID,CityID=@P_LookupsID where CityID=@P_LookupsID
		end
		--else
		--update [dbo].[M_City] set ArCityName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,CountryID=@P_CountryID,
		--UpdatedDateTime=@P_UpdatedDateTime where CityID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_City] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CityID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Complaint]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_M_Complaint]

	@P_ComplaintID int = null,
	@P_ReferenceNumber nvarchar(250) = null,	
	@P_Name nvarchar(250) = null,
	@P_Type nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,	
	@P_Details nvarchar(MAX) = null,
	@P_RequestedBy nvarchar(250) = null,
	@P_MailID nvarchar(250) = null,	
	@P_CitizenAffairManager nvarchar(250) = null,
	@P_CitizenAffairStaff nvarchar(250) = null,	
	@P_HRManager nvarchar(250) = null,
	@P_HRStaff nvarchar(250) = null,
	@P_Attachments nvarchar (Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_ComplaintID is null or @P_ComplaintID =0)
	begin
	insert into [dbo].[M_Complaint]
	select @P_ReferenceNumber,@P_Name,@P_Type,@P_Subject,@P_Details,@P_RequestedBy,@P_MailID,@P_CitizenAffairManager,@P_CitizenAffairStaff,@P_HRManager,@P_HRStaff,@P_Attachments,@P_AttachmentName,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_ComplaintID = (SELECT IDENT_CURRENT('Complaint'))
	end
	Else
	begin
	update [dbo].[M_Complaint] set ReferenceNumber=@P_ReferenceNumber,Name=@P_Name,Type=@P_Type,Subject=@P_Subject,Details=@P_Details,RequestedBy=@P_RequestedBy,MailID=@P_MailID,CitizenAffairManager=@P_CitizenAffairManager,CitizenAffairStaff=@P_CitizenAffairStaff,HRManager=@P_HRManager,HRStaff=@P_HRStaff,Attachments=@P_Attachments,AttachmentName=@P_AttachmentName,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where ComplaintID=@P_ComplaintID
	end

	SELECT @P_ComplaintID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Country]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Country]   ******/
CREATE PROCEDURE [dbo].[Save_M_Country]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_Country](ArCountryName,CountryName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	 insert into[dbo].[M_Country](ArCountryName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Country'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
			update [dbo].[M_Country] set ArCountryName=@P_ARDisplayName,CountryName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where CountryID=@P_LookupsID
		--else
		--	update [dbo].[M_Country] set ArCountryName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where CountryID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Country] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CountryID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_DesignType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_DesignType]    ******/
CREATE PROCEDURE [dbo].[Save_M_DesignType]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_DesignType](ArDesignTypeName,DesignTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName, @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_DesignType](ArDesignTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_DesignType'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
			update [dbo].[M_DesignType] set ArDesignTypeName=@P_ARDisplayName,DesignTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where DesignTypeID=@P_LookupsID
		--else
		--	update [dbo].[M_DesignType] set ArDesignTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where DesignTypeID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_DesignType] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where DesignTypeID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Education]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Education]   ******/
CREATE PROCEDURE [dbo].[Save_M_Education]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_Education](ArEducationName,EducationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_Education](ArEducationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Education'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language='EN')
			update [dbo].[M_Education] set ArEducationName=@P_ARDisplayName,EducationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where EducationID=@P_LookupsID
		--else
		--	update [dbo].[M_Education] set ArEducationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where EducationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Education] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where EducationID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Emirates]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Emirates]  ******/
CREATE PROCEDURE [dbo].[Save_M_Emirates]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			insert into[dbo].[M_Emirates](ArEmiratesName,EmiratesName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_Emirates](ArEmiratesName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Emirates'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_Emirates] set  ArEmiratesName=@P_ARDisplayName,EmiratesName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where EmiratesID=@P_LookupsID
		--else
		--update [dbo].[M_Emirates] set ArEmiratesName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where EmiratesID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Emirates] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where EmiratesID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_EmployeeStatus]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_EmployeeStatus]     ******/
CREATE PROCEDURE [dbo].[Save_M_EmployeeStatus]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());


	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_EmployeeStatus](ArEmployeeStatusName,EmployeeStatusName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_EmployeeStatus](ArEmployeeStatusName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_EmployeeStatus'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
			update [dbo].[M_EmployeeStatus] set ArEmployeeStatusName=@P_ARDisplayName,EmployeeStatusName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where EmployeeStatusID=@P_LookupsID
		--else
		--	update [dbo].[M_EmployeeStatus] set ArEmployeeStatusName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where EmployeeStatusID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_EmployeeStatus] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where EmployeeStatusID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_EventType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_EventType]   ******/
CREATE PROCEDURE [dbo].[Save_M_EventType]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			insert into[dbo].M_EventType(ArEventTypeName,EventTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].M_EventType(ArEventTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Emirates'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].M_EventType set ArEventTypeName=@P_ARDisplayName,EventTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where EventTypeID=@P_LookupsID
		--else
		--update [dbo].M_EventType set ArEventTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where EventTypeID=@P_LookupsID
	end
	else
	begin
	update [dbo].M_EventType set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where EventTypeID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Experience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Experience]  ******/
CREATE PROCEDURE [dbo].[Save_M_Experience]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			insert into[dbo].[M_Experience](ArExperienceName,ExperienceName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_Experience](ArExperienceName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Experience'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
			update [dbo].[M_Experience] set ArExperienceName=@P_ARDisplayName,ExperienceName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where ExperienceID=@P_LookupsID
   --     else
			--update [dbo].[M_Experience] set ArExperienceName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			--UpdatedDateTime=@P_UpdatedDateTime where ExperienceID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Experience] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where ExperienceID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Holidays]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_M_Holidays]

	@P_Holiday datetime = null,
	@P_Message nvarchar(250) = null,
	@P_HolidayID int = null,
	@P_DeleteFlag bit = 0,
	@P_User int = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	
	if(@P_DeleteFlag = 1)
	begin
		update [dbo].[M_Holidays] set [DeleteFlag] = 1 , [UpdatedBy]= @P_User, [UpdatedDateTime]= (select GETUTCDate()) ;
	end
	else if((select count(*) from [M_Holidays] where Holiday = @P_Holiday)=0)
	begin
		insert into [M_Holidays]([Holiday],[Message],[DeleteFlag],[CreatedBy],[CreatedDateTime])
		select @P_Holiday,@P_Message,0,@P_User,(select GETUTCDATE());
	end
	else if((select count(*) from [M_Holidays] where Holiday = @P_Holiday)!=0)
		update [M_Holidays] set Message = @P_Message,  [UpdatedBy]= @P_User, [UpdatedDateTime]= (select GETUTCDate()) ;
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Language]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Language]    Script Date: 21/10/2019 10:19:57 PM ******/
CREATE PROCEDURE [dbo].[Save_M_Language]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());


	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_Language](ArLanguageName,LanguageName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--insert into[dbo].[M_Language](ArLanguageName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Language'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_Language] set ArLanguageName=@P_ARDisplayName,LanguageName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where LanguageID=@P_LookupsID
		--else
		--update [dbo].[M_Language] set ArLanguageName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where LanguageID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Language] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LanguageID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_LeaveType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_DesignType]    ******/
CREATE PROCEDURE [dbo].[Save_M_LeaveType]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_LeaveType](ArLeaveTypeName,LeaveTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime],DeleteFlag)
			select @P_ARDisplayName, @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime,0
		--else
		--	insert into[dbo].[M_DesignType](ArDesignTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_LeaveType'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
			update [dbo].[M_LeaveType] set ArLeaveTypeName=@P_ARDisplayName,LeaveTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where LeaveTypeID=@P_LookupsID
		--else
		--	update [dbo].[M_DesignType] set ArDesignTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where DesignTypeID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_LeaveType] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LeaveTypeID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Location]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Location]   ******/
CREATE PROCEDURE [dbo].[Save_M_Location]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_Location](ArLocationName,LocationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--insert into[dbo].[M_Location](ArLocationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Location'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_Location] set ArLocationName=@P_ARDisplayName,LocationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where LocationID=@P_LookupsID
		--else
		--update [dbo].[M_Location] set ArLocationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where LocationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Location] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LocationID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Lookups]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_M_Lookups]

	@P_LookupsID int = null,
	@P_Module nvarchar(250) = null,
	@P_Category nvarchar(250) = null,
	@P_DisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_LookupsID is null or @P_LookupsID =0)
	begin
	insert into [dbo].[M_Lookups]
	select @P_Category,@P_Module,@P_DisplayName,null,@P_DisplayOrder,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_LookupsID = (SELECT IDENT_CURRENT('M_Lookups'))
	end
	Else
	begin
	update [dbo].[M_Lookups] set Category=@P_Category,Module=@P_Module,DisplayName=@P_DisplayName,Displayorder=@P_DisplayOrder,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LookupsID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_MailRemainder]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_M_MailRemainder]	
	@P_Value nvarchar(10) = null,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;

	update M_Lookups set DisplayName = @P_Value , UpdatedBy = @P_UpdatedBy, UpdatedDateTime= (Select GETUTCDATE()) where LookupsID= 125

	SELECT @P_Value
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_MediaChannel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_MediaChannel]  ******/
CREATE PROCEDURE [dbo].[Save_M_MediaChannel]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	
	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_MediaChannel](ArMediaChannelName,MediaChannelName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--insert into[dbo].[M_MediaChannel](ArMediaChannelName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		set @P_LookupsID = (SELECT IDENT_CURRENT('M_MediaChannel'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_MediaChannel] set ArMediaChannelName=@P_ARDisplayName,MediaChannelName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where MediaChannelID=@P_LookupsID
		--else
		--update [dbo].[M_MediaChannel] set ArMediaChannelName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where MediaChannelID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_MediaChannel] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where MediaChannelID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_MeetingType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_MeetingType]   ******/
CREATE PROCEDURE [dbo].[Save_M_MeetingType]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			insert into [dbo].[M_MeetingType](ArMeetingTypeName,MeetingTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime],DeleteFlag)
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime,0
		--else
		--	insert into [dbo].[M_MeetingType](ArMeetingTypeName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Emirates'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_MeetingType] set ArMeetingTypeName=@P_ARDisplayName,MeetingTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where MeetingTypeID=@P_LookupsID
		--else
		--update [dbo].[M_MeetingType] set ArMeetingTypeName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where MeetingTypeID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_MeetingType] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where MeetingTypeID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Nationality]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Nationality]  ******/
CREATE PROCEDURE [dbo].[Save_M_Nationality]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		if(@P_Language = 'EN')
		 insert into[dbo].[M_Nationality](ArNationalityName,NationalityName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		-- insert into[dbo].[M_Nationality](ArNationalityName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Nationality'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_Nationality] set ArNationalityName=@P_ARDisplayName,NationalityName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where NationalityID=@P_LookupsID
		--else
		--update [dbo].[M_Nationality] set ArNationalityName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where NationalityID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Nationality] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where NationalityID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_OfficialTaskRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_OfficialTaskRequest]  ******/
CREATE PROCEDURE [dbo].[Save_M_OfficialTaskRequest]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
			 insert into[dbo].[M_OfficialTaskRequest](ArOfficialTaskRequestName,OfficialTaskRequestName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			 select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--	insert into[dbo].[M_OfficialTaskRequest](ArOfficialTaskRequestName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_OfficialTaskRequest'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_OfficialTaskRequest] set ArOfficialTaskRequestName=@P_ARDisplayName,OfficialTaskRequestName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where OfficialTaskRequestID=@P_LookupsID
		--else
		--update [dbo].[M_OfficialTaskRequest] set ArOfficialTaskRequestName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where OfficialTaskRequestID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_OfficialTaskRequest] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where OfficialTaskRequestID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Religion]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Religion]   ******/
CREATE PROCEDURE [dbo].[Save_M_Religion]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	
	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin
		--if(@P_Language = 'EN') 
			 insert into[dbo].[M_Religion](ArReligionName,ReligionName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
			select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		-- insert into[dbo].[M_Religion](ArReligionName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--	select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Religion'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN') 
			update [dbo].[M_Religion] set  ArReligionName=@P_ARDisplayName,ReligionName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
			UpdatedDateTime=@P_UpdatedDateTime where ReligionID=@P_LookupsID
		--else
		--	update [dbo].[M_Religion] set ArReligionName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--	UpdatedDateTime=@P_UpdatedDateTime where ReligionID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Religion] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where ReligionID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_Specialization]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_Specialization]    ******/
CREATE PROCEDURE [dbo].[Save_M_Specialization]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_Specialization](ArSpecializationName,SpecializationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		select @P_ARDisplayName,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
		--else
		--insert into[dbo].[M_Specialization](ArSpecializationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_Specialization'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_Specialization] set  ArSpecializationName=@P_ARDisplayName,SpecializationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime where SpecializationID=@P_LookupsID
		--else 
		--update [dbo].[M_Specialization] set ArSpecializationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where SpecializationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_Specialization] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where SpecializationID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_TripType]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_TripType]   ******/
Create PROCEDURE [dbo].[Save_M_TripType]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_TripType](TripTypeARValue,TripTypeENValue)
		select @P_ARDisplayName,@P_DisplayName
		--else
		--insert into[dbo].[M_Location](ArLocationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_TripType'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_TripType] set TripTypeARValue=@P_ARDisplayName,TripTypeENValue=@P_DisplayName where TripTypeID=@P_LookupsID
		--else
		--update [dbo].[M_Location] set ArLocationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where LocationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_TripType] set DeleteFlag=@P_DeleteFlag where TripTypeID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_UserManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_UserManagement]   ******/
CREATE PROCEDURE [dbo].[Save_M_UserManagement]
	@P_UserProfileID int  =null,
	@P_EmployeeName nvarchar(max) =null,
	@P_DepartmentID int =null,
	@P_SectionID int =null,
	@P_UnitID int =null,
	@P_HOD bit =null,
	@P_HOS bit =null,
	@P_HOU bit =null,
	@P_CanRaiseOfficalRequest bit =null,
	@P_CanEditContact bit = 0,
	@P_CanManageNews bit =0,
	@P_UpdateBy int =null,
	@P_UpdateDateTime datetime = null,
	@P_balanceLeave int = null

	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here

	set @P_UpdateDateTime = (select GETUTCDATE())

	Update [UserProfile] set EmployeeName = @P_EmployeeName,BalanceLeave=@P_balanceLeave,DepartmentID = @P_DepartmentID,SectionID= @P_SectionID,
							OrgUnitID=@P_UnitID,HOD=@P_HOD,HOS=@P_HOS,IsOrgHead=@P_HOU,CanRaiseOfficalRequest=@P_CanRaiseOfficalRequest
							,CanManageNews=@P_CanManageNews,UpdatedBy=@P_UpdateBy,UpdatedDatetime=@P_UpdateDateTime,CanEditContact=@P_CanEditContact where UserProfileId= @P_UserProfileID

	select @P_UserProfileID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_M_VehicleModel]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_M_VehicleModel]   ******/
Create PROCEDURE [dbo].[Save_M_VehicleModel]--1=>Specialization; 2=>Religion; 3=>OfficialTaskRequest; 4=>Nationality; 5=>MediaChannel;
												  --6=>Location; 7=>Language; 8=>Experience; 9=>EmployeeStatus; 10=>Emirates; 11=>Education; 
												  --12=>DesignType; 13=>Country; 14=>City	
	@P_LookupsID int = null,
	@P_DisplayName nvarchar(250) = null,
	@P_ARDisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Language nvarchar(10) = 0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	set @P_CreatedDateTime = (select GETUTCDATE());
	set @P_UpdatedDateTime = (select GETUTCDATE());

	if(@P_LookupsID is null or @P_LookupsID =0)
	begin 
		--if(@P_Language = 'EN')
		 insert into[dbo].[M_VehicleModel](VehicleModelARValue,VehicleModelENValue)
		select @P_ARDisplayName,@P_DisplayName
		--else
		--insert into[dbo].[M_Location](ArLocationName,[DisplayOrder],[CreatedBy],[CreatedDateTime])
		--select @P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime

		set @P_LookupsID = (SELECT IDENT_CURRENT('M_VehicleModel'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		--if(@P_Language = 'EN')
		update [dbo].[M_VehicleModel] set VehicleModelARValue=@P_ARDisplayName,VehicleModelENValue=@P_DisplayName where VehicleModelID=@P_LookupsID
		--else
		--update [dbo].[M_Location] set ArLocationName=@P_DisplayName,Displayorder=@P_DisplayOrder,UpdatedBy=@P_UpdatedBy,
		--UpdatedDateTime=@P_UpdatedDateTime where LocationID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_VehicleModel] set DeleteFlag=@P_DeleteFlag where VehicleModelID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Maintenance]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Maintenance] 
	-- Add the parameters for the stored procedure here
	@P_MaintenanceID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,
	@P_RequestDetails nvarchar(max) = null,
	@P_Priority bit = 0,
	@P_ApproverDepartmentID int = null,
	@P_RequestorID int = null,
	@P_RequestorDepartmentID int = null,
	
	@P_Action nvarchar(250) = null,
	@P_Comment nvarchar(250) = null,
	@P_CreatedBy nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_DeleteFlag bit = 0,
	@P_UpdatedBy  nvarchar(250) = null,	
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	 declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('Maintenance'))
	
	if(@P_MaintenanceID is null or @P_MaintenanceID =0)
	begin
	insert into [dbo].[Maintenance] ([SourceOU],[SourceName],[RequestorID],[RequestorDepartmentID],[Subject],[Details],[Priority],[DeleteFlag],[CreatedBy],[CreatedDateTime])
	select @P_SourceOU,@P_SourceName,@P_RequestorID,@P_RequestorDepartmentID,@P_Subject,@P_RequestDetails,@P_Priority,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	
	set @temp = (select SCOPE_IDENTITY());
	set @P_MaintenanceID = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MM');
	
	update [dbo].[Maintenance] set  [ReferenceNumber]=@P_Referencenumber where [MaintenanceID]=@temp


	insert into [dbo].[MaintenanceCommunicationHistory](MaintenanceID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	select @temp,@P_Comment,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime

	SELECT top 1 [MaintenanceID],[ReferenceNumber] as ReferenceNumber,CreatedBy as CreatorID, 
	(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID,(select top 1 Status from [dbo].[Workflow] where 
	[ReferenceNumber] = @P_Referencenumber order by WorkflowID desc) as CurrentStatus from [dbo].[Maintenance] order by [MaintenanceID] desc

	end
	Else
	begin
	update [dbo].[Maintenance] set [SourceOU]=@P_SourceOU,[SourceName]=@P_SourceName,[RequestorID]=@P_RequestorID,[RequestorDepartmentID]=@P_RequestorDepartmentID,
	[Subject]=@P_Subject,[Details]=@P_RequestDetails,[Priority]=@P_Priority,DeleteFlag=@P_DeleteFlag,
	UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where [MaintenanceID]=@P_MaintenanceID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 53) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select a.ReferenceNumber from Maintenance as a 
	  where MaintenanceID = @P_MaintenanceID) and (W.Status = 53 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from Maintenance as m where m.MaintenanceID=@P_MaintenanceID)) =53)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		

	insert into [dbo].[MaintenanceCommunicationHistory]
	select @P_MaintenanceID,@P_Comment,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_DelegateUser

	if(@P_Action ='Approve' and (select top(1) Status from [dbo].[Workflow] where [ReferenceNumber]=
	(select[ReferenceNumber] from [dbo].[Maintenance] where [MaintenanceID]= @P_MaintenanceID) order by[WorkflowID] desc ) = 55)
	update [Maintenance] set [IsMaintenanceHeadApproved] = 1  where [MaintenanceID]= @P_MaintenanceID

	SELECT top 1 [MaintenanceID],[ReferenceNumber] as ReferenceNumber,CreatedBy as CreatorID, 
	(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID, 
	(select top 1 Status from [dbo].[Workflow] where [ReferenceNumber] = [ReferenceNumber] order by WorkflowID desc) as CurrentStatus
	from [dbo].[Maintenance] where [MaintenanceID]=@P_MaintenanceID

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update  [dbo].[Maintenance] set  [ApproverDepartment]=@P_ApproverDepartmentID where  [MaintenanceID]=@P_MaintenanceID


END
GO
/****** Object:  StoredProcedure [dbo].[Save_MaintenanceCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MaintenanceCommunicationHistory]
	-- Add the parameters for the stored procedure here
	@P_CommunicationID int=0 ,
	@P_MaintenanceID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy nvarchar(max) =	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[MaintenanceCommunicationHistory](MaintenanceID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_MaintenanceID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('TrainingCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MasterAdminManagement]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MasterAdminManagement]

	@P_LookupsID int = null,
	@P_Category nvarchar(250) = null,
	@P_DisplayName nvarchar(250) = null,
	@P_DisplayOrder nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_LookupsID is null or @P_LookupsID =0)
	begin
	insert into [dbo].[M_AdminManagement]([Category],[DisplayName],[DisplayOrder],[CreatedBy],[CreatedDateTime])
	select @P_Category,@P_DisplayName,@P_DisplayOrder,@P_CreatedBy,@P_CreatedDateTime
	set @P_LookupsID = (SELECT IDENT_CURRENT('M_Lookups'))
	end
	Else if(@P_DeleteFlag != 1)
	begin
	update [dbo].[M_AdminManagement] set DisplayName=@P_DisplayName,Displayorder=@P_DisplayOrder,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LookupsID=@P_LookupsID
	end
	else
	begin
	update [dbo].[M_AdminManagement] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where LookupsID=@P_LookupsID
	end

	SELECT @P_LookupsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MediaDesignRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaDesignRequest] 
	-- Add the parameters for the stored procedure here
    @P_DesignID int = null,
	@P_Date datetime=null,
	@P_SourceOU nvarchar(255) = null,
	@P_SourceName nvarchar(255) = null,
	@P_Title nvarchar(255) = null,
	@P_InitiativeProjectActivity nvarchar(255) = null,
	@P_DeliverableDate datetime = null,
	@P_DiwansRole nvarchar(255) = null,
	@P_OtherParties nvarchar(255) = null,
	@P_TargetGroup nvarchar(255) = null,
	@P_TypeOfDesignRequired nvarchar(255) = null,
	@P_Languages int = null,
	@P_GeneralObjective nvarchar(Max) = null,
	@P_MainObjective nvarchar(Max) = null,
	@P_StrategicObjective nvarchar(Max) = null,
	@P_Action nvarchar(255)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ParentCommunicationId  int= null ,
	@P_DelegateUser int=null,
	@P_ApproverDepartmentID int = null
AS
BEGIN 
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	
	SET NOCOUNT ON;
	declare @P_ReferenceNumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from MediaDesignRequest) = 0)
	set @temp = (SELECT IDENT_CURRENT('MediaDesignRequest'))
	else
	set @temp = (SELECT IDENT_CURRENT('MediaDesignRequest'))+1
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MD');

	if(@P_DesignID is null or @P_DesignID =0)
	begin
	insert into [MediaDesignRequest]([ReferenceNumber],[Date],[SourceOU],[SourceName],[Title],[InitiativeProjectActivity],[DiwansRole],
	[OtherParties],[TargetGroup],[DeliverableDate],[TypeOfDesignRequired],[Languages],[GeneralObjective],
	[MainObjective],[StrategicObjective],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_ReferenceNumber,@P_Date,@P_SourceOU,@P_SourceName,@P_Title,@P_InitiativeProjectActivity,@P_DiwansRole,@P_OtherParties,
	@P_TargetGroup,@P_DeliverableDate,	@P_TypeOfDesignRequired,@P_Languages,@P_GeneralObjective,@P_MainObjective,@P_StrategicObjective,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_DesignID = (SELECT IDENT_CURRENT('[MediaDesignRequest]'))

	set @temp = (select SCOPE_IDENTITY());
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MD');
	
	update [dbo].[MediaDesignRequest]  set  [ReferenceNumber]=@P_Referencenumber where DesignID=@temp


	insert into [MediaDesignRequestCommunicationHistory]([DesignID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID])
	select @P_DesignID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment,@P_ParentCommunicationId
	end
	Else
	if(@P_DesignID is not NUll)
	begin
	update [dbo].[MediaDesignRequest] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,Title=@P_Title,Date=@P_Date,
	InitiativeProjectActivity=@P_InitiativeProjectActivity,DeliverableDate=@P_DeliverableDate,
	DiwansRole=@P_DiwansRole,OtherParties=@P_OtherParties,TargetGroup=@P_TargetGroup, TypeOfDesignRequired=@P_TypeOfDesignRequired,
	Languages=@P_Languages,GeneralObjective=@P_GeneralObjective,MainObjective=@P_MainObjective,
	StrategicObjective=@P_StrategicObjective,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where DesignID=@P_DesignID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 68) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from MediaDesignRequest as c
	  where DesignID = @P_DesignID) and (W.Status = 68) order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from MediaDesignRequest as m where m.DesignID=@P_DesignID)) =68)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end


	insert into [MediaDesignRequestCommunicationHistory]([DesignID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID],DelegateUser)
	select @P_DesignID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_ParentCommunicationId,@P_DelegateUser
	end
   
   if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update  [dbo].[MediaDesignRequest] set    [ApproverDepartmentID] = @P_ApproverDepartmentId where DesignID=@P_DesignID


   SELECT DesignID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[MediaDesignRequest]
	where DesignID=@P_DesignID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MediaDesignRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaDesignRequestCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_DesignID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_Action nvarchar(255)= null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [MediaDesignRequestCommunicationHistory](DesignID,[Message],ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_DesignID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MediaDesignRequestCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewCampaignRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaNewCampaignRequest] 
	-- Add the parameters for the stored procedure here
    @P_CampaignID int = null,
	@P_Date datetime=null,
	@P_SourceOU nvarchar(255) = null,
	@P_SourceName nvarchar(255) = null,
	@P_CampaignPeriod nvarchar(255) = null,
	@P_InitiativeProjectActivity nvarchar(255) = null,
	@P_CampaignStartDate datetime = null,
	@P_DiwansRole nvarchar(255) = null,
	@P_OtherEntities nvarchar(255) = null,
	@P_TargetGroup nvarchar(255) = null,
	@P_TargetAudience nvarchar(255) = null,
	@P_Location nvarchar(255) = null,
	@P_Languages int = null,
	@P_MediaChannels int = null,
	@P_Notes nvarchar(Max) = null,
	@P_RequestDetails nvarchar(Max) = null,
	@P_GeneralInformation nvarchar(Max) = null,
	@P_MainObjective nvarchar(Max) = null,
	@P_MainIdea nvarchar(Max) = null,
	@P_StrategicGoals nvarchar(Max) = null,
	@P_Action nvarchar(255)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ParentCommunicationId  int= null ,
	@P_DelegateUser int=null,
	@P_ApproverDepartmentID int = null
AS
BEGIN 
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	
	SET NOCOUNT ON;
	declare @P_ReferenceNumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from MediaDesignRequest) = 0)
	set @temp = (SELECT IDENT_CURRENT('MediaNewCampaignRequest'))
	else
	set @temp = (SELECT IDENT_CURRENT('MediaNewCampaignRequest'))+1
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MC');

	if(@P_CampaignID is null or @P_CampaignID =0)
	begin
	insert into [MediaNewCampaignRequest]([ReferenceNumber],[Date],[SourceOU],[SourceName],[InitiativeProjectActivity],[CampaignStartDate],[CampaignPeriod],[DiwansRole],
	[OtherEntities],[TargetGroup],[TargetAudience],[Location],[Languages],[MediaChannels],[RequestDetails],[Notes],[GeneralInformation],
	[MainObjective],[MainIdea],[StrategicGoals],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_ReferenceNumber,@P_Date,@P_SourceOU,@P_SourceName,@P_InitiativeProjectActivity,@P_CampaignStartDate,@P_CampaignPeriod,@P_DiwansRole,@P_OtherEntities,
	@P_TargetGroup,@P_TargetAudience,@P_Location,@P_Languages,@P_MediaChannels,@P_RequestDetails,@P_Notes,@P_GeneralInformation,@P_MainObjective,@P_MainIdea,@P_StrategicGoals,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_CampaignID = (SELECT IDENT_CURRENT('[MediaNewCampaignRequest]'))

	set @temp = (select SCOPE_IDENTITY());
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MC');
	
	update [dbo].[MediaNewCampaignRequest]  set  [ReferenceNumber]=@P_Referencenumber where CampaignID=@temp

	insert into [MediaNewCampaignRequestCommunicationHistory]([CampaignID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID])
	select @P_CampaignID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment,@P_ParentCommunicationId
	end
	Else
	if(@P_CampaignID is not NUll)
	begin
	update [dbo].[MediaNewCampaignRequest] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,Date=@P_Date,
	InitiativeProjectActivity=@P_InitiativeProjectActivity,CampaignStartDate=@P_CampaignStartDate,CampaignPeriod=@P_CampaignPeriod,
	DiwansRole=@P_DiwansRole,OtherEntities=@P_OtherEntities,TargetGroup=@P_TargetGroup, TargetAudience=@P_TargetAudience,Location=@P_Location,
	Languages=@P_Languages,MediaChannels=@P_MediaChannels,RequestDetails=@P_RequestDetails,Notes=@P_Notes,GeneralInformation=@P_GeneralInformation,MainObjective=@P_MainObjective,
	MainIdea=@P_MainIdea,StrategicGoals=@P_StrategicGoals,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where CampaignID=@P_CampaignID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 24 or Status = 25) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from MediaNewCampaignRequest as c
	  where CampaignID = @P_CampaignID) and (W.Status =86)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from MediaNewCampaignRequest as m where m.CampaignID=@P_CampaignID)) =86)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end


	insert into [MediaNewCampaignRequestCommunicationHistory]([CampaignID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID],DelegateUser)
	select @P_CampaignID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_ParentCommunicationId,@P_DelegateUser
	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [dbo].[MediaNewCampaignRequest] set   [ApproverDepartmentID] = @P_ApproverDepartmentId where CampaignID=@P_CampaignID

   
   SELECT CampaignID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[MediaNewCampaignRequest]
	where CampaignID=@P_CampaignID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewCampaignRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaNewCampaignRequestCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_CampaignID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_Action nvarchar(255)= null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [MediaNewCampaignRequestCommunicationHistory]([CampaignID],[Message],ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_CampaignID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MediaNewCampaignRequestCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewPhotoGRapherRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaNewPhotoGRapherRequest]
	@P_PhotoGrapherID int = null,	
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,	
	@P_Date datetime =null,
	@P_EventDate datetime =null,
	@P_EventName nvarchar (MAX) = null,	
	@P_Location nvarchar(255) =null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ParentCommunicationId int =null,
	@P_CommunicationId int =null,
	@P_DelegateUser int=null,
	@P_ApproverDepartmentID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from MediaNewPhotographerRequest) = 0)
	set @temp = (SELECT IDENT_CURRENT('MediaNewPhotographerRequest'))
	else
	set @temp = (SELECT IDENT_CURRENT('MediaNewPhotographerRequest'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MPG');


	if(@P_PhotoGrapherID is null or @P_PhotoGrapherID =0)
	begin
	insert into [MediaNewPhotographerRequest] ([ReferenceNumber],[Date],[SourceOU],[SourceName],[EventName],[EventDate],[Location],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_Referencenumber,@P_Date,@P_SourceOU,@P_SourceName,@P_EventName,@P_EventDate,@P_Location,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	set @P_PhotoGrapherID = (SELECT IDENT_CURRENT('MediaNewPhotographerRequest'))

	insert into [MediaNewPhotographerRequestCommunicationHistory]([PhotoGrapherID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID])
	select @P_PhotoGrapherID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment,@P_ParentCommunicationId

	set @temp = (SELECT IDENT_CURRENT('MediaNewPhotographerRequest'))
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MPG');

	update [MediaNewPhotographerRequest] set ReferenceNumber = @P_Referencenumber where PhotoGrapherID=@P_PhotoGrapherID

	end

	Else

	
	if(@P_PhotoGrapherID is not NUll)
	begin
	update [MediaNewPhotographerRequest] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,Date=@P_Date,EventName=@P_EventName,EventDate=@P_EventDate,Location=@P_Location,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where PhotoGrapherID=@P_PhotoGrapherID
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 74) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from MediaNewPhotographerRequest as c
	  where PhotoGrapherID = @P_PhotoGrapherID) and (W.Status = 74)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from MediaNewPhotographerRequest as m where m.PhotoGrapherID=@P_PhotoGrapherID)) =74)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end


	insert into [MediaNewPhotographerRequestCommunicationHistory]([PhotoGrapherID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID],DelegateUser)
	select @P_PhotoGrapherID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_ParentCommunicationId,@P_DelegateUser
	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [MediaNewPhotographerRequest] set    [ApproverDepartmentID] = @P_ApproverDepartmentId where PhotoGrapherID=@P_PhotoGrapherID


	select PhotoGrapherID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [MediaNewPhotographerRequest] where PhotoGrapherID=@P_PhotoGrapherID
END


GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewPhotographerRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_MediaNewPhotographerRequestCommunicationHistory]  ******/
CREATE PROCEDURE [dbo].[Save_MediaNewPhotographerRequestCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_PhotoGrapherID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_Action nvarchar(255) = null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into MediaNewPhotographerRequestCommunicationHistory (PhotoGrapherId,Message,ParentCommunicationID,Action,CreatedBy,createdDateTime)
		select  @P_PhotoGrapherID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MediaNewPhotographerRequestCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewPressReleaseRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaNewPressReleaseRequest]
	@P_PressReleaseID int = null,	
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,	
	@P_Date datetime =null,
	@P_Subject nvarchar(255) =null,
	@P_Type nvarchar (255) = null,	
	@P_EventName nvarchar (255) = null,	
	@P_Location nvarchar(255) =null,
	@P_Action nvarchar(100)= null,
	@P_AttendedBy nvarchar(255) =null,
	@P_Partners nvarchar(255)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ParentCommunicationId int =null,
	@P_CommunicationId int =null,
	@P_DelegateUser int=null,
	@P_ApproverDepartmentID int = null
AS
BEGIN
	
	SET NOCOUNT ON;
	declare @P_Referencenumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	if((select count(*) from MediaNewPhotographerRequest) = 0)
	set @temp = (SELECT IDENT_CURRENT('MediaNewPressReleaseRequest'))
	else
	set @temp = (SELECT IDENT_CURRENT('MediaNewPressReleaseRequest'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MPR');


	if(@P_PressReleaseID is null or @P_PressReleaseID =0)
	begin
	insert into [MediaNewPressReleaseRequest] ([ReferenceNumber],[Date],[SourceOU],[SourceName],[EventName],[Subject],[Type],[Location],[AttendedBy],[Partners],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
	select @P_Referencenumber,@P_Date,@P_SourceOU,@P_SourceName,@P_EventName,@P_Subject,@P_Type,@P_Location,@P_AttendedBy,@P_Partners,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	
	set @P_PressReleaseID = (SELECT IDENT_CURRENT('MediaNewPressReleaseRequest'))

	insert into [MediaNewPressReleaseRequestCommunicationHistory](PressReleaseID,[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID])
	select @P_PressReleaseID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment,@P_ParentCommunicationId

	set @temp = (SELECT IDENT_CURRENT('MediaNewPressReleaseRequest'))
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MPR');

	update [MediaNewPressReleaseRequest] set ReferenceNumber = @P_Referencenumber where PressReleaseID=@P_PressReleaseID

	end

	Else

	
	if(@P_PressReleaseID is not NUll)
	begin
	update [MediaNewPressReleaseRequest] set SourceOU=@P_SourceOU,SourceName=@P_SourceName,Date=@P_Date,EventName=@P_EventName, Subject=@P_Subject,Type=@P_Type,Location=@P_Location,AttendedBy=@P_AttendedBy,Partners=@P_Partners,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where PressReleaseID=@P_PressReleaseID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status =80) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from MediaNewPressReleaseRequest as c
	  where PressReleaseID = @P_PressReleaseID) and (W.Status = 80)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from MediaNewPressReleaseRequest as m where m.PressReleaseID=@P_PressReleaseID)) =80)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end

	insert into [MediaNewPressReleaseRequestCommunicationHistory](PressReleaseID,[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID],DelegateUser)
	select @P_PressReleaseID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_ParentCommunicationId,@P_DelegateUser
	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [MediaNewPressReleaseRequest] set   [ApproverDepartmentID] = @P_ApproverDepartmentId where PressReleaseID=@P_PressReleaseID

	select PressReleaseID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from MediaNewPressReleaseRequest where PressReleaseID=@P_PressReleaseID
END


GO
/****** Object:  StoredProcedure [dbo].[Save_MediaNewPressReleaseRequestCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MediaNewPressReleaseRequestCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_PressReleaseID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_Action nvarchar(255) = null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [MediaNewPressReleaseRequestCommunicationHistory](PressReleaseID,Message,ParentCommunicationID,Action,CreatedBy,createdDateTime)
		select  @P_PressReleaseID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MediaNewPressReleaseRequestCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_Meeting]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Meeting]

	@P_MeetingID int = null,
	@P_OrganizerName int = 0,
	@P_OrganizerDepartment int = 0,
	@P_Subject nvarchar(250) = null,
	@P_Location nvarchar(250) = null,
	@P_StartDateTime Datetime = null,
	@P_EndDateTime Datetime = null,
	@P_MeetingType int=0,
	@P_InternalInvitees bit=false,
	@P_ExternalInvitees bit=false,
	@P_RemindMeAt Datetime = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Action nvarchar(250) = null,
	 @P_Status int=null,
	 @P_MOMID int =0,
	 @P_Comment nvarchar(250) = null,
	 @P_ParentCommunicationId int =0
	
AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Action = 'Submit')
	set @P_Status = 114
	if(@P_Action = 'Reschedule')
	set @P_Status = 114
	if(@P_Action = 'cancel')
	set @P_Status = 115
	declare @P_ReferenceNumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Meeting) = 0)
	set @temp = (SELECT IDENT_CURRENT('Meeting'))
	else
	set @temp = (SELECT IDENT_CURRENT('Meeting'))+1
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MTG');

	if(@P_MeetingID is null or @P_MeetingID =0)
	begin
	insert into [Meeting](ReferenceNumber,OrganizerDepartmentID ,OrganizerUserID,[Subject],[Location],[StartDateTime],[EndDateTime],
	[MeetingType],[IsInternalInvitees],[IsExternalInvitees],[RemindMeAt],[DeleteFlag],[CreatedBy],[CreatedDateTime],[Status])
	select @P_ReferenceNumber, @P_OrganizerName,@P_OrganizerDepartment,@P_Subject,@P_Location,@P_StartDateTime,@P_EndDateTime,@P_MeetingType,@P_InternalInvitees,@P_ExternalInvitees,@P_RemindMeAT,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_Status
	set @P_MeetingID = (SELECT IDENT_CURRENT('Meeting'))
		set @temp = (select SCOPE_IDENTITY());
	select  @P_ReferenceNumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MTG');
	
	update [dbo].[Meeting]  set  [ReferenceNumber]=@P_Referencenumber where MeetingID=@temp

	insert into [MeetingCommunicationHistory](MeetingID,[Action],[CreatedBy],[CreatedDateTime],Comment,[ParentCommunicationID])
	select @P_MeetingID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment,@P_ParentCommunicationId
	
	end
	Else
	begin
	update [dbo].[Meeting] set  OrganizerDepartmentID=@P_OrganizerName,OrganizerUserID=@P_OrganizerDepartment,Subject=@P_Subject,
	Location=@P_Location,StartDateTime=@P_StartDateTime,EndDateTime=@P_EndDateTime,MeetingType=@P_MeetingType,
	IsInternalInvitees=@P_InternalInvitees,IsExternalInvitees=@P_ExternalInvitees,RemindMeAt=@P_RemindMeAT,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,[Status]=@P_Status
	where MeetingID=@P_MeetingID
	insert into [MeetingCommunicationHistory](MeetingID,[Action],[CreatedBy],[CreatedDateTime],Comment,[ParentCommunicationID])
	select @P_MeetingID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_ParentCommunicationId
	
	
	end

	SELECT MeetingID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID  from Meeting where MeetingID=@P_MeetingID


	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MeetingCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_MeetingCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_MeetingID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	0,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].MeetingcommunicationHistory(MeetingID,Comment,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_MeetingID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MeetingCommunicationHistory'))
	end
	SELECT @P_CommunicationID as CommunicationID
END

--Access Control--

/****** Object:  StoredProcedure [dbo].[AccessControl]    Script Date: 16-10-2019 4.44.20 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[Save_MeetingExternalInvitees]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MeetingExternalInvitees]
	@P_MeetingID int=0,
	@P_Organization nvarchar(250)=null,
	@P_ContactPerson nvarchar(250)=null,
	@P_EmailID nvarchar(250)=null,
	@P_MeetingExternalID int = 0,
	@P_DeleteFlag bit = 0,
	@P_UserID int = 0,
	@P_ActionDateTime datetime = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	if(@P_MeetingExternalID is not null   )
	update MeetingExternalInvitees set [DeleteFlag]=@P_DeleteFlag,UpdatedBy=@P_UserID,UpdatedDateTime=@P_ActionDateTime ,
	ContactPerson=@P_ContactPerson,Organization=@P_Organization,EmailID=@P_EmailID
	where MeetingID= @P_MeetingID and MeetingExternalInviteesID= @P_MeetingExternalID

	if (@P_MeetingExternalID is null or @P_MeetingExternalID =0)  
	begin
	insert into MeetingExternalInvitees
    select @P_MeetingID,  @P_Organization,@P_ContactPerson,@P_EmailID,0 ,@P_UserID,null,@P_ActionDateTime,null
	set @P_MeetingExternalID = (SELECT IDENT_CURRENT('MeetingExternalInvitees'))
	end
	

	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MeetingInternalInvitees]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MeetingInternalInvitees]
	@P_MeetingID int=0,
	@P_DepartmentID int=0,
	@P_Name int=0,
	@P_MeetingInternalID int=0,
	@P_DeleteFlag bit = 0,
	@P_UserID int = 0,
	@P_ActionDateTime datetime = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	if(@P_MeetingInternalID is not null   )
	update MeetingInternalInvitees set [DeleteFlag]=@P_DeleteFlag,UpdatedBy=@P_UserID,UpdatedDateTime=@P_ActionDateTime ,
	UserID=@P_Name,DepartmentID=@P_DepartmentID
	where MeetingID= @P_MeetingID and MeetingInternalInviteesID= @P_MeetingInternalID

	if @P_MeetingInternalID is  null or @P_MeetingInternalID=0
	begin
	insert into MeetingInternalInvitees
    select @P_MeetingID,  @P_DepartmentID,@P_Name,0 ,@P_UserID,null,@P_ActionDateTime,null
	set @P_MeetingInternalID = (SELECT IDENT_CURRENT('MeetingInternalInvitees'))
	end
	

	
END

	
GO
/****** Object:  StoredProcedure [dbo].[Save_MeetingRemindMeAt]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Save_MeetingRemindMeAt]
	@P_MeetingID int=0,
	@P_RemindMeDateTime datetime=null,
	@P_MeetingRemindMeID int=54,
	@P_DeleteFlag bit = 0,
	@P_UserID int = 0,
	@P_ActionDateTime datetime = null,
	@P_Type nvarchar(max)='Delete',
	@P_ID nvarchar(max)= null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	


	 if( @P_MeetingRemindMeID is not null and @P_Type='1')
	update MeetingRemindMeAt set [DeleteFlag]=@P_DeleteFlag,RemindMeDateTime=@P_RemindMeDateTime,UpdatedBy=@P_UserID,UpdatedDateTime=@P_ActionDateTime 
	where MeetingID= @P_MeetingID and MeetingRemindID= @P_MeetingRemindMeID

	if( (@P_MeetingRemindMeID is  null or @P_MeetingRemindMeID =0) and @P_Type='1') 
	begin
	insert into MeetingRemindMeAt
    select @P_MeetingID,  @P_RemindMeDateTime,0 ,@P_UserID,@P_ActionDateTime,null,null
	set @P_MeetingRemindMeID = (SELECT IDENT_CURRENT('MeetingRemindMeAt'))
	end
	if(@P_Type='Delete')
	update MeetingRemindMeAt set DeleteFlag = 1, UpdatedBy= @P_UserID, UpdatedDateTime= @P_ActionDateTime
	where MeetingRemindID not in (Select value from string_split(@P_ID,',')) and
	MeetingID= @P_MeetingID
	
	
	--select r from MeetingRemindMeAt
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Memo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_Memo]  ******/
CREATE PROCEDURE [dbo].[Save_Memo]--[Save_Memo] 
	@P_MemoID int = null,
	@P_Title nvarchar(Max) = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_Details nvarchar(MAX) = null,
	@P_Private nvarchar (250) = null,
	@P_Priority nvarchar (250) = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_ApproverDepartmentId int = 0,
	@P_DelegateUser int=null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	
	 declare @P_Referencenumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	 declare @UpdatedEmail nvarchar(250),@WorkflowRef nvarchar(250)
	 set @UpdatedEmail=(select officialMailID from UserProfile where UserProfileId=@P_UpdatedBy)
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('Memo'))
	--select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','M');		

	if(@P_MemoID is null or @P_MemoID =0)
	begin
		insert into [Memo] ([ReferenceNumber],[Title],[SourceOU],[SourceName],[Details],[Private],[Priority],[DeleteFlag], [CreatedBy] ,[CreatedDateTime])
		select @P_Referencenumber,@P_Title,@P_SourceOU,@P_SourceName,@P_Details,@P_Private,@P_Priority,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
		set @temp = (select SCOPE_IDENTITY());
		set @P_MemoID = (select SCOPE_IDENTITY());
		select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','M');

		update [dbo].[Memo]  set  [ReferenceNumber]=@P_Referencenumber where MemoID=@temp

		insert into [dbo].[MemoHistory]([MemoID],[Action],[ActionBy],[ActionDateTime],[Comments])
		select @temp,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comment

		select top 1 MemoId,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Memo] order by MemoID desc
	end

	Else if(@P_MemoID is not NUll)
	begin
		update [Memo] set  Title=@P_Title,SourceOU=@P_SourceOU,SourceName=@P_SourceName,Details=@P_Details,Private=@P_Private,Priority=@P_Priority,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
		where MemoID=@P_MemoID

		set @WorkflowRef = (select ReferenceNumber from memo where MemoId=@P_MemoID)

		Update [Workflow]  set IsRedirect=1 where ToEmail=@UpdatedEmail AND
 ReferenceNumber =@WorkflowRef and (WorkflowProcess='RedirectWorkflow'or WorkflowProcess='ApprovalWorkflow') 
 and Status=3 and @P_Action='Redirect'

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 1 or Status = 2) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from @Workflow W where W.ReferenceNumber =(select ReferenceNumber from Memo 
	  where MemoID = @P_MemoID) and (W.Status = 2 or W.Status = 1))))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from Memo as m where m.MemoID=@P_MemoID)) =2
			and @P_Action != 'Close')
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end

		insert into [dbo].[MemoHistory]([MemoID],[Action],[ActionBy],[ActionDateTime],[Comments],[DelegateUser])
		select @P_MemoID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comment,@P_DelegateUser

		select MemoId,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [Memo] where MemoID=@P_MemoID
	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [Memo] set InitalApproverDepartment = @P_ApproverDepartmentId where MemoID= @P_MemoID
	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MemoClone]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MemoClone]-- 1,1
	-- Add the parameters for the stored procedure here
	@P_UserID int=0,
	@P_MemoID int =0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    declare @temp int = null,  @P_Referencenumber nvarchar(255) = null;

insert into [Memo] ([Title],[SourceOU],[SourceName],[Details],[Private],[Priority]
,[InitalApproverDepartment],[DeleteFlag],[CreatedBy],[CreatedDateTime])
select [Title],[SourceOU],[SourceName],[Details],[Private],[Priority]
,[InitalApproverDepartment],[DeleteFlag],[CreatedBy],(select GETUTCDATE())  from [Memo] where @P_MemoID=[MemoID]
	set @temp = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','M');
	
	update [dbo].[Memo]  set  [ReferenceNumber]=@P_Referencenumber where [MemoID]=@temp

	insert into [dbo].[MemoHistory] ([MemoID],[Action],[ActionBy],[ActionDateTime],[Comments])
	select @temp,'Clone',@P_UserID,(select GETUTCDATE()) ,''



insert into [dbo].[MemoDestinationDepartment]([MemoID],[DepartmentID],[DeleteFlag])
			select @temp,[DepartmentID],0 from [dbo].[MemoDestinationDepartment] where [MemoID]=@P_MemoID and (DeleteFlag is null or DeleteFlag =0)

insert into [dbo].[MemoDestinationUsers]([MemoID],[UserID],[DeleteFlag])
			select @temp,[UserID],0 from [dbo].[MemoDestinationUsers] where [MemoID]=@P_MemoID and (DeleteFlag is null or DeleteFlag =0)
			
insert into [dbo].[MemoKeywords]([MemoID],[UserID],[Keywords],[DeleteFlag])
			select @temp,[UserID],[Keywords],0 from [dbo].[MemoKeywords] where  [MemoID]=@P_MemoID and (DeleteFlag is null or DeleteFlag =0)

						
insert into [dbo].[Attachments]([ServiceID],[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],[CreatedDateTime],[ReferenceNumber])
			select @temp,[Type],[AttachmentGuid],[AttachmentsName],[DeleteFlag],[CreatedBy],(select GETUTCDATE()) ,@P_Referencenumber 
			from [dbo].[Attachments] where  [ReferenceNumber]=(select [ReferenceNumber] from [Memo] where [MemoID]=@P_MemoID and (DeleteFlag is null or DeleteFlag =0)) 


insert into [dbo].[Workflow] ([ReferenceNumber],[Service],[WorkflowProcess],[FromName],[FromEmail],[ToName],[ToEmail],[Status],CreatedDateTime)
			select @P_Referencenumber,'Memo','DraftWorkflow',(select [EmployeeName] from [dbo].[UserProfile] where UserProfileId=@P_UserID)
			,(select OfficialMailId from [dbo].[UserProfile] where UserProfileId=@P_UserID),
			(SELECT top(1) ToName from [dbo].[Workflow] where Service='Memo' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,(SELECT top(1) ToEmail from [dbo].[Workflow] where Service='Memo' and  WorkflowProcess='SubmissionWorkflow' order by WorkflowID desc )
			,1,(select GETUTCDATE())

			select @temp
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MemoDestinationDepartment]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MemoDestinationDepartment]-- null,42,'',

	@P_MemoDestinationID int = null,
	@P_MemoID int = null,	
	@P_DepartmentID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_MemoID is not null)
	update MemoDestinationDepartment set [DeleteFlag]=1  where [MemoID] = @P_MemoID and DepartmentID=@P_DepartmentID


	if(@P_Type = 1 and @P_MemoID is not null)	
	begin
	insert into MemoDestinationDepartment
	select @P_MemoID,@P_DepartmentID,0
	set @P_MemoDestinationID = (SELECT IDENT_CURRENT('MemoDestinationDepartment'))
	end
		
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MemoDestinationUser]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MemoDestinationUser]-- null,42,'',

	@P_MemoDestinationID int = null,
	@P_MemoID int = null,	
	@P_UserID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_MemoID is not null)
	update [MemoDestinationUsers] set [DeleteFlag]=1  where [MemoID] = @P_MemoID and UserID=@P_UserID


	if(@P_Type = 1 and @P_MemoID is not null)	
	begin
	insert into [dbo].[MemoDestinationUsers]
	select @P_MemoID,@P_UserID,0
	set @P_MemoDestinationID = (SELECT IDENT_CURRENT('MemoDestinationUsers'))
	end
		
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MemoKeywords]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MemoKeywords] --15,null,null,null,0

	@P_MemoKeywordsID int = null,
	@P_MemoID int = null,	
	@P_UserID int = null,
	@P_Keywords nvarchar(250) = null,
	@P_Type int = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_Type = 1)
	begin
	insert into [dbo].[MemoKeywords]
	select @P_MemoID,@P_UserID,@P_Keywords,0
	set @P_MemoKeywordsID = (SELECT IDENT_CURRENT('MemoKeywords'))
	end
	
	if(@P_Type >1)
	begin
	update [dbo].[MemoKeywords] set [DeleteFlag] =1
	where MemoID=@P_MemoID and [Keywords] = @P_Keywords
	end

	SELECT @P_MemoKeywordsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_MOM]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_MOM]
	@P_MeetingID int=0,
	@P_PointsDiscussed nvarchar(Max)=null,
	@P_Suggestion nvarchar(Max)=null,
	@P_MOMID int = 0,
	@P_CreatedBy int =0,
	@P_CreatedDateTime datetime = null,
	@P_PendingPoints nvarchar(Max)=null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	if @P_MOMID is null or @P_MOMID=0
	begin

	insert into MOM(MeetingID,PointsDiscussed,PendingPoints,Suggestion, CreatedBy, CreatedDateTime)
    select @P_MeetingID,@P_PointsDiscussed,@P_PendingPoints, @P_Suggestion , @P_CreatedBy,@P_CreatedDateTime

	 insert into [MeetingCommunicationHistory](MeetingID,[Action],[CreatedBy],[CreatedDateTime],Comment,[ParentCommunicationID],IsMom)
	select @P_MeetingID,'Submit',@P_CreatedBy,@P_CreatedDateTime,'',0,1

    set @P_MOMID = (SELECT IDENT_CURRENT('MOM'))
    end
    if @P_MOMID >0
    begin
    update MOM set PointsDiscussed=@P_PointsDiscussed,PendingPoints=@P_PendingPoints, Suggestion=@P_Suggestion, CreatedBy=@P_CreatedBy, CreatedDateTime=@P_CreatedDateTime where MOMID=@P_MOMID
    end

	SELECT MOMID,(select ReferenceNumber from Meeting as c where c.MeetingID=MOM.MeetingID) as ReferenceNumber,CreatedBy as CreatorID  from MOM where MOMID=@P_MOMID

END
GO
/****** Object:  StoredProcedure [dbo].[Save_News]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_News]

	@P_NewsID int = null,
	@P_News nvarchar(Max) = null,
	@P_ExpiryDate nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	
	if(@P_NewsID is null or @P_NewsID =0)
	begin 
		 insert into[dbo].[News](News,ExpiryDate,[CreatedBy],[CreatedDateTime],DeleteFlag)
		select @P_News,@P_ExpiryDate,@P_CreatedBy,@P_CreatedDateTime,@P_DeleteFlag
		
		set @P_NewsID = (SELECT IDENT_CURRENT('News'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		
		update [dbo].[News] set News=@P_News,ExpiryDate=@P_ExpiryDate,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime,DeleteFlag=@P_DeleteFlag where NewsID=@P_NewsID
			end
	else
	begin
	update [dbo].[News] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where NewsID=@P_NewsID
	end

	SELECT @P_NewsID as NewsID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Notification]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** Object:  StoredProcedure [dbo].[Save_Notification]   ******/
Create PROCEDURE [dbo].[Save_Notification]

	@P_ReferenceNumber nvarchar(250) = null,	
	@P_Service nvarchar(250) = null,	
	@P_ServiceID int = 0,	
	@P_WorkflowProcess nvarchar(250) = null,
	@P_FromName nvarchar(250) = null,
	@P_FromEmail nvarchar(250) = null,
	@P_ToName nvarchar(250) = null,
	@P_ToEmail nvarchar(250) = null,
	@P_Status int = null	,
	@P_DelegateFromEmail nvarchar(255) = null,
	@P_DelegateFromName nvarchar(255) = null,
	@P_DelegateToEmail nvarchar(255) = null,
	@P_DelegateToName nvarchar(255) = null,
	@P_IsAnonymous bit = 0

AS
BEGIN

		IF(@P_WorkflowProcess='HRComplaintSuggestions' AND @P_WorkflowProcess ='SubmissionWorkflow')
		begin
			if((SELECT RequestCreatedBy from HRComplaintSuggestions where HRComplaintSuggestionsID=@P_ServiceID )= 'true')
			SET @P_IsAnonymous = 1;
		end

		insert into Notification (ServiceID,[ReferenceNumber],Service,Process,LastUpdateDate,IsRead,FromEmail,ToEmail,DelegateToEmail,DelegateFromEmail,IsAnonymous)
		select @P_ServiceID,@P_ReferenceNumber,@P_Service,@P_WorkflowProcess,GETUTCDATE(),0,@P_FromEmail,@P_ToEmail,@P_DelegateToEmail,@P_DelegateFromEmail,@P_IsAnonymous				
END
GO
/****** Object:  StoredProcedure [dbo].[Save_OfficialMission]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_OfficialMission]

	@P_OfficialMissionID int = null,
	@P_Date datetime = null,
	@P_EmployeeName nvarchar(250) = null,
	@P_FromDate datetime = null,
	@P_EndDate datetime = null,
	@P_Description nvarchar(250) = null,	
	@P_Type nvarchar(MAX) = null,
	@P_Approver nvarchar(250) = null,
	@P_HRManager nvarchar(250) = null,
	@P_HRTeam nvarchar(250) = null,
	@P_Hospitality nvarchar(250) = null,		
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_OfficialMissionID is null or @P_OfficialMissionID =0)
	begin
	insert into [dbo].[OfficialMission]
	select @P_Date,@P_EmployeeName,@P_FromDate,@P_EndDate,@P_Description,@P_Type,@P_Approver,@P_HRManager,@P_HRTeam,@P_Hospitality,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_OfficialMissionID = (SELECT IDENT_CURRENT('OfficialMission'))
	end
	Else
	begin
	update [dbo].[OfficialMission] set Date=@P_Date,EmployeeName=@P_EmployeeName,FromDate=@P_FromDate,EndDate=@P_EndDate,Description=@P_Description,Type=@P_Type,Approver=@P_Approver,HRManager=@P_HRManager,HRTeam=@P_HRTeam,Hospitality=@P_Hospitality,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where OfficialMissionID=@P_OfficialMissionID
	end

	SELECT @P_OfficialMissionID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_OfficialTask]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[Save_OfficialTask] ******/
CREATE PROCEDURE [dbo].[Save_OfficialTask]

	@P_OfficialTaskID int = null,
	@P_Date datetime = null,
    @P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_OfficialTaskType nvarchar(250) = null,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null,
	@P_NumberofDays int = null,
	@P_OfficialTaskDescription nvarchar(Max) = null,
	@P_Action nvarchar(250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Comments nvarchar(Max) = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from OfficialTask) = 0)
       set @temp = (SELECT IDENT_CURRENT('OfficialTask'))
	
	else
	set @temp = (SELECT IDENT_CURRENT('OfficialTask'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','OT');
        if(@P_OfficialTaskID is null or @P_OfficialTaskID =0)
	begin
	insert into [dbo].[OfficialTask]([ReferenceNumber],[Date],[SourceOU],[SourceName],[OfficialTaskType],[StartDate],[EndDate]
		,[NumberofDays],[OfficialTaskDescription],[Comments],[DeleteFlag],[CreatedBy],[UpdatedBy],[CreatedDateTime],[UpdatedDateTime])
	select @ReferenceNumber,@P_Date,@P_SourceOU,@P_SourceName,@P_OfficialTaskType,@P_StartDate,@P_EndDate,@P_NumberofDays,@P_OfficialTaskDescription,@P_Comments,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_OfficialTaskID = (SELECT IDENT_CURRENT('OfficialTask'))
     
	insert into [dbo].[OfficialTaskCommunicationHistory]
	select @P_OfficialTaskID,@P_Comments,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime
  	
	end
	Else
	begin
	update [dbo].[OfficialTask] set Date = @P_Date,SourceOU = @P_SourceOU ,SourceName = @P_SourceName ,OfficialTaskType = @P_OfficialTaskType,StartDate = @P_StartDate,EndDate= @P_EndDate,NumberofDays = @P_NumberofDays,OfficialTaskDescription = @P_OfficialTaskDescription,Comments =@P_Comments,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where OfficialTaskID=@P_OfficialTaskID

	if(@P_Action = 'MarkasComplete')
	begin
		if ((select Cast (DATEADD(DAY, 5, @P_EndDate) as Date)) < (select cast (GETDATE() as Date)))
		set @P_Action = 'Close'		
	end

   	insert into [dbo].[OfficialTaskCommunicationHistory]
	select @P_OfficialTaskID,@P_Comments,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime

	end

	SELECT OfficialTaskID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[OfficialTask]
	where OfficialTaskID=@P_OfficialTaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_OfficialTaskCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_OfficialTaskCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_OfficialTaskID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into [dbo].[OfficialTaskCommunicationHistory]
		select  @P_OfficialTaskID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('OfficialTaskCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_OfficialTaskEmployeeName]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_OfficialTaskEmployeeName]-- null,42,'',

	@P_OfficialTaskEmployeeNameID int = null,
	@P_OfficialTaskID int = null,	
	@P_UserID nvarchar(250) = null,
	@P_Type int =0
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	if(@P_Type >1 and @P_OfficialTaskID is not null)
	update [OfficialTaskEmployeeName] set [DeleteFlag]=1  where [OfficialTaskID] = @P_OfficialTaskID and UserID=@P_UserID


	if(@P_Type = 1 and @P_OfficialTaskID is not null)	
	begin
	insert into [dbo].[OfficialTaskEmployeeName]
	select @P_OfficialTaskID,@P_UserID,0
	set @P_OfficialTaskEmployeeNameID = (SELECT IDENT_CURRENT('OfficialTaskEmployeeName'))
	end
		
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Photo]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Photo]

	@P_PhotoID int = null,
	@P_EventName nvarchar(250) = null,
	@P_PhotoDescription nvarchar(250) = null,	
	@P_Date datetime = null,
	@P_Location nvarchar(MAX) = null,
	@P_MediaManager nvarchar(250) = null,
	@P_MediaStaff nvarchar(250) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_PhotoID is null or @P_PhotoID =0)
	begin
	insert into [dbo].[Photo]
	select @P_EventName,@P_PhotoDescription,@P_Date,@P_Location,@P_MediaManager,@P_MediaStaff,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_PhotoID = (SELECT IDENT_CURRENT('Photo'))
	end
	Else
	begin
	update [dbo].[Photo] set EventName=@P_EventName,PhotoDescription=@P_PhotoDescription,Date=@P_Date,Location=@P_Location,MediaManager=@P_MediaManager,MediaStaff=@P_MediaStaff,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where PhotoID=@P_PhotoID
	end

	SELECT @P_PhotoID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_PhotoCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_PhotoCommunicationHistory]
	@P_CommunicationID int=0 ,
	@P_PhotoID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_Action nvarchar(255) = null,
	@P_CreatedBy int=	null,
	@P_CreatedDateTime datetime= null
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_CommunicationID is null or @P_CommunicationID =0)
	begin
		insert into MediaPhotoRequestCommunicationHistory(PhotoID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
		select  @P_PhotoID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('MediaPhotoRequestCommunicationHistory'))
	end
	SELECT @P_CommunicationID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_Photographers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Photographers]

	@P_PhotographersID int = null,
	@P_EventName nvarchar(250) = null,	
	@P_Datetime datetime = null,
	@P_Location nvarchar(MAX) = null,
	@P_MediaManager nvarchar(250) = null,
	@P_MediaStaff nvarchar(250) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_PhotographersID is null or @P_PhotographersID =0)
	begin
	insert into [dbo].[Photographers]
	select @P_EventName,@P_Datetime,@P_Location,@P_MediaManager,@P_MediaStaff,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_PhotographersID = (SELECT IDENT_CURRENT('Photographers'))
	end
	Else
	begin
	update [dbo].[Photographers] set EventName=@P_EventName,Datetime=@P_Datetime,Location=@P_Location,MediaManager=@P_MediaManager,MediaStaff=@P_MediaStaff,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where PhotographersID=@P_PhotographersID
	end

	SELECT @P_PhotographersID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_PhotoRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_PhotoRequest]   ******/
CREATE PROCEDURE [dbo].[Save_PhotoRequest]  
	-- Add the parameters for the stored procedure here
	@P_PhotoID int = null,
	@P_Date datetime = null,
	@P_SourceOU nvarchar(255) = null,
	@P_SourceName nvarchar(255) = null,
	@P_EventName nvarchar(255) = null,
	@P_EventDate datetime = null,
	@P_Location nvarchar (255) = null,
	@P_PhotoDescription nvarchar(Max)= null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy  int= null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Message nvarchar(Max) = null,
	@P_ParentCommunicationID int =null,
	@P_Action nvarchar(100)= null,
	@P_Comments nvarchar(max)= null,
	@P_DelegateUser int=null,
	@P_ApproverDepartmentId int = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
		 declare @P_ReferenceNumber nvarchar(255) = null, @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('MediaPhotoRequest'))+1
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MP');

	if(@P_PhotoID is null or @P_PhotoID =0)
	begin
	insert into [MediaPhotoRequest] ([ReferenceNumber],[Date],[SourceOU],[SourceName],[EventName],[EventDate],[Location],[DeleteFlag], [CreatedBy] ,[CreatedDateTime],[PhotoDescription])
	select @P_Referencenumber,@P_Date,@P_SourceOU,@P_SourceName,@P_EventName,@P_EventDate,@P_Location,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_PhotoDescription
	set @P_PhotoID = (SELECT IDENT_CURRENT('MediaPhotoRequest'))
	insert into [dbo].[MediaPhotoRequestCommunicationHistory]([PhotoID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID])
	select @P_PhotoID,@P_Action,@P_CreatedBy,@P_CreatedDateTime,@P_Comments,@P_ParentCommunicationID
    
	set @temp = (SELECT IDENT_CURRENT('MediaPhotoRequest'))
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','MP');

	update [MediaPhotoRequest] set ReferenceNumber=@P_ReferenceNumber where PhotoID=@P_PhotoID

	end

Else

	
	if(@P_PhotoID is not NUll)
	begin
	update [MediaPhotoRequest] set  Date=@P_Date,SourceOU=@P_SourceOU,SourceName=@P_SourceName,EventName=@P_EventName,EventDate=@P_EventDate,Location=@P_Location,PhotoDescription=@P_PhotoDescription,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where PhotoID=@P_PhotoID
	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 92) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select c.ReferenceNumber from MediaPhotoRequest as c
	  where PhotoID = @P_PhotoID) and (W.Status = 92)order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.ReferenceNumber from MediaPhotoRequest as m where m.PhotoID=@P_PhotoID)) =92)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end


	insert into [dbo].[MediaPhotoRequestCommunicationHistory]([PhotoID],[Action],[CreatedBy],[CreatedDateTime],[Message],[ParentCommunicationID],DelegateUser)
	select @P_PhotoID,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_Comments,@P_ParentCommunicationID,@P_DelegateUser

	end

	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update  [MediaPhotoRequest] set [ApproverDepartmentID] = @P_ApproverDepartmentId where PhotoID=@P_PhotoID


select PhotoID,ReferenceNumber as ReferenceNumber ,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID from [MediaPhotoRequest] where PhotoID=@P_PhotoID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Photos]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Photos]

	@P_PhotoID int = null,
	@P_AttachmentGuid nvarchar(Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_ExpiryDate datetime = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	
	if(@P_PhotoID is null or @P_PhotoID =0)
	begin 
		 insert into[dbo].[Photos](AttachmentGuid,AttachmentName,ExpiryDate,[CreatedBy],[CreatedDateTime],DeleteFlag)
		select @P_AttachmentGuid, @P_AttachmentName,@P_ExpiryDate,@P_CreatedBy,@P_CreatedDateTime,@P_DeleteFlag
		
		set @P_PhotoID = (SELECT IDENT_CURRENT('Photos'))
		
	end
	Else if(@P_DeleteFlag != 1)
	begin
		
		update [dbo].[Photos] set AttachmentGuid=@P_AttachmentGuid,AttachmentName=@P_AttachmentName,ExpiryDate=@P_ExpiryDate,UpdatedBy=@P_UpdatedBy,
		UpdatedDateTime=@P_UpdatedDateTime,DeleteFlag=@P_DeleteFlag where PhotoID=@P_PhotoID
			end
	else
	begin
	update [dbo].[Photos] set DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where PhotoID=@P_PhotoID
	end

	SELECT @P_PhotoID as PhotoID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Press]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Press]

	@P_PressID int = null,
	@P_Requestor nvarchar(250) = null,
	@P_PressType nvarchar(250) = null,
	@P_Subject nvarchar(250) = null,	
	@P_EventName nvarchar(250) = null,		
	@P_Date datetime = null,
	@P_Location nvarchar(MAX) = null,
	@P_AttendedBy nvarchar(250) = null,
	@P_Partners nvarchar(250) = null,
	@P_MediaManager nvarchar(250) = null,
	@P_MediaStaff nvarchar(250) = null,	
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_PressID is null or @P_PressID =0)
	begin
	insert into [dbo].[Press]
	select @P_Requestor,@P_PressType,@P_Subject,@P_EventName,@P_Date,@P_Location,@P_AttendedBy,@P_Partners,@P_MediaManager,@P_MediaStaff,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_PressID = (SELECT IDENT_CURRENT('Press'))
	end
	Else
	begin
	update [dbo].[Press] set Requestor=@P_Requestor,PressType=@P_PressType,Subject=@P_Subject,EventName=@P_EventName,Date=@P_Date,Location=@P_Location,AttendedBy=@P_AttendedBy,Partners=@P_Partners,MediaManager=@P_MediaManager,MediaStaff=@P_MediaStaff,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where PressID=@P_PressID
	end

	SELECT @P_PressID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_ShareparticipationUsers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_ShareparticipationUsers]  ******/
CREATE PROCEDURE [dbo].[Save_ShareparticipationUsers] --103,1,'Memo',null,0
	@P_ServiceId int = null,	
	@P_UserID int = null,
	@P_Type nvarchar(100)= null,
	@P_CreatorID int = null,
	@P_Comments nvarchar(max) = null
AS
BEGIN
	SET NOCOUNT ON;
	
	insert into [dbo].[ShareparticipationUsers]
	select @P_ServiceId,@P_UserID,@P_Type

	insert into MemoHistory
	select @P_ServiceId,'Share',@P_CreatorID,(select GETUTCDATE()),@P_Comments,null

	SELECT IDENT_CURRENT('ShareparticipationUsers')	
END
GO
/****** Object:  StoredProcedure [dbo].[Save_SubEvent]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Save_SubEvent]

	@P_SubEventID int = null,
	@P_EventID int = null,
	@P_EventCreationType nvarchar(250) = null,
	@P_EventType nvarchar(250) = null,
	@P_EventName nvarchar(250) = null,	
	@P_EventDetails nvarchar(250) = null,	
	@P_FromDate datetime = null,
	@P_ToDate datetime = null,
	@P_AllDay nvarchar (250) = null,
	@P_Location nvarchar (250) = null,
	@P_Approver nvarchar (250) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_SubEventID is null or @P_SubEventID =0)
	begin

	--INSERT INTO [dbo].[BulkEvent](EventID,ReferenceNumber,EventCreationType,EventType,EventName,EventDetails,FromDate,ToDate,AllDay,Location,Approver,Attachments,AttachmentName,DeleteFlag,CreatedBy,UpdatedBy,CreatedDateTime,UpdatedDateTime,Status)
	insert into [dbo].[SubEvent]
	select @P_EventID,@P_EventCreationType,@P_EventType,@P_EventName,@P_EventDetails,@P_FromDate,@P_ToDate,@P_AllDay,@P_Location,@P_Approver,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_SubEventID = (SELECT IDENT_CURRENT('SubEvent'))
	end
	Else
	begin
	update [dbo].[SubEvent] set EventID=@P_EventID,EventCreationType=@P_EventCreationType,EventType=@P_EventType,EventName=@P_EventName,EventDetails=@P_EventDetails,FromDate=@P_FromDate,ToDate=@P_ToDate,AllDay=@P_AllDay,Location=@P_Location,Approver=@P_Approver,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where SubEventID=@P_SubEventID
	end

	SELECT @P_SubEventID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Task]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[Save_Task]

	@P_TaskID int = null,
	@P_TaskTitle nvarchar(Max) = null,
	@P_SelectCategory nvarchar(250) = null,
	@P_TaskStartDate datetime = null,
	@P_TaskDescription nvarchar(Max) = null,
	@P_TaskDueDate datetime = null,
	@P_Assignee nvarchar(250) = null,
	@P_Participants nvarchar(MAX) = null,
	@P_TaskPriority nvarchar (250) = null,
	@P_Reminder datetime = null,
	@P_Attachments nvarchar (Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_CommunicationBoard nvarchar (Max) = null,
	@P_TaskLinkToMemo nvarchar (Max) = null,
	@P_TaskLinkToLetters nvarchar (Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Status nvarchar(250) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_TaskID is null or @P_TaskID =0)
	begin
	insert into [dbo].[Task]
	select @P_TaskTitle,@P_SelectCategory,@P_TaskStartDate,@P_TaskDescription,@P_TaskDueDate,@P_Assignee,@P_Participants,@P_TaskPriority,@P_Reminder,@P_Attachments,@P_AttachmentName,@P_CommunicationBoard,@P_TaskLinkToMemo,@P_TaskLinkToLetters,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_Status
	set @P_TaskID = (SELECT IDENT_CURRENT('Task'))
	end
	Else
	begin
	update [dbo].[Task] set TaskTitle=@P_TaskTitle,SelectCategory=@P_SelectCategory,TaskStartDate=@P_TaskStartDate,TaskDescription=@P_TaskDescription,TaskDueDate=@P_TaskDueDate,Assignee=@P_Assignee,Participants=@P_Participants,TaskPriority=@P_TaskPriority,Reminder=@P_Reminder,Attachments=@P_Attachments,AttachmentName=@P_AttachmentName,CommunicationBoard=@P_CommunicationBoard,TaskLinkToMemo=@P_TaskLinkToMemo,TaskLinkToLetters=@P_TaskLinkToLetters,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Status=@P_Status
	where TaskID=@P_TaskID
	end

	SELECT @P_TaskID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Training]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_Training] -- [Save_Training] null,'nivetha etsbfir','nivetha'

	@P_TrainingID int = null,
	@P_SourceOU nvarchar(250) = null,
	@P_SourceName nvarchar(250) = null,
	@P_TrainingFor bit = 0,
	@P_TraineeName nvarchar(250) = null,
	@P_TrainingName nvarchar(250) = null,
	@P_ApproverDepartmentID int = null,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null,	
	
	@P_Action nvarchar(250) = null,
	@P_Comment nvarchar(250) = null,
	@P_CreatedBy nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_DeleteFlag bit = 0,
	@P_UpdatedBy  nvarchar(250) = null,	
	@P_UpdatedDateTime datetime = null,
    @P_DelegateUser int= null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;

	 declare @P_Referencenumber nvarchar(255) = null,   @currentApprover int = null, @DelegateUser int
	declare @temp int = null
	set @temp = (SELECT IDENT_CURRENT('Training'))
	
	if(@P_TrainingID is null or @P_TrainingID =0)
	begin
	insert into [dbo].[Training] ([SourceOU],[SourceName],[TrainingFor],[TraineeName],[TrainingName],[StartDate],[EndDate],[DeleteFlag],[CreatedBy],[CreatedDateTime])
	select @P_SourceOU,@P_SourceName,@P_TrainingFor,@P_TraineeName,@P_TrainingName,@P_StartDate,@P_EndDate,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	
	set @temp = (select SCOPE_IDENTITY());
	set @P_TrainingID = (select SCOPE_IDENTITY());
	select  @P_Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','TR');
	
	update [dbo].[Training]  set  [TrainingReferenceID]=@P_Referencenumber where TrainingID=@temp


	insert into [dbo].[TrainingCommunicationHistory](TrainingID,Message,ParentCommunicationID,Action,CreatedBy,CreatedDateTime)
	select @temp,@P_Comment,0,@P_Action,@P_CreatedBy,@P_CreatedDateTime

	SELECT top 1 [TrainingID],[TrainingReferenceID] as ReferenceNumber,CreatedBy as CreatorID, 
	(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID,(select top 1 Status from [dbo].[Workflow] where [ReferenceNumber] = @P_Referencenumber order by WorkflowID desc) as CurrentStatus from [Training] order by TrainingID desc

	end
	Else
	begin
	update [dbo].[Training] set [SourceOU]=@P_SourceOU,[SourceName]=@P_SourceName,[TrainingFor]=@P_TrainingFor,TraineeName=@P_TraineeName,TrainingName=@P_TrainingName,
	[StartDate]=@P_StartDate,[EndDate]=@P_EndDate,DeleteFlag=@P_DeleteFlag,
	UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where TrainingID=@P_TrainingID

	declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		Status int,
		delegateuser nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,Status,DelegateToEmail from [dbo].[Workflow]where (Status = 42) order by WorkflowID desc

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1
	
		set @currentApprover = ( select UserProfileId from [dbo].[UserProfile] where OfficialMailId = (
	  (select top 1 W.ToEmail from workflow W where W.ReferenceNumber =(select a.TrainingReferenceID from Training as a 
	  where TrainingID = @P_TrainingID) and (W.Status = 42 )order by WorkflowID desc)))
	 

		declare @RequestList table(	
		ReferenceNumber nvarchar(max),
		WorkflowProcess nvarchar(max),
		FromName nvarchar(250),
		ToName nvarchar(250),
		Status nvarchar(250),
		FromEmail nvarchar(255),
		ToEmail nvarchar(255))

		declare @Result table(
		id INT IDENTITY(1, 1) primary key,
		DOANameID int,
		StartDate datetime,
		EndDate datetime,
		Creator int )

		insert into @RequestList
		select  [ReferenceNumber],[WorkflowProcess],[FromName],[ToName],[Status],[FromEmail],[ToEmail]
		from [dbo].[Workflow] where CreatedDateTime in  (select max(CreatedDateTime)
		from [dbo].[Workflow] group by ReferenceNumber) 

		insert into @Result
		SELECT DOANameID,StartDate,EndDate,CreatedBy
		from [dbo].[Leave] l join @RequestList w on l.[ReferenceNumber] = w.[ReferenceNumber]   and (l.[DeleteFlag] is not null or l.[DeleteFlag] !=0) 
		and (w.Status = 11)

		declare @P_DeletgateUserID int =0;
		select @P_DeletgateUserID = [DOANameID] from @Result where Creator = @currentApprover and (select GETDATE()) >= [StartDate] 
		and (select GETDATE()) <= EndDate 

			if(@P_UpdatedBy = @P_DeletgateUserID and (select top 1 Status from @Workflow where ReferenceNumber=(select m.TrainingReferenceID from Training as m where m.TrainingID=@P_TrainingID)) =42)
			begin
			set @P_UpdatedBy = @currentApprover
			set @P_DelegateUser= @P_DeletgateUserID
			end
		

	insert into [dbo].[TrainingCommunicationHistory]
	select @P_TrainingID,@P_Comment,0,@P_Action,@P_UpdatedBy,@P_UpdatedDateTime,@P_DelegateUser

	SELECT top 1 [TrainingID],[TrainingReferenceID] as ReferenceNumber,CreatedBy as CreatorID, 
	(case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as FromID,TraineeName as TraineeID, 
	(select top 1 Status from [dbo].[Workflow] where [ReferenceNumber] = [TrainingReferenceID] order by WorkflowID desc) as CurrentStatus
	from [Training] where TrainingID=@P_TrainingID

	end
	
	if(@P_Action ='Approve' and (select top(1) Status from [dbo].[Workflow] where [ReferenceNumber]=
	(select[TrainingReferenceID] from [dbo].[Training] where TrainingID=@P_TrainingID) order by[WorkflowID] desc ) = 43)
	update [Training] set [IsHrHeadApproved]=1  where TrainingID=@P_TrainingID
	
	
	if(@P_Action = 'Save' or @P_Action='Submit' or @P_Action ='Resubmit')
	update [dbo].[Training] set [ApproverDepartmentID]=@P_ApproverDepartmentID where TrainingID=@P_TrainingID

END

GO
/****** Object:  StoredProcedure [dbo].[Save_TrainingCommunicationHistory]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_TrainingCommunicationHistory] --[Save_TrainingCommunicationHistory] 2,'bcwinfiwe',0,'user1'
	@P_CommunicationID int=0 ,
	@P_TrainingID int = 0	,
	@P_Message  nvarchar(max)= null,
	@P_ParentCommunicationID int = 0,
	@P_CreatedBy nvarchar(max) =	0,
	@P_CreatedDateTime datetime= null,
	@P_Type  int = 0
AS
BEGIN	
	SET NOCOUNT ON;
	if(@P_Type= 0 and (@P_CommunicationID is null or @P_CommunicationID =0))
	begin
		insert into [dbo].[TrainingCommunicationHistory]([TrainingID],[Message],[ParentCommunicationID],
		[Action],[CreatedBy],[CreatedDateTime])
		select  @P_TrainingID,@P_Message,@P_ParentCommunicationID,null,@P_CreatedBy,@P_CreatedDateTime
		set @P_CommunicationID = (SELECT IDENT_CURRENT('TrainingCommunicationHistory'))
	end
	else
	begin	
		insert into [dbo].[TrainingCommunicationHistory]
		select @P_TrainingID,null,0,'TrainingAttendance',@P_CreatedBy,GETUTCDATE(),null

	end
	SELECT @P_CommunicationID
END

GO
/****** Object:  StoredProcedure [dbo].[Save_TripCoPassengers]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Save_TripCoPassengers] --15,null,null,null,0
	@P_TripCoPassengerID int = null,
	@P_VehicleReqID int = null,	
	@P_UserID int = null,
	@P_CoPassengerID nvarchar(250) = null,
	@P_OthersCoPassengerName nvarchar(250)=null,
	@P_Type int = 1
AS
BEGIN
	--select * from TripCoPassengers
	SET NOCOUNT ON;
	if(@P_Type = 1)
	begin
	insert into [dbo].[TripCoPassengers](VehicleReqID,CoPassengerID,DeleteFlag,OtherCoPassengerName)
	select @P_VehicleReqID,@P_CoPassengerID,0,@P_OthersCoPassengerName
	set @P_TripCoPassengerID = (SELECT IDENT_CURRENT('TripCoPassengers'))
	end
	
	if(@P_Type >1)
	begin
	update [dbo].[TripCoPassengers] set [DeleteFlag] =1
	where VehicleReqID=@P_VehicleReqID and [CoPassengerID] = @P_CoPassengerID
	end

	SELECT @P_TripCoPassengerID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_TripVehicleIssues]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_TripVehicleIssues]    ******/
CREATE PROCEDURE [dbo].[Save_TripVehicleIssues] --Save_TripVehicleIssues '',12,12,1,0

	@P_TripVehicleIssueID int = null,
	@P_VehicleReqID int = 12,		
	@P_IssueID nvarchar(250) = 1,
	@P_Type int = 1,
	@P_UserID int = null	
AS
BEGIN
	--select * from TripCoPassengers
	SET NOCOUNT ON;


	if(@P_Type = 1)
	begin
	insert into [dbo].[TripVehicleIssues]
	select @P_VehicleReqID,@P_IssueID,0,case when (select Count(*) from VehicleHistory where VehiclReqID =@P_VehicleReqID and Action = 'Release')>0 then 1 else 0 end
	set @P_TripVehicleIssueID = (SELECT IDENT_CURRENT('TripVehicleIssues'))
	end
	
	--if(@P_Type >1)
	--begin
	--update [dbo].[TripVehicleIssues] set [DeleteFlag] =1
	--where VehicleReqID=@P_VehicleReqID and [IssueID] = @P_IssueID
	--end

	SELECT @P_TripVehicleIssueID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_User]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Save_User]

	@P_UserID int = null,
	@P_EmployeeName nvarchar(250) = null,	
	@P_EmployeePhoto nvarchar(250) = null,	
	@P_LoginUser nvarchar(250) = null,
	@P_OfficialEmailID nvarchar(250) = null,
	@P_PersonalEmailID nvarchar(250) = null,
	@P_OrgHead bit = null,
	@P_OrgUnitID nvarchar(250) = null,
	@P_RoleID nvarchar(250) = null,
	@P_Gender nvarchar(250) = null,
	@P_Birthday datetime = null,
	@P_Age nvarchar(250) = null,	
	@P_BirthPlace nvarchar(250) = null,
	@P_MobileNumber nvarchar(250) = null,
    @P_EmployeePhoneNumber nvarchar(250) = null,	
	@P_Religion nvarchar(250) = null,
	@P_Nationality nvarchar(250) = null,
	@P_PreviousNationality nvarchar(250) = null,	
	@P_PassportNumber nvarchar(250) = null,
	@P_PassportIssuePlace nvarchar(250) = null,
	@P_PassportIssueDate datetime = null,
	@P_PassportExpiryDate datetime = null,
	@P_ResidenceNumber nvarchar(250) = null,
	@P_ResidenceIssuePlace nvarchar(250) = null,
	@P_ResidenceIssuedate datetime = null,
	@P_EnteringDate datetime = null,
	@P_JoinDate datetime = null,
	@P_ContractTypes nvarchar(250) = null,	
	@P_WorkAddress nvarchar(250) = null,
	@P_EmploymentStatus nvarchar(250) = null,
	@P_Salary nvarchar(250) = null,	
	@P_EmiratesID nvarchar(250) = null,
	@P_EmiratesIDValidityDate datetime = null,
	@P_IsResigned nvarchar(250) = null,	
	@P_LeaveBalance nvarchar(250) = null,
	@P_DegreeID nvarchar(250) = null,
	@P_Qualification nvarchar(250) = null,	
	@P_Email nvarchar(250) = null,
	@P_GraduationDate datetime = null,
	@P_TrainingList nvarchar(250) = null,	
	@P_CompanyDetailsID nvarchar(250) = null,
	@P_ValidityDate datetime = null,
	@P_Attachments nvarchar (Max) = null,
	@P_AttachmentName nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
	
	

AS
BEGIN
	
	SET NOCOUNT ON;
	if(@P_UserID is null or @P_UserID =0)
	begin
	insert into [dbo].[User]
	select @P_EmployeeName,@P_EmployeePhoto,@P_LoginUser,@P_OfficialEmailID,@P_PersonalEmailID,@P_OrgHead,@P_OrgUnitID,@P_RoleID,@P_Gender,@P_Birthday,@P_Age,@P_BirthPlace,@P_MobileNumber,@P_EmployeePhoneNumber,@P_Religion,@P_Nationality,@P_PreviousNationality,@P_PassportNumber,@P_PassportIssuePlace,@P_PassportIssueDate,@P_PassportExpiryDate,@P_ResidenceNumber,@P_ResidenceIssuePlace,@P_ResidenceIssuedate,@P_EnteringDate,@P_JoinDate,@P_ContractTypes,@P_WorkAddress,@P_EmploymentStatus,@P_Salary,@P_EmiratesID,@P_EmiratesIDValidityDate,@P_IsResigned,@P_LeaveBalance,@P_DegreeID,@P_Qualification,@P_Email,@P_GraduationDate,@P_TrainingList,@P_CompanyDetailsID,@P_ValidityDate,@P_Attachments,@P_AttachmentName,@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime
	set @P_UserID = (SELECT IDENT_CURRENT('User'))
	end
	Else
	begin
	update [dbo].[User] set EmployeeName=@P_EmployeeName,EmployeePhoto=@P_EmployeePhoto,LoginUser=@P_LoginUser,OfficialEmailID=@P_OfficialEmailID,PersonalEmailID=@P_PersonalEmailID,[IsOrgHead]=@P_OrgHead,OrgUnitID=@P_OrgUnitID,RoleID=@P_RoleID,Gender=@P_Gender,Birthday=@P_Birthday,Age=@P_Age,BirthPlace=@P_BirthPlace,MobileNumber=@P_MobileNumber,EmployeePhoneNumber=@P_EmployeePhoneNumber,Religion=@P_Religion,Nationality=@P_Nationality,PreviousNationality=@P_PreviousNationality,PassportNumber=@P_PassportNumber,PassportIssuePlace=@P_PassportIssuePlace,PassportIssueDate=@P_PassportIssueDate,PassportExpiryDate=@P_PassportExpiryDate,ResidenceNumber=@P_ResidenceNumber,ResidenceIssuePlace=@P_ResidenceIssuePlace,ResidenceIssuedate=@P_ResidenceIssuedate,EnteringDate=@P_EnteringDate,JoinDate=@P_JoinDate,ContractTypes=@P_ContractTypes,WorkAddress=@P_WorkAddress,EmploymentStatus=@P_EmploymentStatus,Salary=@P_Salary,EmiratesID=@P_EmiratesID,EmiratesIDValidityDate=@P_EmiratesIDValidityDate,IsResigned=@P_IsResigned,LeaveBalance=@P_LeaveBalance,DegreeID=@P_DegreeID,Qualification=@P_Qualification,Email=@P_Email,GraduationDate=@P_GraduationDate,TrainingList=@P_TrainingList,CompanyDetailsID=@P_CompanyDetailsID,ValidityDate=@P_ValidityDate,Attachments=@P_Attachments,AttachmentName=@P_AttachmentName,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	where UserID=@P_UserID
	end

	SELECT @P_UserID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_UserProfile]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_UserProfile]  ******/
CREATE PROCEDURE [dbo].[Save_UserProfile]
	-- Add the parameters for the stored procedure here
	@P_EmployeeCode nvarchar(250)=null,
	@P_UserProfileId int = null,
	@P_EmployeeName nvarchar(250) = null,	
	@P_LoginUser nvarchar(250) = null,
	@P_OfficialMailId nvarchar(250) = null,
	@P_PersonalMailId nvarchar(250) = null,
	@P_IsOrgHead bit = null,
	@P_OrgUnitID int = null,
	@P_Gender nvarchar(250) = null,
	@P_BirthDate datetime = null,
	@P_Age int = 0,	
	@P_CountryofResidence int = null,
	@P_MobileNumber nvarchar(250) = null,
    @P_EmployeePhoneNumber nvarchar(250) = null,	
	@P_Religion int = null,
	@P_Nationality int = null,
	@P_PreviousNationality nvarchar(250) = null,
	@P_JoinDate datetime = null,	
	@P_Title nvarchar(250) = null,
	@P_Grade nvarchar(250) = null,
	@P_EmployeePosition nvarchar(250) = null,
    @P_EmploymentStatus nvarchar(250) = null,
	@P_Resigned nvarchar(250) = null,	
	@P_ResignationDate datetime = null,
	@P_BalanceLeave int = 0,
	@P_NotificationPreferencesEmail nvarchar(250) = null,
	@P_NotificationPreferencesSMS nvarchar(250) = null,
	@P_PassportNumber nvarchar(250) = null,
	@P_PassportIssuePlace nvarchar(250) = null,
	@P_PassportIssueDate datetime = null,
	@P_PassportExpiryDate datetime = null,
	@P_VisaNumber nvarchar(250) = null,
	@P_VisaIssueDate datetime = null,
	@P_VisaExpiryDate datetime = null,
	@P_EmiratesIdNumber nvarchar(250) = null,
	@P_EmiratesIdIssueDate datetime = null,
	@P_EmiratesIdExpiryDate datetime = null,
	@P_InsuranceNumber nvarchar(250) = null,
	@P_InsuranceIssueDate datetime = null,
	@P_InsuranceExpiryDate datetime = null,
	@P_LabourContractNumber nvarchar(250) = null,
	@P_LabourContractIssueDate datetime = null,
	@P_LabourContractExpiryDate datetime = null,
	@P_Action nvarchar(100)= null,
	@P_Comment nvarchar(Max) = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy int = null,
	@P_UpdatedBy  int = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_RoleId nvarchar(250) = null,
	@P_EmployeePhoto nvarchar(250) = null,
	@P_ResidenceNumber nvarchar(250) = null,
	@P_ResidenceIssuePlace nvarchar(250) = null,
	@P_ResidenceIssueDate datetime = null,
	@P_EnteringDate datetime = null,
	@P_WorkAddress nvarchar(250) = null,
	@P_GraduationDate datetime = null,
	@P_BirthPlace nvarchar(250) = null,
	@P_Salary nvarchar(250) = null,
	@P_ContractTypes nvarchar(250) = null,
	@P_ProfilePhotoID nvarchar(max) = null,
	@P_ProfilePhotoName nvarchar(max) = null,
	@P_SignaturePhoto nvarchar(max) = null,
	@P_SignaturePhotoID nvarchar(max) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		

	set @P_NotificationPreferencesEmail = case when @P_NotificationPreferencesEmail = 'Email' then 1 else 0 end
	set @P_NotificationPreferencesSMS = case when @P_NotificationPreferencesSMS = 'SMS' then 1 else 0 end

	if(@P_UserProfileId is null or @P_UserProfileId =0)
	begin
	insert into [dbo].[UserProfile] ([EmployeeName],[EmployeeCode],[LoginUser],[OfficialMailId],[PersonalMailId],[IsOrgHead],[OrgUnitID],[Gender],[BirthDate],[Age],[CountryofResidence],[MobileNumber],[EmployeePhoneNumber],[Religion],[Nationality],[PreviousNationality],[JoinDate],[Title],[Grade],[EmployeePosition],[EmploymentStatus],[Resigned],[ResignationDate],[BalanceLeave],[NotificationPreferencesEmail],[NotificationPreferencesSMS],[PassportNumber],[PassportIssuePlace],[PassportIssueDate],[PassportExpiryDate],[VisaNumber],[VisaIssueDate],[VisaExpiryDate],[EmiratesIdNumber],[EmiratesIdIssueDate],[EmiratesIdExpiryDate],[InsuranceNumber],[InsuranceIssueDate],[InsuranceExpiryDate],[LabourContractNumber],[LabourContractIssueDate],[LaborContractExpiryDate],[RoleId],[EmployeePhoto],[ResidenceNumber],[ResidenceIssuePlace],[ResidenceIssueDate],[EnteringDate],[WorkAddress],[GraduationDate],[BirthPlace],[Salary],[ContractTypes],[DeleteFlag],[CreatedBy],[CreatedDateTime],ProfilePhotoID,ProfilePhotoName,SignaturePhoto,SignaturePhotoID)
	select @P_EmployeeName,@P_EmployeeCode,@P_LoginUser,@P_OfficialMailId,@P_PersonalMailId,@P_IsOrgHead,@P_OrgUnitID,@P_Gender,@P_BirthDate,@P_Age,@P_CountryofResidence,@P_MobileNumber,@P_EmployeePhoneNumber,@P_Religion,@P_Nationality,@P_PreviousNationality,@P_JoinDate,@P_Title,@P_Grade,@P_EmployeePosition,@P_EmploymentStatus,@P_Resigned,@P_ResignationDate,@P_BalanceLeave,@P_NotificationPreferencesEmail,@P_NotificationPreferencesSMS,@P_PassportNumber,@P_PassportIssuePlace,@P_PassportIssueDate,@P_PassportExpiryDate,@P_VisaNumber,@P_VisaIssueDate,@P_VisaExpiryDate,@P_EmiratesIdNumber,@P_EmiratesIdIssueDate,@P_EmiratesIdExpiryDate,@P_InsuranceNumber,@P_InsuranceIssueDate,@P_InsuranceExpiryDate,@P_LabourContractNumber,@P_LabourContractIssueDate,@P_LabourContractExpiryDate,@P_RoleId,@P_EmployeePhoto,@P_ResidenceNumber,@P_ResidenceIssuePlace,@P_ResidenceIssueDate,@P_EnteringDate,@P_WorkAddress,@P_GraduationDate,@P_BirthPlace,@P_Salary,@P_ContractTypes,@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime
	,@P_ProfilePhotoID,@P_ProfilePhotoName, @P_SignaturePhoto, @P_SignaturePhotoID
	set @P_UserProfileId = (SELECT IDENT_CURRENT('UserProfile'))
	end
	Else
	begin
	update [dbo].[UserProfile] set [EmployeeName]=@P_EmployeeName,EmployeeCode=@P_EmployeeCode,[LoginUser]=@P_LoginUser,[OfficialMailId]=@P_OfficialMailId,[PersonalMailId]=@P_PersonalMailId,[IsOrgHead]=@P_IsOrgHead,OrgUnitID=@P_OrgUnitID,[Gender]=@P_Gender,[BirthDate]=@P_BirthDate,[Age]=@P_Age,[CountryofResidence]=@P_CountryofResidence,[MobileNumber]=@P_MobileNumber,[EmployeePhoneNumber]=@P_EmployeePhoneNumber,[Religion]=@P_Religion,[Nationality]=@P_Nationality,[PreviousNationality]=@P_PreviousNationality,[JoinDate]=@P_JoinDate,[Title]=@P_Title,[Grade]=@P_Grade,[EmployeePosition]=@P_EmployeePosition,[EmploymentStatus]=@P_EmploymentStatus,[Resigned]=@P_Resigned,[ResignationDate]=@P_ResignationDate,[BalanceLeave]=@P_BalanceLeave,[PassportNumber]=@P_PassportNumber,[PassportIssuePlace]=@P_PassportIssuePlace,[PassportIssueDate]=@P_PassportIssueDate,[PassportExpiryDate]=@P_PassportExpiryDate,[VisaNumber]=@P_VisaNumber,[VisaIssueDate]=@P_VisaIssueDate,
	[VisaExpiryDate]=@P_VisaExpiryDate,[EmiratesIdNumber]=@P_EmiratesIdNumber,[EmiratesIdIssueDate]=@P_EmiratesIdIssueDate,[EmiratesIdExpiryDate]=@P_EmiratesIdExpiryDate,[InsuranceNumber]=@P_InsuranceNumber,[InsuranceIssueDate]=@P_InsuranceIssueDate,[InsuranceExpiryDate]=@P_InsuranceExpiryDate,[LabourContractNumber]=@P_LabourContractNumber,[LabourContractIssueDate]=@P_LabourContractIssueDate,[LaborContractExpiryDate]=@P_LabourContractExpiryDate,[RoleId]=@P_RoleId,[EmployeePhoto]=@P_EmployeePhoto,[ResidenceNumber]=@P_ResidenceNumber,[ResidenceIssuePlace]=@P_ResidenceIssuePlace,[ResidenceIssueDate]=@P_ResidenceIssueDate,[EnteringDate]=@P_EnteringDate,[WorkAddress]=@P_WorkAddress,[GraduationDate]=@P_GraduationDate,[BirthPlace]=@P_BirthPlace,[Salary]=@P_Salary,[ContractTypes]=@P_ContractTypes,[DeleteFlag]=@P_DeleteFlag,[UpdatedBy]=@P_UpdatedBy,[UpdatedDateTime]=@P_UpdatedDateTime
	,[NotificationPreferencesSMS]=@P_NotificationPreferencesSMS,SignaturePhoto=@P_SignaturePhoto, [NotificationPreferencesEmail] = @P_NotificationPreferencesEmail,ProfilePhotoID=@P_ProfilePhotoID,ProfilePhotoName=@P_ProfilePhotoName, SignaturePhotoID=@P_SignaturePhotoID
	where UserProfileId=@P_UserProfileId
	end

	select UserProfileId,EmployeeCode,ReferenceNumber from [UserProfile] where UserProfileId=@P_UserProfileId
END
GO
/****** Object:  StoredProcedure [dbo].[Save_UserProfileEducation]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_UserProfileEducation]    ******/
CREATE PROCEDURE [dbo].[Save_UserProfileEducation]
	-- Add the parameters for the stored procedure here
	@P_UserProfileEducationId int = null,
	@P_UserProfileId int = null,	
	@P_Degree nvarchar(250) = null,
	@P_SchoolCollege nvarchar(250) = null,
	@P_FieldStudy nvarchar(250) = null,
	@P_TimePeriodFrom datetime = null,
	@P_TimePeriodTo datetime = null,
	@P_Type nvarchar(100)= null,
	@P_UserProfileEducationAllID nvarchar(255) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	--if(@P_UserProfile is not null)
	--update CircularDestinationDepartment set [DeleteFlag]=1  where [CircularID] = @P_CircularID and DepartmentID=@P_DepartmentID

		if(( @P_UserProfileEducationId is  null or @P_UserProfileEducationId =0) and @P_Type != 'Delete')	
	begin
	insert into [dbo].[UserProfileEducation]
	select @P_UserProfileId,@P_Degree,@P_SchoolCollege,@P_FieldStudy,@P_TimePeriodFrom,@P_TimePeriodTo,0
	set @P_UserProfileEducationId = (SELECT IDENT_CURRENT('UserProfileEducation'))
	end
	else if( @P_Type != 'Delete')
	begin
	update [dbo].[UserProfileEducation] set [UserProfileId] =@P_UserProfileId ,[Degree] =@P_Degree ,[SchoolCollege] =@P_SchoolCollege ,[FieldStudy] =@P_FieldStudy
			 ,[TimePeriodFrom] = @P_TimePeriodFrom,[TimePeriodTo] = @P_TimePeriodTo where [UserProfileEducationId] = @P_UserProfileEducationId
	end

	else if( @P_Type = 'Delete')
	begin
		update [dbo].[UserProfileEducation] set [DeleteFlag] =0 where [UserProfileEducationId] 
		not in (select value from string_split(@P_UserProfileEducationAllID,','))
		and UserProfileId = @P_UserProfileId
	end

END
GO
/****** Object:  StoredProcedure [dbo].[Save_UserProfileTrainingCertifications]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_UserProfileTrainingCertifications] ******/
CREATE PROCEDURE [dbo].[Save_UserProfileTrainingCertifications]
	-- Add the parameters for the stored procedure here
	@P_UserProfileTrainingCertificationsId int = null,
	@P_UserProfileId int = null,	
	@P_TrainingName nvarchar(max) = null,
	@P_StartDate datetime = null,
	@P_EndDate datetime = null,
		@P_Type nvarchar(100)= null,
	@P_UserProfileTrainingCertificationsAllId nvarchar(255) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	--if(@P_UserProfile is not null)
	--update CircularDestinationDepartment set [DeleteFlag]=1  where [CircularID] = @P_CircularID and DepartmentID=@P_DepartmentID

		if( (@P_UserProfileTrainingCertificationsId is  null or @P_UserProfileTrainingCertificationsId =0) and @P_Type!='Delete')	
	begin
	insert into [dbo].[UserProfileTrainingCertifications](UserProfileId,TrainingName,StartDate,EndDate,DeleteFlag)
	select @P_UserProfileId,@P_TrainingName,@P_StartDate,@P_EndDate,0
	set @P_UserProfileTrainingCertificationsId = (SELECT IDENT_CURRENT('UserProfileTrainingCertifications'))
	end

	else if(  @P_Type!='Delete')	
	begin
	update [dbo].[UserProfileTrainingCertifications]
	set [UserProfileId]=@P_UserProfileId,[TrainingName]=@P_TrainingName,[StartDate]=@P_StartDate,[EndDate]=@P_EndDate
	where [UserProfileTrainingCertificationsId] = @P_UserProfileTrainingCertificationsId
	end

	else if( @P_Type ='Delete')	
	begin
	update [dbo].[UserProfileTrainingCertifications]
	set [DeleteFlag]=1
	where [UserProfileTrainingCertificationsId] not in (select value from string_split(@P_UserProfileTrainingCertificationsAllId,','))
	and UserProfileId = @P_UserProfileId
	end
	
	select @P_UserProfileTrainingCertificationsId
END
GO
/****** Object:  StoredProcedure [dbo].[Save_UserProfileWorkExperience]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_UserProfileWorkExperience]  ******/
CREATE PROCEDURE [dbo].[Save_UserProfileWorkExperience]
	-- Add the parameters for the stored procedure here
	@P_UserProfileWorkExperienceId int = null,
	@P_UserProfileId int = null,	
	@P_JobTitle nvarchar(250) = null,
	@P_Company nvarchar(250) = null,
	@P_City nvarchar(250) = null,
	@P_TimePeriodFrom datetime = null,
	@P_TimePeriodTo datetime = null,
		@P_Type nvarchar(100)= null,
	@P_UserProfileWorkExperienceAllId nvarchar(255) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	--if(@P_UserProfile is not null)
	--update CircularDestinationDepartment set [DeleteFlag]=1  where [CircularID] = @P_CircularID and DepartmentID=@P_DepartmentID
	if( (@P_UserProfileWorkExperienceId is  null or @P_UserProfileWorkExperienceId = 0) and @P_Type !='Delete')	
	begin
	insert into [dbo].[UserProfileWorkExperience]
	select @P_UserProfileId,@P_JobTitle,@P_Company,@P_City,@P_TimePeriodFrom,@P_TimePeriodTo,0
	set @P_UserProfileWorkExperienceId = (SELECT IDENT_CURRENT('UserProfileWorkExperience'))
	end
	else if( @P_Type !='Delete') 	
	begin
	Update  [dbo].[UserProfileWorkExperience]
	set [UserProfileId]=@P_UserProfileId,[JobTitle]=@P_JobTitle,[Company]=@P_Company,[City]=@P_City,[TimePeriodFrom]=@P_TimePeriodFrom,[TimePeriodTo]=@P_TimePeriodTo
	where [UserProfileWorkExperienceId]=@P_UserProfileWorkExperienceId 
	end

	else if(@P_Type ='Delete')	
	begin
	Update  [dbo].[UserProfileWorkExperience]
	set [DeleteFlag] = 1
	where [UserProfileWorkExperienceId] not in (select value from string_split(@P_UserProfileWorkExperienceAllId,',')) 
	and UserProfileId = @P_UserProfileId
	end

END
GO
/****** Object:  StoredProcedure [dbo].[Save_VehicleFine]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_VehicleFine]  ******/
CREATE PROCEDURE [dbo].[Save_VehicleFine]
	@P_VehicleFineID int = null,
	@P_VehicleModelID nvarchar(MAX) = null,
	@P_VehicleID int = null,
    @P_FineNumber nvarchar(50) = null,
	@P_FinedDate datetime = null,
	@P_Location nvarchar(100) = null,
	@P_BlackPoints int = null,	
	@P_Status int = 0,
	@P_Description nvarchar(MAX)=null,
	@P_EmailTo nvarchar(250)=null,
	@P_EmailCCDepartmentID int= null,
	@P_EmailCCUserID int = null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null
AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null, @temp int = null,@DriverID int = 0;

	if((select count(*) from VehicleFines) = 0)
       set @temp = (SELECT IDENT_CURRENT('VehicleFines'))	
	else
		set @temp = (SELECT IDENT_CURRENT('VehicleFines'))+1

	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','VF');
   
   if(@P_VehicleFineID is null or @P_VehicleFineID =0)
	begin
		set @DriverID = (select (case when VR.DriverID is null then VR.TobeDrivenbyDriverID else VR.DriverID end) from VehicleRequest as VR where @P_VehicleID = VR.VehicleID
			and @P_FinedDate between VR.TripPeriodFrom and VR.TripPeriodTo)

		insert into [dbo].[VehicleFines]( [ReferenceNumber]  ,[VehicleModelID]  ,[FineNumber] 
		 ,[FinedDate]  ,[Location] ,[BlackPoints] ,[Status] ,[Description]  ,[EmailTo] ,
		 [EmailCCDepartmentID] ,[EmailCCUserID]  ,[DeleteFlag] ,[CreatedBy]  ,[CreatedDateTime]  , VehicleID,DriverID )
		select @ReferenceNumber,@P_VehicleModelID,@P_FineNumber,@P_FinedDate,@P_Location,
		@P_BlackPoints,@P_Status,@P_Description,@P_EmailTo,@P_EmailCCDepartmentID,@P_EmailCCUserID,
		@P_DeleteFlag,@P_CreatedBy,@P_CreatedDateTime,@P_VehicleID,@DriverID

		set @P_VehicleFineID = (SELECT IDENT_CURRENT('VehicleFines'))   
		select @P_VehicleFineID

		set @DriverID = (select (case when VR.DriverID is null then VR.TobeDrivenbyDriverID else VR.DriverID end) from VehicleRequest as VR where @P_VehicleID = VR.VehicleID
			and @P_FinedDate between VR.TripPeriodFrom and VR.TripPeriodTo)
	end
	Else
	begin
		update [dbo].[VehicleFines] set VehicleModelID = @P_VehicleModelID,FineNumber = @P_FineNumber , FinedDate=@P_FinedDate,Location=@P_Location,BlackPoints=@P_BlackPoints,Status=@P_Status,Description=@P_Description,
		EmailTo=@P_EmailTo,EmailCCDepartmentID=@P_EmailCCDepartmentID, EmailCCUserID=@P_EmailCCUserID,
		DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
		where VehicleFineID=@P_VehicleFineID
	end

	SELECT VehicleFineID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[VehicleFines]
	where VehicleFineID=@P_VehicleFineID

END
GO
/****** Object:  StoredProcedure [dbo].[Save_VehicleRequest]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_VehicleRequest]    ******/
CREATE PROCEDURE [dbo].[Save_VehicleRequest]

	@P_VehicleReqID int = null,
    @P_RequestType int = null,
	@P_Requestor int = null,
	@P_RequestDateTime datetime = null,
	@P_DriverID int = null,	
	@P_TobeDrivenbyDepartmentID int = null,
	@P_TobeDrivenbyDriverID int=null,
	@P_TripTypeID int=null,
	@P_TripTypeOthers nvarchar(max) = null,
	@P_Emirates int = null,
	@P_City int = null,
	@P_Destination int = null,
	@P_DestinationOthers nvarchar(max) = null,
	@P_TripPeriodFrom datetime = null,
	@P_TripPeriodTo datetime = null,
	@P_VehicleModelID int = null,
	@P_ApproverDepartment int = null,
	@P_ApproverName int = null,
	@P_ReleaseDateTime datetime = null,
	@P_LastMileageReading int = null,
	@P_ReleaseLocationID int = null,
	@P_ReturnDateTime datetime = null,
	@P_CurrentMileageReading int = null,
	@P_HavePersonalBelongings bit = null,
	@P_PersonalBelongingsText nvarchar(max)= null,	
	@P_VehicleID int = 0,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Notes nvarchar(max) = 0,
	@P_ReturnLocationID int = null,
	@P_Action nvarchar(max) = null,
	@P_Reason nvarchar(max) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Vehicles) = 0)
       set @temp = (SELECT IDENT_CURRENT('VehicleRequest'))
	
	else
	set @temp = (SELECT IDENT_CURRENT('VehicleRequest'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','VR');
        if(@P_VehicleReqID is null or @P_VehicleReqID =0)
	begin
	insert into [dbo].[VehicleRequest]
	select @ReferenceNumber,@P_RequestType,@P_Requestor,@P_RequestDateTime,@P_DriverID,@P_TobeDrivenbyDepartmentID,
	@P_TobeDrivenbyDriverID,@P_TripTypeID,@P_TripTypeOthers,@P_Emirates,@P_City,
	@P_Destination,@P_DestinationOthers,@P_TripPeriodFrom,@P_TripPeriodTo,@P_VehicleModelID,
	@P_ApproverDepartment,@P_ApproverName,@P_ReleaseDateTime,@P_LastMileageReading,@P_ReleaseLocationID,
	@P_ReturnDateTime,@P_CurrentMileageReading,@P_HavePersonalBelongings,@P_PersonalBelongingsText,	
	@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_VehicleID,@P_Notes,@P_ReturnLocationID
	,@P_Reason

	set @P_VehicleReqID = (SELECT IDENT_CURRENT('VehicleRequest'))   

  	--select * from VehicleDetails
	end
	Else
	begin
	update [dbo].[VehicleRequest] set RequestType = @P_RequestType,Requestor = @P_Requestor ,RequestDateTime=@P_RequestDateTime,DriverID=@P_DriverID,TobeDrivenbyDepartmentID=@P_TobeDrivenbyDepartmentID,TobeDrivenbyDriverID=@P_TobeDrivenbyDriverID,TripTypeID=@P_TripTypeID,
	TripTypeOthers=@P_TripTypeOthers,Emirates=@P_Emirates,City=@P_City,Destination=@P_Destination,DestinationOthers=@P_DestinationOthers,
	TripPeriodFrom=@P_TripPeriodFrom,TripPeriodTo=@P_TripPeriodTo,VehicleModelID =@P_VehicleModelID,
	ApproverDepartment = @P_ApproverDepartment,ApproverName=@P_ApproverName,
	ReleaseDateTime = @P_ReleaseDateTime,LastMileageReading=@P_LastMileageReading,ReleaseLocationID=@P_ReleaseLocationID,
	ReturnDateTime = @P_ReturnDateTime,CurrentMileageReading=@P_CurrentMileageReading,
	HavePersonalBelongings = @P_HavePersonalBelongings,PersonalBelongingsText = @P_PersonalBelongingsText,
	VehicleID=@P_VehicleID,ReturnLocationID=@P_ReturnLocationID,
	Notes=@P_Notes,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime,Reason=@P_Reason
	where VehicleReqID=@P_VehicleReqID 
	end

	If(@P_Action = 'Return')
	update Vehicles set CurrentMileage = @P_CurrentMileageReading where VehicleID = @P_VehicleID

	if(@P_Action ='Release')
	Update Vehicles set RequestorID = @P_Requestor,CurrentMileage = @P_LastMileageReading where VehicleID = @P_VehicleID

	insert into VehicleHistory([VehiclReqID], [Action], [ActionBy], [ActionDateTime])
	SELECT VehicleReqID,@P_Action,CreatedBy,GETUTCDATE() from [dbo].[VehicleRequest]
	where VehicleReqID=@P_VehicleReqID 

	SELECT VehicleReqID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[VehicleRequest]
	where VehicleReqID=@P_VehicleReqID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Vehicles]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



/****** Object:  StoredProcedure [dbo].[Save_Vehicles] ******/
CREATE PROCEDURE [dbo].[Save_Vehicles]

	@P_VehicleID int = null,
    @P_PlateNumber nvarchar(50) = null,
	@P_PlateColor nvarchar(50) = null,
	@P_VehicleMake nvarchar(100) = null,
	@P_VehicleModel nvarchar(100) = null,	
	@P_YearofManufacture int = null,
	@P_CarCompanyID int=null,
	@P_ContractNumber nvarchar(50)=null,
	@P_ContractDuration int= null,
	@P_ContractStartDate datetime= null,
	@P_ContractEndDate datetime= null,
	@P_VehicleRegistrationNumber nvarchar(50)= null,
	@P_VehicleRegistrationExpiry datetime= null,
	@P_NextService int= null,
	@P_TyreChange int= null,
	@P_Notes nvarchar(max)= null,
	@P_DeleteFlag bit = 0,
	@P_CreatedBy nvarchar(250) = null,
	@P_UpdatedBy  nvarchar(250) = null,
	@P_CreatedDateTime datetime = null,
	@P_UpdatedDateTime datetime = null,
	@P_Action nvarchar(250) = null,
	@P_VehicleName nvarchar(255) = null,
	@P_IsAlternativeVehicle nvarchar(max) = null
	

AS
BEGIN
	
	SET NOCOUNT ON;
	 declare @Referencenumber nvarchar(255) = null
	declare @temp int = null
	if((select count(*) from Vehicles) = 0)
       set @temp = (SELECT IDENT_CURRENT('Vehicles'))
	
	else
	set @temp = (SELECT IDENT_CURRENT('Vehicles'))+1
	select  @Referencenumber =concat((Right(concat('0','0',@temp),3)),'-',(SELECT YEAR((select GETDATE()))),'-','VD');
        if(@P_VehicleID is null or @P_VehicleID =0)
	begin
	insert into [dbo].[Vehicles]
	 ([ReferenceNumber],[PlateNumber],[PlateColor],[VehicleMake],[VehicleModel]
      ,[YearofManufacture],[CarCompanyID],[ContractNumber],[ContractDuration]
      ,[ContractStartDate],[ContractEndDate],[VehicleRegistrationNumber]
      ,[VehicleRegistrationExpiry],[NextService] ,[TyreChange] ,[Notes],[DeleteFlag],[CreatedBy]
      ,[UpdatedBy],[CreatedDateTime],[UpdatedDateTime] ,[VehicleName],CurrentMileage,IsAlternativeVehicle)
	select @ReferenceNumber,@P_PlateNumber,@P_PlateColor,@P_VehicleMake,@P_VehicleModel,@P_YearofManufacture,
	@P_CarCompanyID,@P_ContractNumber,@P_ContractDuration,@P_ContractStartDate,@P_ContractEndDate,
	@P_VehicleRegistrationNumber,@P_VehicleRegistrationExpiry,@P_NextService,@P_TyreChange,@P_Notes,
	@P_DeleteFlag,@P_CreatedBy,@P_UpdatedBy,@P_CreatedDateTime,@P_UpdatedDateTime,@P_VehicleName,0,@P_IsAlternativeVehicle

	set @P_VehicleID = (SELECT IDENT_CURRENT('Vehicles'))   

  	--select * from VehicleDetails
	end
	Else
	begin
	update [dbo].[Vehicles] set PlateNumber = @P_PlateNumber,PlateColor = @P_PlateColor , VehicleMake=@P_VehicleMake,VehicleModel=@P_VehicleModel,YearofManufacture=@P_YearofManufacture,CarCompanyID=@P_CarCompanyID,ContractNumber=@P_ContractNumber,
	ContractDuration=@P_ContractDuration,ContractStartDate=@P_ContractStartDate,ContractEndDate=@P_ContractEndDate,VehicleRegistrationNumber=@P_VehicleRegistrationNumber,VehicleRegistrationExpiry=@P_VehicleRegistrationExpiry,
	NextService=@P_NextService,TyreChange=@P_TyreChange,VehicleName = @P_VehicleName,
	Notes=@P_Notes,DeleteFlag=@P_DeleteFlag,UpdatedBy=@P_UpdatedBy,UpdatedDateTime=@P_UpdatedDateTime
	,IsAlternativeVehicle=@P_IsAlternativeVehicle
	where VehicleID=@P_VehicleID 

	end

	SELECT VehicleID,ReferenceNumber,CreatedBy as CreatorID, (case when (UpdatedBy is null) then CreatedBy else UpdatedBy end) as   FromID from [dbo].[Vehicles]
	where VehicleID=@P_VehicleID
END
GO
/****** Object:  StoredProcedure [dbo].[Save_Workflow]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/****** Object:  StoredProcedure [dbo].[Save_Workflow]   ******/
CREATE PROCEDURE [dbo].[Save_Workflow]

	@P_ReferenceNumber nvarchar(250) = null,	
	@P_Service nvarchar(250) = null,	
	@P_ServiceID int = 0,	
	@P_WorkflowProcess nvarchar(250) = null,
	@P_FromName nvarchar(250) = null,
	@P_FromEmail nvarchar(250) = null,
	@P_ToName nvarchar(250) = null,
	@P_ToEmail nvarchar(250) = null,
	@P_Status int = null	,
	@P_DelegateFromEmail nvarchar(255) = null,
	@P_DelegateFromName nvarchar(255) = null,
	@P_DelegateToEmail nvarchar(255) = null,
	@P_DelegateToName nvarchar(255) = null

AS
BEGIN
	INSERT INTO [dbo].[Workflow]([ReferenceNumber],[Service],[WorkflowProcess],[FromName],[FromEmail],[ToName],[ToEmail],[Status],CreatedDateTime,
								DelegateFromEmail,DelegateFromName,DelegateToEmail,DelegateToName)
	VALUES(@P_ReferenceNumber,@P_Service,@P_WorkflowProcess,@P_FromName,@P_FromEmail,@P_ToName,@P_ToEmail,@P_Status, GETDATE(),
			@P_DelegateFromEmail,@P_DelegateFromName,@P_DelegateToEmail,@P_DelegateToName)
	Select (SELECT IDENT_CURRENT('Workflow'))
END
GO
/****** Object:  StoredProcedure [dbo].[VehicleReport]    Script Date: 28-Dec-19 10:23:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE  [dbo].[TrainingNotification]

AS
BEGIN

	SET NOCOUNT ON;

Declare @result table(
TrainingID int,
ReferenceNumber nvarchar(255),
FromEmail nvarchar(max),
FromName nvarchar(255),
ToEmail nvarchar(max),
ToName nvarchar(255),
WorkflowProcess nvarchar(255),
Service nvarchar(255),
TrainingName nvarchar(255),
TraineeID int,
StartDate datetime,
EndDate datetime
)

insert into @result
select  top 1 with ties
T.TrainingID,t.TrainingReferenceID,w.FromEmail,w.FromName,up.OfficialMailId,up.EmployeeName,w.WorkflowProcess,w.Service
,t.TrainingName,t.TraineeName,t.StartDate,t.EndDate
from Workflow as w inner join Training as t on w.ReferenceNumber=t.TrainingReferenceID and t.IsNotificationReceived=0
and w.Status=45 and cast(GETUTCDATE() as date) >= cast(EndDate as date) inner join UserProfile as up on up.UserProfileId=t.TraineeName
order by row_number() over (partition by w.ReferenceNumber order by w.WorkflowID desc)
	
insert into Notification (ServiceID,ReferenceNumber,Service,Process,IsRead,FromEmail,ToEmail,IsAnonymous,LastUpdateDate)
select t.TrainingID,t.ReferenceNumber,Service,'TrainingNotificationWorkflow',0,t.FromEmail,t.ToEmail,0,GETUTCDATE()
from @result as t

Insert into UserProfileTrainingCertifications(UserProfileId,TrainingName,StartDate,EndDate,DeleteFlag,TrainingRequestID)
select t.TraineeID,t.TrainingName,t.StartDate,t.EndDate,0,t.TrainingID from @result as t

update Training set IsNotificationReceived=1 where TrainingID in (select t.TrainingID from @result as t)


select * from @result

END
GO
/****** Object:  StoredProcedure [dbo].[VehicleReport]    Script Date: 15-Feb-20 3:51:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
	 
	 CREATE PROCEDURE [dbo].[VehicleReport]  --[VehicleReport] 1,20,2,3,0
	-- Add the parameters for the stored procedure here
	@P_PageNumber int =0,
	@P_PageSize int =0,	
	@P_UserID int= 0,
	@P_Method int = 0,	
	@P_Status nvarchar(250)=null,
	@P_RequestType nvarchar(250) = null,
	@P_Requestor nvarchar(250) = null,		
	@P_TripDateFrom datetime = null,
	@P_TripDateTo datetime = null,
	@P_Destination nvarchar(250) =null,
	@P_RequestorOfficeDepartment nvarchar(250)=null,
	@P_SmartSearch nvarchar(max) = null,
	@P_Language nvarchar(10)= 'EN'
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	 
	--declare @P_UserID int = 2, @MinCount int, @MaxCount int , @P_RequestType nvarchar(250) = 'Training'

	declare  @RefCout int =0, @StartNo int =0, @EndNo int =0,@Count int =0,@P_UserEmail nvarchar(max)=null;

	select @RefCout=(@P_PageNumber - 1) * @P_PageSize;
	select @StartNo =(@RefCout + 1);
	select @EndNo=@RefCout + @P_PageSize;

declare @UserName nvarchar(250), @UserEmail nvarchar(250)
	 SET @UserName = (Select [EmployeeName] from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 SET @UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	  SET @P_UserEmail = (Select OfficialMailId from [dbo].[UserProfile] where UserProfileId = @P_UserID)
	 

	  declare @VehicleUsers table(
	  UserID int,
	  UserEmail nvarchar(250)) 

	  --GET HR users
	  insert into @VehicleUsers
	  select UserProfileId,OfficialMailId from [dbo].[UserProfile] where [OrgUnitID] = 3
	  --select * from @HRUsers

declare @Result table(
	id INT IDENTITY(1, 1) primary key,
	VehicleReqID int ,
	ReferenceNumber nvarchar(max),
	RequestTypeID nvarchar(50),
	RequestorName nvarchar(50),
	RequestorOfficeDepartment nvarchar(50),
	TripDateFrom datetime,
	TripDateTo datetime,
	City nvarchar(50),
	Destination nvarchar(50),
	Status nvarchar(max),
	RequestDate datetime,	
	StatusCode int,
	UpdatedDateTime datetime,
	createdby int,
	TripTimeFrom nvarchar(255),
	TripTimeTo nvarchar(255),
	RequestType nvarchar(255),
	Emirites nvarchar(255),
	RequestDateTime nvarchar(max),
	Approver nvarchar(max),
	TripType nvarchar(max),
	TripTypeOther nvarchar(max),
	Notes nvarchar(max) )

 declare @Workflow table(
		WorkflowID int,
		ReferenceNumber nvarchar(max),
		ToEmail nvarchar(max),
		FromEmail nvarchar(max),
		Status int,
		WorkflowProcess nvarchar(max),
		DelegateTOEmail nvarchar(max)
		);

		insert into @Workflow
		select WorkflowID,ReferenceNumber,ToEmail,FromEmail, Status,WorkflowProcess,DelegateToEmail from [dbo].[Workflow] 

		;WITH CTE AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY WorkflowID desc
		) RowNumber
		FROM  @Workflow
		)
		DELETE FROM CTE WHERE RowNumber > 1

		--select * from @Workflow

   --My Pending Request
   insert into @Result
   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,
		 ( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination, (select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
  ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
   ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end)  from M_Emirates where EmiratesID=V.Emirates),
   (select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                     V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))as RequestDateTime
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	, (select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID) 
	,TripTypeOthers,V.Notes from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where     
        (  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.ToEmail ))
		or (@P_UserID in (select UserProfileId from dbo.UserProfile where OrgUnitID=13) and (r.Status!=218 and r.Status !=214 and r.Status!=215 and r.Status!=216 and r.Status!=217) )) order by V.[VehicleReqID] desc
		 

   --My Own Requests
	insert into @Result
   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination,(select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
  ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
    ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end) from M_Emirates where EmiratesID=V.Emirates)
	,(select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                      V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	,(select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID)
	,TripTypeOthers,V.Notes from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] where   @P_UserID=V.CreatedBy order by V.[VehicleReqID] desc
	 
	 --My Processed Request
	  insert into @Result

   select VehicleReqID,V.ReferenceNumber,RequestType,(select EmployeeName from UserProfile where UserProfileID =Requestor),
   ( select (case when @P_Language ='EN' then DepartmentName else ArDepartmentName end) from M_Department 
	       where DepartmentID = (select U.DepartmentID from UserProfile as U where UserProfileID =Requestor)) as RequestorOfficeDepartment,TripPeriodFrom,TripPeriodTo,( select (case when @P_Language ='EN' then CityName else ArCityName end) from M_City 
	       where CityID = V.City) as City,
   ( select (case when @P_Language ='EN' then TripDestinationENValue else TripDestinationARValue end) from M_TripDestination 
	       where TripDestinationID = V.Destination) as Destination,(select case when @P_Language='EN' then L.DisplayName
		    else L.ArDisplayName end from M_Lookups as L where LookupsID = r.Status),RequestDateTime,
   r.Status,UpdatedDateTime,V.CreatedBy, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset,  TripPeriodFrom),   DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	, (select (SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, SWITCHOFFSET(CONVERT(datetimeoffset, 
       TripPeriodTo),  DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))
	   ,(select (case when @P_Language ='EN' then DisplayName else ArDisplayName end) from M_Lookups where Module='VehicleRequestType' and Category=RequestType) as RequestType
	     ,(select (case when @P_Language='EN' then EmiratesName else ArEmiratesName end) from M_Emirates where EmiratesID=V.Emirates)
		 ,(select (concat((SELECT  CONVERT(nvarchar(10), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as date), 103)),' ',(SELECT  CONVERT(nvarchar(120), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                      V.RequestDateTime), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  as time), 100)))))
	,(select EmployeeName from UserProfile where UserProfileId= V.ApproverName)
	,(select (case when @P_Language = 'EN' then TripTypeENValue else TripTypeARValue end) from M_TripType where TripTypeID = V.TripTypeID)
	,TripTypeOthers,V.Notes	from VehicleRequest as V join @Workflow r on r.[ReferenceNumber] =V.[ReferenceNumber] 
   where  ( @P_UserID in (select UserProfileId from [dbo].[UserProfile] where OfficialMailId = r.FromEmail and r.WorkflowProcess !='SubmissionWorkflow' )) order by V.[VehicleReqID] desc


   if(@P_Language='AR')
   begin
		Update @Result set TripTimeFrom = REPLACE(TripTimeFrom,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set TripTimeFrom = REPLACE(TripTimeFrom,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
		Update @Result set TripTimeTo = REPLACE(TripTimeTo,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set TripTimeTo = REPLACE(TripTimeTo,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'AM',(select ArDisplayName from M_Lookups where DisplayName='AM'))
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'PM',(select ArDisplayName from M_Lookups where DisplayName='PM'))
   end
   else
	begin
	if(@P_RequestorOfficeDepartment ='Protocol')
	set @P_RequestorOfficeDepartment = (select DepartmentName from M_Department where DepartmentID=1)
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'AM',' AM')
		Update @Result set RequestDateTime = REPLACE(RequestDateTime,'PM',' PM')
	end

   ;WITH RelatedLetter AS 
		(
		SELECT ReferenceNumber, ROW_NUMBER() OVER 
		(
		    PARTITION BY ReferenceNumber ORDER BY VehicleReqID desc
		) RowNumber
		FROM  @Result
		)
		DELETE FROM RelatedLetter WHERE RowNumber > 1
		
		
		  if(@P_Status!='' and @P_Status is not null)
		  delete from @Result where Status ! = @P_Status
		  
		  if(@P_RequestType!='' and @P_RequestType is not null)
		  delete from @Result where RequestType !=@P_RequestType

		  if(@P_Requestor !='' and @P_Requestor is not null)
		  delete from @Result where RequestorName!=@P_Requestor

		  if(@P_Destination !='' and @P_Destination is not null)
		  delete from @Result where Destination !=@P_Destination

		  if(@P_RequestorOfficeDepartment !=''and @P_RequestorOfficeDepartment is not null)
		  delete from @Result where RequestorOfficeDepartment !=@P_RequestorOfficeDepartment

		  if(@P_TripDateFrom is not null)
	      delete from @result where (SELECT CONVERT(date, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  < cast(@P_TripDateFrom as date)

	     if(@P_TripDateTo is not null)
	     delete from @result where (SELECT CONVERT(date, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))))  > cast(@P_TripDateTo as date)

		   
 if(@P_SmartSearch is not null and @P_Method = 0 )
	 begin
		select * from (SELECT row_number() over (Order By ReferenceNumber desc) as slno,
		 * from @result as a where 
		((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestorName  like '%'+@P_SmartSearch+'%') or (RequestorOfficeDepartment like '%'+@P_SmartSearch+'%') or
		( City like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or(RequestType  like @P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103)) like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103))  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(Destination like '%'+@P_SmartSearch+'%')or (Emirites like '%'+@P_SmartSearch+'%') or  (RequestDateTime like '%'+@P_SmartSearch+'%')
       or(Approver like '%'+@P_SmartSearch+'%')or(TripTimeFrom like '%'+@P_SmartSearch+'%')or(TripTimeTo like '%'+@P_SmartSearch+'%')
		or (TripType like '%'+@P_SmartSearch+'%')or (TripTypeOther like '%'+@P_SmartSearch+'%')or (Notes like '%'+@P_SmartSearch+'%')))
	as m	where slno between @StartNo and @EndNo 
	 end

	  if(@P_SmartSearch is not null and @P_Method = 1 )
	 begin
		select count(*) from @result as a where 
	((ReferenceNumber  like '%'+@P_SmartSearch+'%') or (RequestorName  like '%'+@P_SmartSearch+'%') or (RequestorOfficeDepartment like '%'+@P_SmartSearch+'%') or
		( City like '%'+@P_SmartSearch+'%') or (Status  like '%'+@P_SmartSearch+'%') or(RequestType  like @P_SmartSearch+'%') or
		((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                    TripDateFrom), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103)) like '%'+@P_SmartSearch+'%')
		 or ((SELECT  CONVERT(nvarchar(100), cast((SELECT CONVERT(datetime, 
               SWITCHOFFSET(CONVERT(datetimeoffset, 
                                   TripDateTo), 
                            DATENAME(TzOffset, SYSDATETIMEOFFSET()))) ) as date), 103))  like '%'+@P_SmartSearch+'%') or
		 ((SELECT  CONVERT(nvarchar(10), cast(RequestDate as date), 103))  like '%'+@P_SmartSearch+'%')   or
		(Destination like '%'+@P_SmartSearch+'%')or (Emirites like '%'+@P_SmartSearch+'%') or  (RequestDateTime like '%'+@P_SmartSearch+'%')
       or(Approver like '%'+@P_SmartSearch+'%')or(TripTimeFrom like '%'+@P_SmartSearch+'%')or(TripTimeTo like '%'+@P_SmartSearch+'%')
		or (TripType like '%'+@P_SmartSearch+'%')or (TripTypeOther like '%'+@P_SmartSearch+'%')or (Notes like '%'+@P_SmartSearch+'%'))
     end

	 if(@P_Method = 0 and @P_SmartSearch is null)
	 select  * from (SELECT row_number() over (Order By ReferenceNumber desc ) as slno,
		 * from @result) as m where slno between @StartNo and @EndNo 

	 if(@P_Method = 1 and @P_SmartSearch is null)
	 select count(*) from @Result
 
  end  
  
GO
USE [master]
GO
ALTER DATABASE [RulersCourt] SET  READ_WRITE 
GO
